{"version":3,"file":"config-provider.js","sources":["../../src/config-provider/config-provider.tsx"],"sourcesContent":["import { defineComponent, PropType, provide, computed } from 'vue';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { GlobalConfigProvider } from './type';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { configProviderInjectKey, defaultGlobalConfig, mergeWith } from './context';\n\nexport default defineComponent({\n  name: 'TConfigProvider',\n\n  props: {\n    globalConfig: Object as PropType<GlobalConfigProvider>,\n  },\n\n  setup(props) {\n    const defaultData = cloneDeep(defaultGlobalConfig);\n    provide(\n      configProviderInjectKey,\n      computed(() => mergeWith(defaultData, props.globalConfig)),\n    );\n\n    const renderTNodeJSX = useTNodeJSX();\n\n    return () => <div>{renderTNodeJSX('default')}</div>;\n  },\n});\n"],"names":["defineComponent","name","props","globalConfig","Object","setup","defaultData","cloneDeep","defaultGlobalConfig","provide","configProviderInjectKey","computed","mergeWith","renderTNodeJSX","useTNodeJSX"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAMA,sBAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,iBADuB;AAG7BC,EAAAA,KAAO,EAAA;AACLC,IAAAA,YAAc,EAAAC,MAAAA;GAJa;EAO7BC,KAP6B,EAAA,SAAA,KAAA,CAOvBH,KAPuB,EAOhB;AACL,IAAA,IAAAI,WAAA,GAAcC,UAAUC,oBAAxB,CAAA;AACNC,IAAAA,OAAA,CACEC,uBADF,EAEEC,SAAS,YAAA;AAAA,MAAA,OAAMC,SAAA,CAAUN,WAAV,EAAuBJ,KAAA,CAAMC,YAA7B,CAAN,CAAA;AAAA,MAFX,CAAA,CAAA;IAKA,IAAMU,iBAAiBC,WAAY,EAAnC,CAAA;IAEA,OAAO,YAAA;MAAA,OAAYD,WAAAA,CAAAA,KAAAA,EAAAA,IAAAA,EAAAA,CAAAA,cAAe,CAAA,SAAA,CAA3B,CAAA,CAAA,CAAA;KAAP,CAAA;AACF,GAAA;AAjB6B,CAAA,CAA/B;;;;"}