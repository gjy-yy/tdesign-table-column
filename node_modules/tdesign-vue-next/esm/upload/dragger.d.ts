import { PropType } from 'vue';
import { UploadFile } from './type';
import { UploadConfig } from '../config-provider/type';
declare const _default: import("vue").DefineComponent<{
    file: {
        type: PropType<UploadFile>;
        default: () => UploadFile;
    };
    loadingFile: {
        type: PropType<UploadFile>;
        default: () => UploadFile;
    };
    percent: {
        type: NumberConstructor;
    };
    locale: {
        type: PropType<UploadConfig>;
        default: () => UploadConfig;
    };
    autoUpload: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: PropType<"file" | "custom" | "image" | "file-input" | "file-flow" | "image-flow">;
        default: "file" | "custom" | "image" | "file-input" | "file-flow" | "image-flow";
        validator(val: "file" | "custom" | "image" | "file-input" | "file-flow" | "image-flow"): boolean;
    };
    onCancel: PropType<(e: MouseEvent) => void>;
    onClick: PropType<(e: MouseEvent) => void>;
    onRemove: PropType<(e: MouseEvent) => void>;
    onUpload: PropType<(file: UploadFile, e: MouseEvent) => void>;
    onChange: PropType<(files: FileList) => void>;
    onDragleave: PropType<(e: DragEvent) => void>;
    onDragenter: PropType<(e: DragEvent) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    file: {
        type: PropType<UploadFile>;
        default: () => UploadFile;
    };
    loadingFile: {
        type: PropType<UploadFile>;
        default: () => UploadFile;
    };
    percent: {
        type: NumberConstructor;
    };
    locale: {
        type: PropType<UploadConfig>;
        default: () => UploadConfig;
    };
    autoUpload: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: PropType<"file" | "custom" | "image" | "file-input" | "file-flow" | "image-flow">;
        default: "file" | "custom" | "image" | "file-input" | "file-flow" | "image-flow";
        validator(val: "file" | "custom" | "image" | "file-input" | "file-flow" | "image-flow"): boolean;
    };
    onCancel: PropType<(e: MouseEvent) => void>;
    onClick: PropType<(e: MouseEvent) => void>;
    onRemove: PropType<(e: MouseEvent) => void>;
    onUpload: PropType<(file: UploadFile, e: MouseEvent) => void>;
    onChange: PropType<(files: FileList) => void>;
    onDragleave: PropType<(e: DragEvent) => void>;
    onDragenter: PropType<(e: DragEvent) => void>;
}>>, {
    file: UploadFile;
    theme: "file" | "custom" | "image" | "file-input" | "file-flow" | "image-flow";
    locale: UploadConfig;
    loadingFile: UploadFile;
    autoUpload: boolean;
}>;
export default _default;
