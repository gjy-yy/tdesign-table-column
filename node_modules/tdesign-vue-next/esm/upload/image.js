/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, createVNode } from 'vue';
import { AddIcon, DeleteIcon, BrowseIcon } from 'tdesign-icons-vue-next';
import { Loading } from '../loading/index.js';
import props from './props.js';
import { useFormDisabled } from '../form/hooks.js';
import { useGlobalIcon } from '../hooks/useGlobalIcon.js';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.js';
import { useConfig } from '../config-provider/useConfig.js';
import '../loading/directive.js';
import '../loading/plugin.js';
import '../loading/loading.js';
import '@babel/runtime/helpers/slicedToArray';
import '../loading/icon/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/default-config.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/type.js';
import '../utils/dom.js';
import '../_chunks/dep-756c7fb2.js';
import 'lodash/isString';
import '../utils/easing.js';
import '../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isFunction';
import 'lodash/isObject';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../utils/transfer-dom.js';
import '../loading/props.js';
import '../utils/withInstall.js';
import '../loading/style';
import '../loading/type.js';

var ImageCard = defineComponent({
  name: "TImageUpload",
  props: {
    files: props.files,
    loadingFile: {
      type: Object,
      "default": function _default() {
        return null;
      }
    },
    locale: {
      type: Object,
      "default": function _default() {
        return null;
      }
    },
    percent: Number,
    showUploadProgress: props.showUploadProgress,
    placeholder: props.placeholder,
    multiple: props.multiple,
    max: props.max,
    disabled: props.disabled,
    onClick: Function,
    onRemove: Function,
    onImgPreview: Function
  },
  setup: function setup(props2) {
    var disabled = useFormDisabled();

    var _useConfig = useConfig("upload"),
        prefix = _useConfig.classPrefix,
        globalConfig = _useConfig.globalConfig;

    var UPLOAD_NAME = usePrefixClass("upload");

    var _useGlobalIcon = useGlobalIcon({
      AddIcon: AddIcon,
      DeleteIcon: DeleteIcon,
      BrowseIcon: BrowseIcon
    }),
        AddIcon$1 = _useGlobalIcon.AddIcon,
        DeleteIcon$1 = _useGlobalIcon.DeleteIcon,
        BrowseIcon$1 = _useGlobalIcon.BrowseIcon;

    var _useCommonClassName = useCommonClassName(),
        STATUS = _useCommonClassName.STATUS;

    var showTrigger = computed(function () {
      var multiple = props2.multiple,
          max = props2.max,
          files = props2.files;

      if (multiple) {
        return !max || files && files.length < max;
      }

      return !(files && files[0]);
    });

    var onMaskClick = function onMaskClick(e) {
      !showTrigger.value && props2.onClick(e);
    };

    var renderCardItem = function renderCardItem(file, index) {
      return createVNode("li", {
        "class": "".concat(UPLOAD_NAME.value, "__card-item ").concat(prefix.value, "-is--background")
      }, [createVNode("div", {
        "class": "".concat(UPLOAD_NAME.value, "__card-content ").concat(UPLOAD_NAME.value, "__card-box")
      }, [createVNode("img", {
        "class": "".concat(UPLOAD_NAME.value, "__card-image"),
        "src": file.url
      }, null), createVNode("div", {
        "class": "".concat(UPLOAD_NAME.value, "__card-mask"),
        "onClick": onMaskClick
      }, [createVNode("span", {
        "class": "".concat(UPLOAD_NAME.value, "__card-mask-item")
      }, [createVNode(BrowseIcon$1, {
        "onClick": function onClick(_ref) {
          var e = _ref.e;
          e.stopPropagation();
          props2.onImgPreview(e, file);
        }
      }, null)]), !disabled.value && [createVNode("span", {
        "class": "".concat(UPLOAD_NAME.value, "__card-mask-item-divider"),
        "key": "divider"
      }, null), createVNode("span", {
        "class": "".concat(UPLOAD_NAME.value, "__card-mask-item"),
        "key": "delete-icon"
      }, [createVNode(DeleteIcon$1, {
        "onClick": function onClick(_ref2) {
          var e = _ref2.e;
          e.stopPropagation();
          props2.onRemove({
            e: e,
            file: file,
            index: index
          });
        }
      }, null)])]])])]);
    };

    var renderTrigger = function renderTrigger() {
      var _props2$locale, _props2$locale$progre, _props2$locale2, _props2$locale2$trigg;

      return createVNode("li", {
        "class": ["".concat(UPLOAD_NAME.value, "__card-item ").concat(prefix.value, "-is--background"), _defineProperty({}, STATUS.value.disabled, disabled.value)],
        "onClick": props2.onClick
      }, [props2.showUploadProgress && props2.loadingFile && props2.loadingFile.status === "progress" ? createVNode("div", {
        "class": "".concat(UPLOAD_NAME.value, "__card-container ").concat(UPLOAD_NAME.value, "__card-box")
      }, [createVNode(Loading, null, null), createVNode("p", null, [((_props2$locale = props2.locale) === null || _props2$locale === void 0 ? void 0 : (_props2$locale$progre = _props2$locale.progress) === null || _props2$locale$progre === void 0 ? void 0 : _props2$locale$progre.uploadingText) || globalConfig.value.progress.uploadingText, " ", Math.min(props2.percent, 99), "%"])]) : createVNode("div", {
        "class": "".concat(UPLOAD_NAME.value, "__card-container ").concat(UPLOAD_NAME.value, "__card-box")
      }, [createVNode(AddIcon$1, null, null), createVNode("p", {
        "class": "".concat(prefix.value, "-size-s")
      }, [props2.placeholder || ((_props2$locale2 = props2.locale) === null || _props2$locale2 === void 0 ? void 0 : (_props2$locale2$trigg = _props2$locale2.triggerUploadText) === null || _props2$locale2$trigg === void 0 ? void 0 : _props2$locale2$trigg.image) || globalConfig.value.triggerUploadText.image])])]);
    };

    return function () {
      return createVNode("ul", {
        "class": "".concat(UPLOAD_NAME.value, "__card")
      }, [props2.files && props2.files.map(function (file, index) {
        return renderCardItem(file, index);
      }), showTrigger.value && renderTrigger()]);
    };
  }
});

export { ImageCard as default };
//# sourceMappingURL=image.js.map
