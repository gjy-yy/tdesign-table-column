{"version":3,"file":"cmyk.js","sources":["../../../../src/_common/js/color-picker/cmyk.ts"],"sourcesContent":["/**\n * rgb 转 cmyk\n * @param red\n * @param green\n * @param blue\n * @returns\n */\nexport const rgb2cmyk = (red: number, green: number, blue: number) => {\n  let computedC = 0;\n  let computedM = 0;\n  let computedY = 0;\n  let computedK = 0;\n\n  const r = parseInt(`${red}`.replace(/\\s/g, ''), 10);\n  const g = parseInt(`${green}`.replace(/\\s/g, ''), 10);\n  const b = parseInt(`${blue}`.replace(/\\s/g, ''), 10);\n\n  if (r === 0 && g === 0 && b === 0) {\n    computedK = 1;\n    return [0, 0, 0, 1];\n  }\n\n  computedC = 1 - r / 255;\n  computedM = 1 - g / 255;\n  computedY = 1 - b / 255;\n\n  const minCMY = Math.min(computedC, Math.min(computedM, computedY));\n  computedC = (computedC - minCMY) / (1 - minCMY);\n  computedM = (computedM - minCMY) / (1 - minCMY);\n  computedY = (computedY - minCMY) / (1 - minCMY);\n  computedK = minCMY;\n\n  return [computedC, computedM, computedY, computedK];\n};\n\n/**\n * cmyk 转 rgb\n * @param cyan\n * @param magenta\n * @param yellow\n * @param black\n * @returns\n */\nexport const cmyk2rgb = (cyan: number, magenta: number, yellow: number, black: number) => {\n  let c = cyan / 100;\n  let m = magenta / 100;\n  let y = yellow / 100;\n  const k = black / 100;\n\n  c = c * (1 - k) + k;\n  m = m * (1 - k) + k;\n  y = y * (1 - k) + k;\n\n  let r = 1 - c;\n  let g = 1 - m;\n  let b = 1 - y;\n\n  r = Math.round(255 * r);\n  g = Math.round(255 * g);\n  b = Math.round(255 * b);\n  return {\n    r,\n    g,\n    b,\n  };\n};\n\nconst REG_CMYK_STRING = /cmyk\\((\\d+%?),(\\d+%?),(\\d+%?),(\\d+%?)\\)/;\n\nconst toNumber = (str: string) => Math.max(0, Math.min(255, parseInt(str, 10)));\n\n/**\n * 输入色转rgb\n * @param input\n * @returns\n */\nexport const cmykInputToColor = (input: string) => {\n  if (/cmyk/i.test(input)) {\n    const str = input.replace(/\\s/g, '');\n    const match = str.match(REG_CMYK_STRING);\n    const c = toNumber(match[1]);\n    const m = toNumber(match[2]);\n    const y = toNumber(match[3]);\n    const k = toNumber(match[4]);\n    const { r, g, b } = cmyk2rgb(c, m, y, k);\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n  return input;\n};\n"],"names":["rgb2cmyk","red","green","blue","computedC","computedM","computedY","computedK","r","parseInt","replace","g","b","minCMY","Math","min","cmyk2rgb","cyan","magenta","yellow","black","c","m","y","k","round","REG_CMYK_STRING","toNumber","str","max","cmykInputToColor","input","test","match"],"mappings":";;;;;;AAOO,IAAMA,QAAW,GAAA,SAAXA,QAAW,CAACC,GAAD,EAAcC,KAAd,EAA6BC,IAA7B,EAA8C;EACpE,IAAIC,SAAY,GAAA,CAAhB,CAAA;EACA,IAAIC,SAAY,GAAA,CAAhB,CAAA;EACA,IAAIC,SAAY,GAAA,CAAhB,CAAA;EACA,IAAIC,SAAY,GAAA,CAAhB,CAAA;AAEM,EAAA,IAAAC,CAAA,GAAIC,SAAS,UAAGR,GAAH,CAAA,CAASS,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,GAA6B,GAA1C,CAAA;AACA,EAAA,IAAAC,CAAA,GAAIF,SAAS,UAAGP,KAAH,CAAA,CAAWQ,OAAX,CAAmB,KAAnB,EAA0B,EAA1B,GAA+B,GAA5C,CAAA;AACA,EAAA,IAAAE,CAAA,GAAIH,SAAS,UAAGN,IAAH,CAAA,CAAUO,OAAV,CAAkB,KAAlB,EAAyB,EAAzB,GAA8B,GAA3C,CAAA;;EAEN,IAAIF,CAAM,KAAA,CAAN,IAAWG,CAAM,KAAA,CAAjB,IAAsBC,MAAM,CAAhC,EAAmC;AACrBL,IAAAA,SAAA,GAAA,CAAA,CAAA;IACZ,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAP,CAAA;AACF,GAAA;;AAEAH,EAAAA,SAAA,GAAY,CAAA,GAAII,CAAI,GAAA,GAApB,CAAA;AACAH,EAAAA,SAAA,GAAY,CAAA,GAAIM,CAAI,GAAA,GAApB,CAAA;AACAL,EAAAA,SAAA,GAAY,CAAA,GAAIM,CAAI,GAAA,GAApB,CAAA;AAEM,EAAA,IAAAC,MAAA,GAASC,KAAKC,GAAL,CAASX,SAAT,EAAoBU,KAAKC,GAAL,CAASV,SAAT,EAAoBC,SAApB,CAApB,CAAT,CAAA;EACOF,SAAA,GAAA,CAAAA,SAAA,GAAYS,MAAZ,KAAuB,CAAA,GAAIA,MAA3B,CAAA,CAAA;EACAR,SAAA,GAAA,CAAAA,SAAA,GAAYQ,MAAZ,KAAuB,CAAA,GAAIA,MAA3B,CAAA,CAAA;EACAP,SAAA,GAAA,CAAAA,SAAA,GAAYO,MAAZ,KAAuB,CAAA,GAAIA,MAA3B,CAAA,CAAA;AACDN,EAAAA,SAAA,GAAAM,MAAA,CAAA;EAEZ,OAAO,CAACT,SAAD,EAAYC,SAAZ,EAAuBC,SAAvB,EAAkCC,SAAlC,CAAP,CAAA;AACF,EA1BO;AAoCMS,IAAAA,QAAW,GAAA,SAAXA,QAAW,CAACC,IAAD,EAAeC,OAAf,EAAgCC,MAAhC,EAAgDC,KAAhD,EAAkE;AACxF,EAAA,IAAIC,IAAIJ,IAAO,GAAA,GAAf,CAAA;AACA,EAAA,IAAIK,IAAIJ,OAAU,GAAA,GAAlB,CAAA;AACA,EAAA,IAAIK,IAAIJ,MAAS,GAAA,GAAjB,CAAA;AACA,EAAA,IAAMK,IAAIJ,KAAQ,GAAA,GAAlB,CAAA;AAEIC,EAAAA,CAAA,GAAAA,CAAA,IAAK,IAAIG,CAAT,CAAA,GAAcA,CAAd,CAAA;AACAF,EAAAA,CAAA,GAAAA,CAAA,IAAK,IAAIE,CAAT,CAAA,GAAcA,CAAd,CAAA;AACAD,EAAAA,CAAA,GAAAA,CAAA,IAAK,IAAIC,CAAT,CAAA,GAAcA,CAAd,CAAA;EAEJ,IAAIhB,IAAI,CAAA,GAAIa,CAAZ,CAAA;EACA,IAAIV,IAAI,CAAA,GAAIW,CAAZ,CAAA;EACA,IAAIV,IAAI,CAAA,GAAIW,CAAZ,CAAA;AAEIf,EAAAA,CAAA,GAAAM,IAAA,CAAKW,KAAL,CAAW,GAAA,GAAMjB,CAAjB,CAAA,CAAA;AACAG,EAAAA,CAAA,GAAAG,IAAA,CAAKW,KAAL,CAAW,GAAA,GAAMd,CAAjB,CAAA,CAAA;AACAC,EAAAA,CAAA,GAAAE,IAAA,CAAKW,KAAL,CAAW,GAAA,GAAMb,CAAjB,CAAA,CAAA;EACG,OAAA;AACLJ,IAAAA,CAAA,EAAAA,CADK;AAELG,IAAAA,CAAA,EAAAA,CAFK;AAGLC,IAAAA,CAAA,EAAAA,CAAAA;GAHK,CAAA;AAKT,EAtBO;AAwBP,IAAMc,eAAkB,GAAA,yCAAxB,CAAA;;AAEA,IAAMC,QAAW,GAAA,SAAXA,QAAW,CAACC,GAAD,EAAA;AAAA,EAAA,OAAiBd,IAAA,CAAKe,GAAL,CAAS,CAAT,EAAYf,IAAK,CAAAC,GAAL,CAAS,GAAT,EAAcN,QAAA,CAASmB,GAAT,EAAc,EAAd,CAAd,CAAZ,CAAjB,CAAA;AAAA,CAAjB,CAAA;;IAOaE,gBAAA,GAAmB,SAAnBA,gBAAmB,CAACC,KAAD,EAAmB;AAC7C,EAAA,IAAA,OAAQC,CAAAA,IAAR,CAAaD,KAAb,CAAA,EAAqB;IACvB,IAAMH,GAAM,GAAAG,KAAA,CAAMrB,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAZ,CAAA;AACM,IAAA,IAAAuB,KAAA,GAAQL,GAAI,CAAAK,KAAJ,CAAUP,eAAV,CAAR,CAAA;IACA,IAAAL,CAAA,GAAIM,QAAS,CAAAM,KAAA,CAAM,CAAN,CAAA,CAAb,CAAA;IACA,IAAAX,CAAA,GAAIK,QAAS,CAAAM,KAAA,CAAM,CAAN,CAAA,CAAb,CAAA;IACA,IAAAV,CAAA,GAAII,QAAS,CAAAM,KAAA,CAAM,CAAN,CAAA,CAAb,CAAA;IACA,IAAAT,CAAA,GAAIG,QAAS,CAAAM,KAAA,CAAM,CAAN,CAAA,CAAb,CAAA;;IACA,IAAcjB,SAAAA,GAAAA,QAAS,CAAAK,CAAA,EAAGC,CAAH,EAAMC,CAAN,EAASC,CAAT,CAAvB;QAAEhB,CAAF,aAAEA,CAAF;QAAKG,CAAL,aAAKA,CAAL;QAAQC,CAAR,aAAQA,CAAR,CAAA;;AACC,IAAA,OAAA,MAAA,CAAA,MAAA,CAAOJ,CAAP,EAAA,IAAA,CAAA,CAAA,MAAA,CAAaG,CAAb,EAAA,IAAA,CAAA,CAAA,MAAA,CAAmBC,CAAnB,EAAA,GAAA,CAAA,CAAA;AACT,GAAA;;AACO,EAAA,OAAAmB,KAAA,CAAA;AACT;;;;"}