{"version":3,"file":"gradient.js","sources":["../../../../src/_common/js/color-picker/gradient.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\n/**\n * 用于反解析渐变字符串为对象\n * https://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex\n */\nimport tinyColor from 'tinycolor2';\n\n/**\n * Utility combine multiple regular expressions.\n *\n * @param {RegExp[]|string[]} regexpList List of regular expressions or strings.\n * @param {string} flags Normal RegExp flags.\n */\nconst combineRegExp = (regexpList: (string | RegExp)[], flags: string): RegExp => {\n  let source = '';\n  for (let i = 0; i < regexpList.length; i++) {\n    if (typeof regexpList[i] === 'string') {\n      source += regexpList[i];\n    } else {\n      source += (regexpList[i] as RegExp).source;\n    }\n  }\n  return new RegExp(source, flags);\n};\n\ninterface RegExpLib {\n  gradientSearch: RegExp;\n  colorStopSearch: RegExp;\n}\n\ninterface ColorStop {\n  color: string;\n  position?: string;\n}\n\ninterface ParseGradientResult {\n  original: string;\n  colorStopList?: ColorStop[];\n  line?: string;\n  angle?: string;\n  sideCorner?: string;\n}\n\n/**\n * Generate the required regular expressions once.\n *\n * Regular Expressions are easier to manage this way and can be well described.\n *\n * @result {object} Object containing regular expressions.\n */\nconst generateRegExp = (): RegExpLib => {\n  // Note any variables with \"Capture\" in name include capturing bracket set(s).\n  const searchFlags = 'gi'; // ignore case for angles, \"rgb\" etc\n  const rAngle = /(?:[+-]?\\d*\\.?\\d+)(?:deg|grad|rad|turn)/; // Angle +ive, -ive and angle types\n  // optional 2nd part\n  const rSideCornerCapture = /to\\s+((?:(?:left|right|top|bottom)(?:\\s+(?:top|bottom|left|right))?))/;\n  const rComma = /\\s*,\\s*/; // Allow space around comma.\n  const rColorHex = /#(?:[a-f0-9]{6}|[a-f0-9]{3})/; // 3 or 6 character form\n  const rDigits3 = /\\(\\s*(?:\\d{1,3}\\s*,\\s*){2}\\d{1,3}\\s*\\)/;\n  const // \"(1, 2, 3)\"\n    rDigits4 = /\\(\\s*(?:\\d{1,3}\\s*,\\s*){2}\\d{1,3}\\s*,\\s*\\d*\\.?\\d+\\)/;\n  const // \"(1, 2, 3, 4)\"\n    rValue = /(?:[+-]?\\d*\\.?\\d+)(?:%|[a-z]+)?/;\n  const // \".9\", \"-5px\", \"100%\".\n    rKeyword = /[_a-z-][_a-z0-9-]*/;\n  const // \"red\", \"transparent\".\n    rColor = combineRegExp(\n      ['(?:', rColorHex, '|', '(?:rgb|hsl)', rDigits3, '|', '(?:rgba|hsla)', rDigits4, '|', rKeyword, ')'],\n      '',\n    );\n  const rColorStop = combineRegExp([rColor, '(?:\\\\s+', rValue, '(?:\\\\s+', rValue, ')?)?'], '');\n  const // Single Color Stop, optional %, optional length.\n    rColorStopList = combineRegExp(['(?:', rColorStop, rComma, ')*', rColorStop], '');\n  const // List of color stops min 1.\n    rLineCapture = combineRegExp(['(?:(', rAngle, ')|', rSideCornerCapture, ')'], '');\n  const // Angle or SideCorner\n    rGradientSearch = combineRegExp(['(?:(', rLineCapture, ')', rComma, ')?(', rColorStopList, ')'], searchFlags);\n  const // Capture 1:\"line\", 2:\"angle\" (optional), 3:\"side corner\" (optional) and 4:\"stop list\".\n    rColorStopSearch = combineRegExp(\n      ['\\\\s*(', rColor, ')', '(?:\\\\s+', '(', rValue, '))?', '(?:', rComma, '\\\\s*)?'],\n      searchFlags,\n    ); // Capture 1:\"color\" and 2:\"position\" (optional).\n\n  return {\n    gradientSearch: rGradientSearch,\n    colorStopSearch: rColorStopSearch,\n  };\n};\n\n/**\n * Actually parse the input gradient parameters string into an object for reusability.\n *\n *\n * @note Really this only supports the standard syntax not historical versions, see MDN for details\n *       https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient\n *\n * @param regExpLib\n * @param {string} input\n * @returns {object|undefined}\n */\nconst parseGradient = (regExpLib: RegExpLib, input: string) => {\n  let result: ParseGradientResult;\n  let matchColorStop: any;\n  let stopResult: ColorStop;\n\n  // reset search position, because we reuse regex.\n  regExpLib.gradientSearch.lastIndex = 0;\n\n  const matchGradient = regExpLib.gradientSearch.exec(input);\n  if (matchGradient !== null) {\n    result = {\n      original: matchGradient[0],\n      colorStopList: [],\n    };\n\n    // Line (Angle or Side-Corner).\n    if (matchGradient[1]) {\n      // eslint-disable-next-line prefer-destructuring\n      result.line = matchGradient[1];\n    }\n    // Angle or undefined if side-corner.\n    if (matchGradient[2]) {\n      // eslint-disable-next-line prefer-destructuring\n      result.angle = matchGradient[2];\n    }\n    // Side-corner or undefined if angle.\n    if (matchGradient[3]) {\n      // eslint-disable-next-line prefer-destructuring\n      result.sideCorner = matchGradient[3];\n    }\n\n    // reset search position, because we reuse regex.\n    regExpLib.colorStopSearch.lastIndex = 0;\n\n    // Loop though all the color-stops.\n    matchColorStop = regExpLib.colorStopSearch.exec(matchGradient[4]);\n    while (matchColorStop !== null) {\n      stopResult = {\n        color: matchColorStop[1],\n      };\n\n      // Position (optional).\n      if (matchColorStop[2]) {\n        // eslint-disable-next-line prefer-destructuring\n        stopResult.position = matchColorStop[2];\n      }\n      result.colorStopList.push(stopResult);\n\n      // Continue searching from previous position.\n      matchColorStop = regExpLib.colorStopSearch.exec(matchGradient[4]);\n    }\n  }\n\n  // Can be undefined if match not found.\n  return result;\n};\n\nexport interface GradientColorPoint {\n  id?: string;\n  color?: string;\n  left?: number;\n}\n\nexport interface GradientColors {\n  points: GradientColorPoint[];\n  degree: number;\n}\n\nconst REGEXP_LIB = generateRegExp();\nconst REG_GRADIENT = /.*gradient\\s*\\(((?:\\([^)]*\\)|[^)(]*)*)\\)/gim;\n\n/**\n * 验证是否是渐变字符串\n * @param input\n * @returns\n */\nexport const isGradientColor = (input: string): null | RegExpExecArray => {\n  REG_GRADIENT.lastIndex = 0;\n  return REG_GRADIENT.exec(input);\n};\n\n// 边界字符串和角度关系\nconst sideCornerDegreeMap = {\n  top: 0,\n  right: 90,\n  bottom: 180,\n  left: 270,\n  'top left': 225,\n  'left top': 225,\n  'top right': 135,\n  'right top': 135,\n  'bottom left': 315,\n  'left bottom': 315,\n  'bottom right': 45,\n  'right bottom': 45,\n};\n\n/**\n * 解析渐变字符串为 GradientColors 对象\n * @param input\n * @returns\n */\nexport const parseGradientString = (input: string): GradientColors | boolean => {\n  const match = isGradientColor(input);\n  if (!match) {\n    return false;\n  }\n  const gradientColors: GradientColors = {\n    points: [],\n    degree: 0,\n  };\n\n  const result: ParseGradientResult = parseGradient(REGEXP_LIB, match[1]);\n  if (result.original.trim() !== match[1].trim()) {\n    return false;\n  }\n  const points: GradientColorPoint[] = result.colorStopList.map(({ color, position }) => {\n    const point = Object.create(null);\n    point.color = tinyColor(color).toRgbString();\n    point.left = parseFloat(position);\n    return point;\n  });\n  gradientColors.points = points;\n  let degree = parseInt(result.angle, 10);\n  if (Number.isNaN(degree)) {\n    degree = sideCornerDegreeMap[result.sideCorner] || 90;\n  }\n  gradientColors.degree = degree;\n\n  return gradientColors;\n};\n\nexport default parseGradientString;\n"],"names":["combineRegExp","regexpList","flags","source","i","length","RegExp","generateRegExp","searchFlags","rAngle","rSideCornerCapture","rComma","rColorHex","rDigits3","rDigits4","rValue","rKeyword","rColor","rColorStop","rColorStopList","rLineCapture","rGradientSearch","rColorStopSearch","gradientSearch","colorStopSearch","parseGradient","regExpLib","input","result","matchColorStop","stopResult","lastIndex","matchGradient","exec","original","colorStopList","line","angle","sideCorner","color","position","push","REGEXP_LIB","REG_GRADIENT","isGradientColor","sideCornerDegreeMap","top","right","bottom","left","parseGradientString","match","gradientColors","points","degree","trim","map","point","Object","create","tinyColor","toRgbString","parseFloat","parseInt","Number","isNaN"],"mappings":"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"}