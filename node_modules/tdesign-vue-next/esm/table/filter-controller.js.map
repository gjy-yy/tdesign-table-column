{"version":3,"file":"filter-controller.js","sources":["../../src/table/filter-controller.tsx"],"sourcesContent":["import { defineComponent, PropType, ref, h } from 'vue';\nimport { FilterIcon as TdFilterIcon } from 'tdesign-icons-vue-next';\nimport isEmpty from 'lodash/isEmpty';\n\nimport Popup from '../popup';\nimport { CheckboxGroup } from '../checkbox';\nimport { RadioGroup } from '../radio';\nimport Input from '../input';\nimport TButton from '../button';\nimport { useTNodeDefault } from '../hooks/tnode';\nimport { PrimaryTableCol, FilterValue } from './type';\nimport { useConfig } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\n\nexport interface TableFilterControllerProps {\n  tFilterValue: FilterValue;\n  innerFilterValue: FilterValue;\n  tableFilterClasses: {\n    filterable: string;\n    popup: string;\n    icon: string;\n    popupContent: string;\n    result: string;\n    inner: string;\n    bottomButtons: string;\n    contentInner: string;\n    iconWrap: string;\n  };\n  isFocusClass: string;\n  column: PrimaryTableCol;\n  // HTMLElement\n  primaryTableElement: any;\n  onVisibleChange: (val: boolean) => void;\n}\n\nexport default defineComponent({\n  name: 'TableFilterController',\n\n  props: {\n    column: Object as PropType<TableFilterControllerProps['column']>,\n    tFilterValue: Object as PropType<TableFilterControllerProps['tFilterValue']>,\n    innerFilterValue: Object as PropType<TableFilterControllerProps['innerFilterValue']>,\n    tableFilterClasses: Object as PropType<TableFilterControllerProps['tableFilterClasses']>,\n    isFocusClass: String,\n    // eslint-disable-next-line\n    primaryTableElement: {},\n    onVisibleChange: Function as PropType<TableFilterControllerProps['onVisibleChange']>,\n  },\n\n  emits: ['inner-filter-change', 'reset', 'confirm'],\n\n  setup(props: TableFilterControllerProps) {\n    const triggerElementRef = ref<HTMLDivElement>(null);\n    const renderTNode = useTNodeDefault();\n    const { t, globalConfig } = useConfig('table');\n    const { FilterIcon } = useGlobalIcon({ FilterIcon: TdFilterIcon });\n    const filterPopupVisible = ref(false);\n\n    const onFilterPopupVisibleChange = (visible: boolean) => {\n      filterPopupVisible.value = visible;\n      props.onVisibleChange?.(visible);\n    };\n\n    return {\n      t,\n      globalConfig,\n      FilterIcon,\n      filterPopupVisible,\n      triggerElementRef,\n      renderTNode,\n      onFilterPopupVisibleChange,\n    };\n  },\n\n  render() {\n    const getFilterContent = (column: PrimaryTableCol) => {\n      const types = ['single', 'multiple', 'input'];\n      if (column.type && !types.includes(column.filter.type)) {\n        console.error(`TDesign Table Error: column.filter.type must be the following: ${JSON.stringify(types)}`);\n        return;\n      }\n      const component =\n        {\n          single: RadioGroup,\n          multiple: CheckboxGroup,\n          input: Input,\n        }[column.filter.type] || column.filter.component;\n      if (!component && !column.filter.component) return;\n      const filterComponentProps: { [key: string]: any } = {\n        options: ['single', 'multiple'].includes(column.filter.type) ? column.filter?.list : undefined,\n        ...(column.filter?.props || {}),\n        value: this.innerFilterValue?.[column.colKey],\n        onChange: (val: any) => {\n          this.$emit('inner-filter-change', val, column);\n        },\n      };\n      // 允许自定义触发确认搜索的事件\n      if (column.filter.confirmEvents) {\n        column.filter.confirmEvents.forEach((event) => {\n          filterComponentProps[event] = () => {\n            this.$emit('confirm', column);\n            this.filterPopupVisible = false;\n          };\n        });\n      }\n      const renderComponent = () => {\n        if (!component) return null;\n        const isVueComponent = !!component.setup;\n        if (typeof column.filter.component === 'function' && !isVueComponent) {\n          return column.filter.component((v: any, b: any) => {\n            const tProps = typeof b === 'object' && 'attrs' in b ? b.attrs : {};\n            return h(v, {\n              props: { ...filterComponentProps, ...tProps },\n            });\n          });\n        }\n        return <component value={this.innerFilterValue?.[column.colKey]} {...filterComponentProps}></component>;\n      };\n      return <div class={this.tableFilterClasses.contentInner}>{renderComponent()}</div>;\n    };\n\n    const getBottomButtons = (column: PrimaryTableCol) => {\n      if (!column.filter.showConfirmAndReset) return;\n      return (\n        <div class={this.tableFilterClasses.bottomButtons}>\n          <TButton\n            theme=\"default\"\n            size=\"small\"\n            onClick={() => {\n              this.$emit('reset', column);\n              this.filterPopupVisible = false;\n            }}\n          >\n            {this.globalConfig.resetText}\n          </TButton>\n          <TButton\n            theme=\"primary\"\n            size=\"small\"\n            onClick={() => {\n              this.$emit('confirm', column);\n              this.filterPopupVisible = false;\n            }}\n          >\n            {this.globalConfig.confirmText}\n          </TButton>\n        </div>\n      );\n    };\n\n    const column = this.column as any;\n    const FilterIcon = this.FilterIcon as any;\n\n    if (!column.filter || (column.filter && !Object.keys(column.filter).length)) return null;\n    const defaultFilterIcon = this.t(this.globalConfig.filterIcon) || <FilterIcon />;\n    return (\n      <Popup\n        attach={this.primaryTableElement ? () => this.primaryTableElement as HTMLElement : undefined}\n        visible={this.filterPopupVisible}\n        destroyOnClose\n        trigger=\"click\"\n        placement=\"bottom-right\"\n        showArrow\n        overlayClassName={this.tableFilterClasses.popup}\n        onVisibleChange={(val: boolean) => this.onFilterPopupVisibleChange(val)}\n        class={[this.tableFilterClasses.icon, { [this.isFocusClass]: !isEmpty(this.tFilterValue?.[column.colKey]) }]}\n        content={() => (\n          <div class={this.tableFilterClasses.popupContent}>\n            {getFilterContent(column)}\n            {getBottomButtons(column)}\n          </div>\n        )}\n      >\n        <div ref=\"triggerElementRef\">{this.renderTNode('filterIcon', defaultFilterIcon)}</div>\n      </Popup>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","column","Object","tFilterValue","innerFilterValue","tableFilterClasses","isFocusClass","String","primaryTableElement","onVisibleChange","Function","emits","setup","triggerElementRef","ref","renderTNode","useTNodeDefault","useConfig","t","globalConfig","useGlobalIcon","FilterIcon","TdFilterIcon","filterPopupVisible","onFilterPopupVisibleChange","visible","value","render","getFilterContent","types","type","includes","filter","console","error","JSON","stringify","component","single","RadioGroup","multiple","CheckboxGroup","input","Input","filterComponentProps","options","list","colKey","onChange","val","$emit","confirmEvents","forEach","event","renderComponent","isVueComponent","v","b","tProps","attrs","h","_createVNode","_mergeProps","contentInner","getBottomButtons","showConfirmAndReset","bottomButtons","TButton","resetText","confirmText","keys","length","defaultFilterIcon","filterIcon","popup","icon","isEmpty","popupContent"],"mappings":"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"}