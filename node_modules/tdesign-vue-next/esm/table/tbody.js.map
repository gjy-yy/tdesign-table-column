{"version":3,"file":"tbody.js","sources":["../../src/table/tbody.tsx"],"sourcesContent":["import { defineComponent, computed, PropType, SetupContext, toRefs } from 'vue';\nimport camelCase from 'lodash/camelCase';\nimport get from 'lodash/get';\nimport pick from 'lodash/pick';\nimport TrElement, { ROW_LISTENERS, TABLE_PROPS } from './tr';\nimport { useConfig } from '../hooks/useConfig';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useClassName from './hooks/useClassName';\nimport baseTableProps from './base-table-props';\nimport { TNodeReturnValue } from '../common';\nimport useRowspanAndColspan from './hooks/useRowspanAndColspan';\nimport { BaseTableProps, RowAndColFixedPosition } from './interface';\nimport { TdBaseTableProps } from './type';\n\nexport const ROW_AND_TD_LISTENERS = ROW_LISTENERS.concat('cell-click');\nexport interface TableBodyProps extends BaseTableProps {\n  // 固定列 left/right 具体值\n  rowAndColFixedPosition: RowAndColFixedPosition;\n  showColumnShadow: { left: boolean; right: boolean };\n  tableElm: any;\n  tableWidth: number;\n  isWidthOverflow: boolean;\n  translateY: number;\n  scrollType: string;\n  isVirtual: boolean;\n  rowHeight: number;\n  trs: Map<number, object>;\n  bufferSize: number;\n  // HTMLDivElement\n  tableContentElm: any;\n  cellEmptyContent: TdBaseTableProps['cellEmptyContent'];\n  handleRowMounted: () => void;\n}\n\n// table 到 body 的相同属性\nexport const extendTableProps = [\n  'rowKey',\n  'rowClassName',\n  'rowAttributes',\n  'loading',\n  'empty',\n  'fixedRows',\n  'firstFullRow',\n  'lastFullRow',\n  'rowspanAndColspan',\n  'scroll',\n  'cellEmptyContent',\n  'onCellClick',\n  'onPageChange',\n  'onRowClick',\n  'onRowDblclick',\n  'onRowMouseover',\n  'onRowMousedown',\n  'onRowMouseenter',\n  'onRowMouseleave',\n  'onRowMouseup',\n  'onScroll',\n  'onScrollX',\n  'onScrollY',\n];\n\nexport default defineComponent({\n  name: 'TBody',\n\n  props: {\n    data: Array as PropType<TableBodyProps['data']>,\n    columns: Array as PropType<TableBodyProps['columns']>,\n    rowAndColFixedPosition: Map as PropType<TableBodyProps['rowAndColFixedPosition']>,\n    showColumnShadow: Object as PropType<TableBodyProps['showColumnShadow']>,\n    // eslint-disable-next-line\n    tableElm: {},\n    tableWidth: Number,\n    isWidthOverflow: Boolean,\n    // 以下内容为虚拟滚动所需参数\n    translateY: Number,\n    scrollType: String,\n    isVirtual: Boolean,\n    rowHeight: Number,\n    trs: Map as PropType<TableBodyProps['trs']>,\n    bufferSize: Number,\n    // eslint-disable-next-line\n    tableContentElm: {},\n    handleRowMounted: Function as PropType<TableBodyProps['handleRowMounted']>,\n    renderExpandedRow: Function as PropType<TableBodyProps['renderExpandedRow']>,\n    firstFullRow: [String, Function] as PropType<TableBodyProps['firstFullRow']>,\n    lastFullRow: [String, Function] as PropType<TableBodyProps['lastFullRow']>,\n    ...pick(baseTableProps, extendTableProps),\n  },\n\n  // eslint-disable-next-line\n  setup(props: TableBodyProps) {\n    const renderTNode = useTNodeJSX();\n    const { data, columns, rowKey, rowspanAndColspan } = toRefs(props);\n    const { t, globalConfig } = useConfig('table');\n    const { tableFullRowClasses, tableBaseClass } = useClassName();\n    const { skipSpansMap } = useRowspanAndColspan(data, columns, rowKey, rowspanAndColspan);\n\n    const tbodyClasses = computed(() => [tableBaseClass.body]);\n\n    return {\n      t,\n      globalConfig,\n      renderTNode,\n      tableFullRowClasses,\n      tbodyClasses,\n      tableBaseClass,\n      skipSpansMap,\n    };\n  },\n\n  render() {\n    const renderEmpty = (columns: TableBodyProps['columns']) => {\n      return (\n        <tr class={[this.tableBaseClass.emptyRow, { [this.tableFullRowClasses.base]: this.isWidthOverflow }]}>\n          <td colspan={columns.length}>\n            <div\n              class={[this.tableBaseClass.empty, { [this.tableFullRowClasses.innerFullRow]: this.isWidthOverflow }]}\n              style={this.isWidthOverflow ? { width: `${this.tableWidth}px` } : {}}\n            >\n              {this.renderTNode('empty') || this.t(this.globalConfig.empty)}\n            </div>\n          </td>\n        </tr>\n      );\n    };\n\n    const getFullRow = (columnLength: number, type: 'first-full-row' | 'last-full-row') => {\n      const tType = camelCase(type);\n      const fullRowNode = this.renderTNode(tType);\n      if (['', null, undefined, false].includes(fullRowNode)) return null;\n      const isFixedToLeft = this.isWidthOverflow && this.columns.find((col) => col.fixed === 'left');\n      const classes = [this.tableFullRowClasses.base, this.tableFullRowClasses[tType]];\n      /** innerFullRow 和 innerFullElement 同时存在，是为了保证 固定列时，当前行不随内容进行横向滚动 */\n      return (\n        <tr class={classes} key={`key-full-row-${type}`}>\n          <td colspan={columnLength}>\n            <div\n              class={{ [this.tableFullRowClasses.innerFullRow]: isFixedToLeft }}\n              style={isFixedToLeft ? { width: `${this.tableWidth}px` } : {}}\n            >\n              <div class={this.tableFullRowClasses.innerFullElement}>{fullRowNode}</div>\n            </div>\n          </td>\n        </tr>\n      );\n    };\n\n    const columnLength = this.columns.length;\n    const dataLength = this.data.length;\n    const trNodeList: TNodeReturnValue[] = [];\n\n    const properties = [\n      'rowAndColFixedPosition',\n      'scroll',\n      'tableElm',\n      'tableContentElm',\n      'trs',\n      'bufferSize',\n      'isVirtual',\n      'rowHeight',\n      'scrollType',\n    ];\n    this.data?.forEach((row, rowIndex) => {\n      const trProps = {\n        ...pick(this.$props, TABLE_PROPS),\n        rowKey: this.rowKey || 'id',\n        row,\n        columns: this.columns,\n        rowIndex,\n        dataLength,\n        skipSpansMap: this.skipSpansMap,\n        ...pick(this.$props, properties),\n        // 遍历的同时，计算后面的节点，是否会因为合并单元格跳过渲染\n      };\n      if (this.onCellClick) {\n        trProps.onCellClick = this.onCellClick;\n      }\n\n      const trNode = (\n        <TrElement\n          v-slots={this.$slots}\n          key={`${get(row, this.rowKey || 'id')}__${rowIndex}`}\n          {...trProps}\n          onRowMounted={this.handleRowMounted}\n        ></TrElement>\n      );\n      trNodeList.push(trNode);\n\n      // 执行展开行渲染\n      if (this.renderExpandedRow) {\n        const p = {\n          row,\n          index: rowIndex,\n          columns: this.columns,\n          tableWidth: this.tableWidth,\n          isWidthOverflow: this.isWidthOverflow,\n        };\n        const expandedContent = this.renderExpandedRow(p);\n        expandedContent && trNodeList.push(expandedContent);\n      }\n    });\n\n    const list = [getFullRow(columnLength, 'first-full-row'), ...trNodeList, getFullRow(columnLength, 'last-full-row')];\n    const isEmpty = !this.data?.length && !this.loading && !this.firstFullRow && !this.lastFullRow;\n\n    const translate = `translate(0, ${this.translateY}px)`;\n    const posStyle = {\n      transform: translate,\n      '-ms-transform': translate,\n      '-moz-transform': translate,\n      '-webkit-transform': translate,\n    };\n\n    return (\n      <tbody class={this.tbodyClasses} style={this.isVirtual && { ...posStyle }}>\n        {isEmpty ? renderEmpty(this.columns) : list}\n      </tbody>\n    );\n  },\n});\n"],"names":["ROW_AND_TD_LISTENERS","ROW_LISTENERS","concat","extendTableProps","defineComponent","name","props","data","Array","columns","rowAndColFixedPosition","Map","showColumnShadow","Object","tableElm","tableWidth","Number","isWidthOverflow","Boolean","translateY","scrollType","String","isVirtual","rowHeight","trs","bufferSize","tableContentElm","handleRowMounted","Function","renderExpandedRow","firstFullRow","lastFullRow","pick","baseTableProps","setup","renderTNode","useTNodeJSX","toRefs","rowKey","rowspanAndColspan","useConfig","t","globalConfig","useClassName","tableFullRowClasses","tableBaseClass","useRowspanAndColspan","skipSpansMap","tbodyClasses","computed","body","render","renderEmpty","_createVNode","emptyRow","base","length","empty","innerFullRow","width","getFullRow","columnLength","type","tType","camelCase","fullRowNode","includes","isFixedToLeft","find","col","fixed","classes","innerFullElement","dataLength","trNodeList","properties","forEach","row","rowIndex","trProps","$props","TABLE_PROPS","onCellClick","trNode","get","$slots","push","p","index","expandedContent","list","isEmpty","loading","translate","posStyle","transform"],"mappings":"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"}