{"version":3,"file":"useRowSelect.js","sources":["../../../src/table/hooks/useRowSelect.tsx"],"sourcesContent":["// 行选中相关功能：单选 + 多选\n\nimport { computed, toRefs, h, ref, watch } from 'vue';\nimport intersection from 'lodash/intersection';\nimport get from 'lodash/get';\nimport isFunction from 'lodash/isFunction';\nimport useDefaultValue from '../../hooks/useDefaultValue';\nimport {\n  PrimaryTableCellParams,\n  PrimaryTableCol,\n  RowClassNameParams,\n  TableRowData,\n  TdPrimaryTableProps,\n} from '../type';\nimport { isRowSelectedDisabled } from '../../_common/js/table/utils';\nimport { TableClassName } from './useClassName';\nimport Checkbox from '../../checkbox';\nimport Radio from '../../radio';\nimport log from '../../_common/js/log';\n\nexport default function useRowSelect(\n  props: TdPrimaryTableProps,\n  tableSelectedClasses: TableClassName['tableSelectedClasses'],\n) {\n  const { selectedRowKeys, columns, data, rowKey } = toRefs(props);\n  const selectedRowClassNames = ref();\n  const [tSelectedRowKeys, setTSelectedRowKeys] = useDefaultValue(\n    selectedRowKeys,\n    props.defaultSelectedRowKeys || [],\n    props.onSelectChange,\n    'selectedRowKeys',\n  );\n  const selectedRowDataMap = ref(new Map<string | number, TableRowData>());\n  const selectColumn = computed(() => props.columns.find(({ type }) => ['multiple', 'single'].includes(type)));\n  const canSelectedRows = computed(() => data.value.filter((row, rowIndex): boolean => !isDisabled(row, rowIndex)));\n  // 选中的行，和所有可以选择的行，交集，用于计算 isSelectedAll 和 isIndeterminate\n  const intersectionKeys = computed(() =>\n    intersection(\n      tSelectedRowKeys.value,\n      canSelectedRows.value.map((t) => get(t, props.rowKey || 'id')),\n    ),\n  );\n\n  watch(\n    [data, columns, tSelectedRowKeys, selectColumn, rowKey],\n    () => {\n      const disabledRowFunc = (p: RowClassNameParams<TableRowData>) =>\n        selectColumn.value.disabled(p) ? tableSelectedClasses.disabled : '';\n      const disabledRowClass = selectColumn.value?.disabled ? disabledRowFunc : undefined;\n      const selected = new Set(tSelectedRowKeys.value);\n      const selectedRowClassFunc = ({ row }: RowClassNameParams<TableRowData>) => {\n        const rowId = get(row, props.rowKey || 'id');\n        return selected.has(rowId) ? tableSelectedClasses.selected : '';\n      };\n      const selectedRowClass = selected.size ? selectedRowClassFunc : undefined;\n      selectedRowClassNames.value = [disabledRowClass, selectedRowClass];\n    },\n    { immediate: true },\n  );\n\n  function isDisabled(row: Record<string, any>, rowIndex: number): boolean {\n    return isRowSelectedDisabled(selectColumn.value, row, rowIndex);\n  }\n\n  function getSelectedHeader() {\n    return () => {\n      const isIndeterminate =\n        intersectionKeys.value.length > 0 && intersectionKeys.value.length < canSelectedRows.value.length;\n      const isChecked =\n        intersectionKeys.value.length !== 0 &&\n        canSelectedRows.value.length !== 0 &&\n        intersectionKeys.value.length === canSelectedRows.value.length;\n      return (\n        <Checkbox\n          checked={isChecked}\n          indeterminate={isIndeterminate}\n          disabled={!canSelectedRows.value.length}\n          onChange={handleSelectAll}\n        />\n      );\n    };\n  }\n\n  function renderSelectCell(p: PrimaryTableCellParams<TableRowData>) {\n    const { col: column, row = {}, rowIndex } = p;\n    const checked = tSelectedRowKeys.value.includes(get(row, props.rowKey || 'id'));\n    const disabled: boolean =\n      typeof column.disabled === 'function' ? column.disabled({ row, rowIndex }) : column.disabled;\n    const checkProps = isFunction(column.checkProps) ? column.checkProps({ row, rowIndex }) : column.checkProps;\n    const selectBoxProps: Object = {\n      checked,\n      disabled,\n      ...checkProps,\n      // 兼容处理不同的参数\n      onClick: (e: MouseEvent | { e: MouseEvent }) => {\n        // 选中行功能中，点击 checkbox/radio 需阻止事件冒泡，避免触发不必要的 onRowClick\n        if (typeof e === 'object' && 'e' in e) {\n          e.e?.stopPropagation();\n        } else {\n          e?.stopPropagation();\n        }\n      },\n      onChange: () => handleSelectChange(row),\n    };\n    if (column.type === 'single') return <Radio {...selectBoxProps} />;\n    if (column.type === 'multiple') {\n      const isIndeterminate = props.indeterminateSelectedRowKeys?.length\n        ? props.indeterminateSelectedRowKeys.includes(get(row, props.rowKey))\n        : false;\n      return <Checkbox indeterminate={isIndeterminate} {...selectBoxProps} />;\n    }\n    return null;\n  }\n\n  function handleSelectChange(row: TableRowData = {}) {\n    let selectedRowKeys = [...tSelectedRowKeys.value];\n    const reRowKey = props.rowKey || 'id';\n    const id = get(row, reRowKey);\n    selectedRowDataMap.value.set(id, row);\n    const selectedRowIndex = selectedRowKeys.indexOf(id);\n    const isExisted = selectedRowIndex !== -1;\n    if (selectColumn.value.type === 'multiple') {\n      isExisted ? selectedRowKeys.splice(selectedRowIndex, 1) : selectedRowKeys.push(id);\n    } else if (selectColumn.value.type === 'single') {\n      selectedRowKeys = !isExisted ? [id] : [];\n    } else {\n      log.warn('Table', '`column.type` must be one of `multiple` and `single`');\n      return;\n    }\n    setTSelectedRowKeys(selectedRowKeys, {\n      selectedRowData: selectedRowKeys.map((t) => selectedRowDataMap.value.get(t)),\n      currentRowKey: id,\n      currentRowData: row,\n      type: isExisted ? 'uncheck' : 'check',\n    });\n  }\n\n  function handleSelectAll(checked: boolean) {\n    const reRowKey = props.rowKey || 'id';\n    const canSelectedRowKeys = canSelectedRows.value.map((record) => get(record, reRowKey));\n    const disabledSelectedRowKeys = selectedRowKeys.value?.filter((id) => !canSelectedRowKeys.includes(id)) || [];\n    const allIds = checked ? [...disabledSelectedRowKeys, ...canSelectedRowKeys] : [...disabledSelectedRowKeys];\n    setTSelectedRowKeys(allIds, {\n      selectedRowData: checked ? allIds.map((t) => selectedRowDataMap.value.get(t)) : [],\n      type: checked ? 'check' : 'uncheck',\n      currentRowKey: 'CHECK_ALL_BOX',\n    });\n  }\n\n  function formatToRowSelectColumn(col: PrimaryTableCol) {\n    const isSelection = ['multiple', 'single'].includes(col.type);\n    if (!isSelection) return col;\n    return {\n      ...col,\n      width: col.width || 64,\n      className: [tableSelectedClasses.checkCell, col.className],\n      cell: (_: typeof h, p: PrimaryTableCellParams<TableRowData>) => renderSelectCell(p),\n      title: col.type === 'multiple' ? getSelectedHeader() : '',\n    };\n  }\n\n  watch(\n    [data, rowKey],\n    ([data, rowKey]) => {\n      for (let i = 0, len = data.length; i < len; i++) {\n        selectedRowDataMap.value.set(get(data[i], rowKey || 'id'), data[i]);\n      }\n    },\n    { immediate: true },\n  );\n\n  return {\n    selectedRowClassNames,\n    formatToRowSelectColumn,\n  };\n}\n"],"names":["useRowSelect","props","tableSelectedClasses","toRefs","selectedRowKeys","columns","data","rowKey","selectedRowClassNames","ref","useDefaultValue","defaultSelectedRowKeys","onSelectChange","tSelectedRowKeys","setTSelectedRowKeys","selectedRowDataMap","Map","selectColumn","computed","find","type","includes","canSelectedRows","value","filter","row","rowIndex","isDisabled","intersectionKeys","intersection","map","t","get","watch","disabledRowFunc","p","disabled","disabledRowClass","selected","Set","selectedRowClassFunc","rowId","has","selectedRowClass","size","immediate","isRowSelectedDisabled","getSelectedHeader","isIndeterminate","length","isChecked","_createVNode","handleSelectAll","renderSelectCell","column","col","checked","checkProps","isFunction","selectBoxProps","onClick","e","stopPropagation","onChange","handleSelectChange","indeterminateSelectedRowKeys","_mergeProps","reRowKey","id","set","selectedRowIndex","indexOf","isExisted","splice","push","log","warn","selectedRowData","currentRowKey","currentRowData","canSelectedRowKeys","record","disabledSelectedRowKeys","allIds","formatToRowSelectColumn","isSelection","width","className","checkCell","cell","_","title","i","len"],"mappings":"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"}