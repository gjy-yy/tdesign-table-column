{"version":3,"file":"useSorter.js","sources":["../../../src/table/hooks/useSorter.tsx"],"sourcesContent":["import { SetupContext, computed, toRefs, ref } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport { SortInfo, TdPrimaryTableProps, PrimaryTableCol, TableRowData } from '../type';\nimport SorterButton from '../sorter-button';\nimport useDefaultValue from '../../hooks/useDefaultValue';\n\nexport type SortMap = Record<string, SortInfo & { index: number }>;\n\nexport default function useSorter(props: TdPrimaryTableProps, { emit, slots }: SetupContext) {\n  const { sort, data } = toRefs(props);\n  const originalData = ref();\n  const [tSortInfo, setTSortInfo] = useDefaultValue(sort, props.defaultSort, props.onSortChange, 'sort');\n  const [tData, setTData] = useDefaultValue(data, [], props.onDataChange, 'data');\n  // 本地数据排序：用于记录哪些字段是自定义排序函数\n  const sorterFuncMap = computed(() => getSorterFuncMap(props.columns));\n\n  const sortArray = computed<Array<SortInfo>>(() => {\n    const sort = tSortInfo.value;\n    if (!sort) return [];\n    return Array.isArray(sort) ? sort : [sort];\n  });\n\n  const sortMap = computed<SortMap>(() => {\n    const sortMap = {};\n    sortArray.value.forEach((info, index) => {\n      const { sortBy } = info;\n      sortMap[sortBy] = { index, ...info };\n    });\n    return sortMap;\n  });\n\n  function getSorterFuncMap(columns: PrimaryTableCol[], map: { [key: string]: Function } = {}) {\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const col = columns[i];\n      if (isFunction(col.sorter)) {\n        // eslint-disable-next-line no-param-reassign\n        map[col.colKey] = col.sorter;\n      }\n      // 多级表头中的排序功能\n      if (col.children?.length) {\n        getSorterFuncMap(col.children, map);\n      }\n    }\n    return map;\n  }\n\n  function handleDataSort(sortInfo: SortInfo | Array<SortInfo>) {\n    const sort = sortInfo;\n    if (!Object.keys(sorterFuncMap.value).length) return;\n    if (!originalData.value) {\n      originalData.value = tData.value;\n    }\n    const isEmptyArraySort = !sort || (sort instanceof Array && !sort.length);\n    const isEmptyObjectSort = !(sort instanceof Array) && !sort?.sortBy;\n    if (isEmptyArraySort || isEmptyObjectSort) {\n      setTData(originalData.value, { trigger: 'sort' });\n      return originalData.value;\n    }\n    const formatedSort = sort instanceof Array ? sort : [sort];\n    // data 为受控属性，data.slice() 浅拷贝，防止 sort 导致原数据变异\n    const newData: TableRowData[] = tData.value.slice().sort((a: TableRowData, b: TableRowData) => {\n      let sortResult = 0;\n      for (let i = 0, len = formatedSort.length; i < len; i++) {\n        const item = formatedSort[i];\n        const sortFunc = sorterFuncMap.value[item.sortBy];\n        // 上一个排序字段值相同时才会进行下一个字段的大小对比\n        if (sortResult === 0 && sortFunc) {\n          sortResult = item.descending ? sortFunc(b, a) : sortFunc(a, b);\n        } else {\n          break;\n        }\n      }\n      return sortResult;\n    });\n    // Data 变化返回的是数据引用，为避免死循环，特此检测排序数据前后是否相同，如果相同则不再触发事件\n    if (JSON.stringify(newData) === JSON.stringify(tData.value)) return;\n    setTData(newData, { trigger: 'sort' });\n    return newData;\n  }\n\n  function handleSortHeaderClick(col: PrimaryTableCol<TableRowData>, p: { descending: boolean }) {\n    let sortInfo: SortInfo | Array<SortInfo>;\n    if (props.multipleSort) {\n      sortInfo = getMultipleNextSort(col, p);\n    } else {\n      const sort = tSortInfo.value instanceof Array ? tSortInfo.value[0] : tSortInfo.value;\n      sortInfo = getSingleNextSort(col, sort, p);\n    }\n    // 本地数据 data 排序，需同时抛出 data-change\n    const newData = handleDataSort(sortInfo);\n    const currentData = newData || tData.value;\n    const currentDataSource = currentData;\n    setTSortInfo(sortInfo, { currentDataSource, col });\n    props.onChange?.({ sorter: sortInfo }, { currentData, trigger: 'sorter' });\n  }\n\n  function getSortOrder(descending: boolean) {\n    if (descending === undefined) return;\n    return descending ? 'desc' : 'asc';\n  }\n\n  // 点击新排序字段，则默认按照降序排序；点击原字段，则排序字段不变仅切换排序方式\n  function getSingleNextSort(col: PrimaryTableCol, sortInfo: SortInfo, p: { descending: boolean }): SortInfo {\n    // 排序字段和排序方式均相同，则取消排序\n    if (sortInfo && sortInfo.sortBy === col.colKey && sortInfo.descending === p.descending) {\n      return undefined;\n    }\n    return { sortBy: col.colKey, descending: p.descending };\n  }\n\n  function getMultipleNextSort(col: PrimaryTableCol<TableRowData>, p: { descending: boolean }): Array<SortInfo> {\n    const sort = tSortInfo.value;\n    if (!(sort instanceof Array)) return;\n    const { colKey } = col;\n    const result = [...sort];\n    for (let i = 0, len = sort.length; i < len; i++) {\n      if (sort[i].sortBy === colKey) {\n        const next = getSingleNextSort(col, sort[i], p);\n        next ? (result[i] = next) : result.splice(i, 1);\n        return result;\n      }\n    }\n    result.push({ sortBy: colKey, descending: p.descending });\n    return result;\n  }\n\n  function renderSortIcon({ col }: { col: PrimaryTableCol<TableRowData>; colIndex: number }) {\n    if (!col.sorter) return null;\n    const sorterButtonsProps = {\n      sortType: col.sortType,\n      sortOrder: getSortOrder(sortMap.value[col.colKey]?.descending),\n      sortIcon: props.sortIcon,\n      hideSortTips: props.hideSortTips,\n    };\n    return (\n      <SorterButton\n        v-slots={{ sortIcon: slots.sortIcon }}\n        {...sorterButtonsProps}\n        onSortIconClick={(_: MouseEvent, p: { descending: boolean }) => handleSortHeaderClick(col, p)}\n      />\n    );\n  }\n\n  return {\n    renderSortIcon,\n  };\n}\n"],"names":["useSorter","props","emit","slots","toRefs","sort","data","originalData","ref","useDefaultValue","defaultSort","onSortChange","tSortInfo","setTSortInfo","onDataChange","tData","setTData","sorterFuncMap","computed","getSorterFuncMap","columns","sortArray","value","Array","isArray","sortMap","forEach","info","index","sortBy","map","i","len","length","col","isFunction","sorter","colKey","children","handleDataSort","sortInfo","Object","keys","isEmptyArraySort","isEmptyObjectSort","trigger","formatedSort","newData","slice","a","b","sortResult","item","sortFunc","descending","JSON","stringify","handleSortHeaderClick","p","multipleSort","getMultipleNextSort","getSingleNextSort","currentData","currentDataSource","onChange","getSortOrder","result","next","splice","push","renderSortIcon","sorterButtonsProps","sortType","sortOrder","sortIcon","hideSortTips","_createVNode","_mergeProps","_"],"mappings":"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"}