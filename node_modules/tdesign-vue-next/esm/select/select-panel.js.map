{"version":3,"file":"select-panel.js","sources":["../../src/select/select-panel.tsx"],"sourcesContent":["import { computed, defineComponent, inject, PropType, Slots, ref, ComputedRef } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport omit from 'lodash/omit';\nimport { Styles } from '../common';\n\nimport { SelectOption, SelectOptionGroup, TdOptionProps } from './type';\nimport Option from './option';\nimport OptionGroup from './optionGroup';\nimport TdSelectProps from './props';\n\nimport { useTNodeJSX, useTNodeDefault } from '../hooks/tnode';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { usePanelVirtualScroll } from './hooks/usePanelVirtualScroll';\nimport { selectInjectKey } from './helper';\n\nexport default defineComponent({\n  name: 'TSelectPanel',\n  props: {\n    inputValue: TdSelectProps.inputValue,\n    panelTopContent: TdSelectProps.panelTopContent,\n    panelBottomContent: TdSelectProps.panelBottomContent,\n    empty: TdSelectProps.empty,\n    creatable: TdSelectProps.creatable,\n    loading: TdSelectProps.loading,\n    loadingText: TdSelectProps.loadingText,\n    multiple: TdSelectProps.multiple,\n    filterable: TdSelectProps.filterable,\n    filter: TdSelectProps.filter,\n    options: {\n      type: Array as PropType<SelectOption[]>,\n      default: (): SelectOption[] => [],\n    },\n    scroll: TdSelectProps.scroll,\n  },\n  setup(props, { expose }) {\n    const COMPONENT_NAME = usePrefixClass('select');\n    const renderTNodeJSX = useTNodeJSX();\n    const renderDefaultTNode = useTNodeDefault();\n    const { t, globalConfig } = useConfig('select');\n    const tSelect = inject(selectInjectKey);\n    const innerRef = ref<HTMLElement>(null);\n\n    const popupContentRef = computed(() => tSelect.value.popupContentRef.value);\n    const showCreateOption = computed(() => props.creatable && props.filterable && props.inputValue);\n\n    const displayOptions = computed(() => {\n      if (!props.inputValue || !(props.filterable || isFunction(props.filter))) return props.options;\n\n      const filterMethods = (option: SelectOption) => {\n        if (isFunction(props.filter)) {\n          return props.filter(`${props.inputValue}`, option);\n        }\n\n        return option.label?.indexOf(`${props.inputValue}`) > -1;\n      };\n\n      const res: SelectOption[] = [];\n\n      props.options.forEach((option) => {\n        if ((option as SelectOptionGroup).group && (option as SelectOptionGroup).children) {\n          res.push({\n            ...option,\n            children: (option as SelectOptionGroup).children.filter(filterMethods),\n          });\n        }\n        if (filterMethods(option)) {\n          res.push(option);\n        }\n      });\n\n      return res;\n    });\n\n    const { trs, scrollHeight, translateY, visibleData, handleRowMounted, isVirtual, panelStyle, cursorStyle } =\n      usePanelVirtualScroll({\n        scroll: props.scroll,\n        popupContentRef,\n        options: displayOptions,\n      });\n\n    const isEmpty = computed(() => !displayOptions.value.length);\n\n    const renderCreateOption = () => (\n      <ul class={[`${COMPONENT_NAME.value}__create-option`, `${COMPONENT_NAME.value}__list`]}>\n        <Option\n          value={props.inputValue}\n          label={`${props.inputValue}`}\n          createAble={true}\n          class={`${COMPONENT_NAME.value}__create-option--special`}\n        />\n      </ul>\n    );\n\n    // 递归render options\n    const renderOptionsContent = (options: SelectOption[]) => {\n      return (\n        <ul class={`${COMPONENT_NAME.value}__list`}>\n          {options.map((item: SelectOptionGroup & TdOptionProps & { slots: Slots } & { $index: number }, index) => {\n            if (item.group) {\n              return (\n                <OptionGroup label={item.group} divider={item.divider}>\n                  {renderOptionsContent(item.children)}\n                </OptionGroup>\n              );\n            }\n            return (\n              <Option\n                {...omit(item, '$index')}\n                {...(isVirtual.value\n                  ? {\n                      rowIndex: item.$index,\n                      trs,\n                      scrollType: props.scroll?.type,\n                      isVirtual: isVirtual.value,\n                      bufferSize: props.scroll?.bufferSize,\n                      key: `${item.$index || ''}_${index}`,\n                    }\n                  : {\n                      key: index,\n                    })}\n                multiple={props.multiple}\n                v-slots={item.slots}\n                onRowMounted={handleRowMounted}\n              />\n            );\n          })}\n        </ul>\n      );\n    };\n    const dropdownInnerSize = computed(() => {\n      return {\n        small: 's',\n        medium: 'm',\n        large: 'l',\n      }[tSelect.value.size];\n    });\n\n    expose({\n      innerRef,\n    });\n\n    const renderPanel = (options: ComputedRef<SelectOption[]>, extraStyle?: ComputedRef<Styles>) => (\n      <div\n        ref={innerRef}\n        class={[\n          `${COMPONENT_NAME.value}__dropdown-inner`,\n          `${COMPONENT_NAME.value}__dropdown-inner--size-${dropdownInnerSize.value}`,\n        ]}\n        onClick={(e) => e.stopPropagation()}\n        style={extraStyle?.value}\n      >\n        {renderTNodeJSX('panelTopContent')}\n        {/* create option */}\n        {showCreateOption.value && renderCreateOption()}\n        {/* loading状态 */}\n        {props.loading &&\n          renderDefaultTNode('loadingText', {\n            defaultNode: <div class={`${COMPONENT_NAME.value}__loading-tips`}>{t(globalConfig.value.loadingText)}</div>,\n          })}\n        {/* 空状态 */}\n        {!props.loading &&\n          isEmpty.value &&\n          !showCreateOption.value &&\n          renderDefaultTNode('empty', {\n            defaultNode: <div class={`${COMPONENT_NAME.value}__empty`}>{t(globalConfig.value.empty)}</div>,\n          })}\n        {!isEmpty.value && !props.loading && renderOptionsContent(options.value)}\n        {renderTNodeJSX('panelBottomContent')}\n      </div>\n    );\n\n    if (isVirtual.value) {\n      return () => (\n        <div>\n          <div style={cursorStyle.value}></div>\n          {renderPanel(visibleData as ComputedRef<SelectOption[]>, panelStyle)}\n        </div>\n      );\n    }\n\n    return () => renderPanel(displayOptions);\n  },\n});\n"],"names":["defineComponent","name","props","inputValue","TdSelectProps","panelTopContent","panelBottomContent","empty","creatable","loading","loadingText","multiple","filterable","filter","options","type","Array","scroll","setup","expose","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","renderDefaultTNode","useTNodeDefault","useConfig","t","globalConfig","tSelect","inject","selectInjectKey","innerRef","ref","popupContentRef","computed","value","showCreateOption","displayOptions","isFunction","filterMethods","option","label","indexOf","res","forEach","group","children","push","usePanelVirtualScroll","trs","scrollHeight","translateY","visibleData","handleRowMounted","isVirtual","panelStyle","cursorStyle","isEmpty","length","renderCreateOption","_createVNode","Option","renderOptionsContent","map","item","index","OptionGroup","divider","omit","rowIndex","$index","scrollType","bufferSize","key","slots","dropdownInnerSize","small","medium","large","size","renderPanel","extraStyle","e","stopPropagation","defaultNode"],"mappings":"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"}