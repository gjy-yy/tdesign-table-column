{"version":3,"file":"option.js","sources":["../../src/select/option.tsx"],"sourcesContent":["import { defineComponent, ref, computed, inject, onMounted, onBeforeUnmount } from 'vue';\n\nimport props from './option-props';\nimport Checkbox from '../checkbox/index';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport useRipple from '../hooks/useRipple';\nimport { useContent } from '../hooks/tnode';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { selectInjectKey, getNewMultipleValue } from './helper';\nimport { SelectValue } from './type';\n\nexport default defineComponent({\n  name: 'TOption',\n\n  props: {\n    ...props,\n    createAble: Boolean,\n    multiple: Boolean,\n    index: Number,\n    rowIndex: Number,\n    trs: Map,\n    scrollType: String,\n    isVirtual: Boolean,\n    bufferSize: Number,\n    checkAll: Boolean,\n  },\n  emits: ['row-mounted'],\n\n  setup(props, context) {\n    const selectProvider = inject(selectInjectKey);\n    const formDisabled = useFormDisabled();\n\n    const optionNode = ref(null);\n\n    const disabled = computed(\n      () =>\n        formDisabled.value ||\n        (props.multiple &&\n          selectProvider.value.max <= (selectProvider.value.selectValue as SelectValue[]).length &&\n          selectProvider.value.max !== 0),\n    );\n\n    const renderContent = useContent();\n\n    const selectName = usePrefixClass('select');\n    const { STATUS, SIZE } = useCommonClassName();\n    const liRef = ref<HTMLElement>();\n\n    const isHover = ref(false);\n\n    const isSelected = computed(() => {\n      if (selectProvider.value.isCheckAll && !props.disabled) return true;\n      return !props.multiple\n        ? selectProvider.value.selectValue === props.value\n        : (selectProvider.value.selectValue as SelectValue[]).includes(props.value);\n    });\n\n    const isIndeterminate = computed(() => {\n      if (!props.checkAll) return false;\n      return selectProvider.value.indeterminate;\n    });\n\n    const classes = computed(() => [\n      `${selectName.value}-option`,\n      [SIZE.value[selectProvider.value.size]],\n      {\n        [STATUS.value.disabled]: disabled.value,\n        [STATUS.value.selected]: isSelected.value,\n        [`${selectName.value}-option__hover`]:\n          (isHover.value || selectProvider.value.hoverIndex === props.index) && !disabled.value && !isSelected.value,\n      },\n    ]);\n\n    const labelText = computed(() => props.label || props.value);\n\n    const handleClick = (e: MouseEvent | KeyboardEvent) => {\n      if (props.multiple || props.disabled) return;\n      e.stopPropagation();\n\n      if (props.createAble) {\n        selectProvider.value.handleCreate?.(props.value);\n        if (selectProvider.value.multiple) {\n          (selectProvider.value.selectValue as SelectValue[]).push(props.value);\n          selectProvider.value.handleValueChange(selectProvider.value.selectValue, {\n            selectedOptions: selectProvider.value.getSelectedOptions(),\n            trigger: 'check',\n            e,\n          });\n          return;\n        }\n      }\n\n      selectProvider.value.handleValueChange(props.value, {\n        selectedOptions: selectProvider.value.getSelectedOptions(props.value),\n        trigger: 'check',\n        e,\n      });\n      selectProvider.value.handlePopupVisibleChange(false, { e });\n    };\n\n    const handleCheckboxClick = (val: boolean, context: { e: MouseEvent | KeyboardEvent }) => {\n      if (props.checkAll) {\n        selectProvider.value.onCheckAllChange(val);\n        return;\n      }\n      const newValue = getNewMultipleValue(selectProvider.value.selectValue as SelectValue[], props.value);\n      selectProvider.value.handleValueChange(newValue.value, {\n        selectedOptions: selectProvider.value.getSelectedOptions(newValue.value),\n        trigger: val ? 'check' : 'uncheck',\n        e: context.e,\n      });\n      if (!selectProvider.value.reserveKeyword) {\n        selectProvider.value.handlerInputChange('');\n      }\n    };\n\n    // 处理虚拟滚动节点挂载\n    onMounted(() => {\n      const { trs, rowIndex, isVirtual } = props;\n      if (isVirtual) {\n        trs.set(rowIndex, liRef.value);\n        context.emit('row-mounted');\n      }\n    });\n\n    // 处理虚拟滚动节点移除\n    onBeforeUnmount(() => {\n      if (props.isVirtual) {\n        const { trs, rowIndex } = props;\n        trs.delete(rowIndex);\n      }\n    });\n\n    useRipple(liRef);\n\n    return () => {\n      const optionChild = renderContent('default', 'content') || labelText.value;\n\n      return (\n        <li\n          ref={liRef}\n          class={classes.value}\n          title={`${labelText.value}`}\n          onMouseenter={() => (isHover.value = true)}\n          onMouseleave={() => (isHover.value = false)}\n          onClick={handleClick}\n        >\n          {selectProvider && props.multiple ? (\n            <Checkbox\n              checked={isSelected.value}\n              disabled={disabled.value && !isSelected.value}\n              onChange={handleCheckboxClick}\n              indeterminate={isIndeterminate.value}\n            >\n              {optionChild}\n            </Checkbox>\n          ) : (\n            <span>{optionChild}</span>\n          )}\n        </li>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","createAble","Boolean","multiple","index","Number","rowIndex","trs","Map","scrollType","String","isVirtual","bufferSize","checkAll","emits","setup","context","selectProvider","inject","selectInjectKey","formDisabled","useFormDisabled","optionNode","ref","disabled","computed","value","max","selectValue","length","renderContent","useContent","selectName","usePrefixClass","useCommonClassName","STATUS","SIZE","liRef","isHover","isSelected","isCheckAll","includes","isIndeterminate","indeterminate","classes","size","selected","hoverIndex","labelText","label","handleClick","e","stopPropagation","handleCreate","push","handleValueChange","selectedOptions","getSelectedOptions","trigger","handlePopupVisibleChange","handleCheckboxClick","val","onCheckAllChange","newValue","getNewMultipleValue","reserveKeyword","handlerInputChange","onMounted","set","emit","onBeforeUnmount","useRipple","optionChild","_createVNode"],"mappings":"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"}