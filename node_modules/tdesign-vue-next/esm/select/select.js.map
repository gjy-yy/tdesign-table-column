{"version":3,"file":"select.js","sources":["../../src/select/select.tsx"],"sourcesContent":["import { defineComponent, provide, computed, toRefs, watch, ref, nextTick } from 'vue';\nimport picker from 'lodash/pick';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport debounce from 'lodash/debounce';\nimport cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\n\nimport { intersection } from 'lodash';\nimport FakeArrow from '../common-components/fake-arrow';\nimport SelectInput from '../select-input';\nimport SelectPanel from './select-panel';\n\nimport props from './props';\nimport { TdSelectProps, SelectValue } from './type';\nimport { PopupVisibleChangeContext } from '../popup';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport useVModel from '../hooks/useVModel';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { selectInjectKey, getSingleContent, getMultipleContent, getNewMultipleValue } from './helper';\nimport { useSelectOptions } from './hooks/useSelectOptions';\n\nexport default defineComponent({\n  name: 'TSelect',\n  props: { ...props },\n  setup(props: TdSelectProps, { slots, expose, ...res }) {\n    const classPrefix = usePrefixClass();\n    const disabled = useFormDisabled();\n    const renderTNodeJSX = useTNodeJSX();\n    const COMPONENT_NAME = usePrefixClass('select');\n    const { globalConfig, t } = useConfig('select');\n    const { popupVisible, inputValue, modelValue, value } = toRefs(props);\n    const [orgValue, setOrgValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const selectPanelRef = ref(null);\n    const selectInputRef = ref(null);\n    const keys = computed(() => ({\n      label: props.keys?.label || 'label',\n      value: props.keys?.value || 'value',\n    }));\n    const { options, optionsMap, optionsList } = useSelectOptions(props, keys);\n\n    // 内部数据,格式化过的\n    const innerValue = computed(() => {\n      if (props.valueType === 'object') {\n        return !props.multiple\n          ? orgValue.value[keys.value.value]\n          : (orgValue.value as SelectValue[]).map((option) => option[keys.value.value]);\n      }\n      return orgValue.value;\n    });\n    const setInnerValue: TdSelectProps['onChange'] = (newVal: SelectValue | SelectValue[], e) => {\n      if (props.valueType === 'object') {\n        const { value, label } = keys.value;\n        const getOption = (val: SelectValue) => {\n          const option = optionsMap.value.get(val);\n          return {\n            [value]: get(option, value),\n            [label]: get(option, label),\n          };\n        };\n        newVal = props.multiple ? (newVal as SelectValue[]).map((val) => getOption(val)) : getOption(newVal);\n      }\n      if (newVal === orgValue.value) return;\n      setOrgValue(newVal, { selectedOptions: getSelectedOptions(newVal), trigger: e.trigger, e: e.e });\n    };\n\n    const [innerInputValue, setInputValue] = useDefaultValue(\n      inputValue,\n      props.defaultInputValue,\n      props.onInputChange,\n      'inputValue',\n    );\n    const [innerPopupVisible, setInnerPopupVisible] = useDefaultValue(\n      popupVisible,\n      false,\n      (visible: boolean, context: PopupVisibleChangeContext) => {\n        props.onPopupVisibleChange?.(visible, context);\n        props.onVisibleChange?.(visible);\n      },\n      'popupVisible',\n    );\n\n    const placeholderText = computed(\n      () =>\n        ((!props.multiple && innerPopupVisible.value && getSingleContent(innerValue.value, optionsList.value)) ||\n          props.placeholder) ??\n        t(globalConfig.value.placeholder),\n    );\n\n    // selectInput 展示值\n    const displayText = computed(() =>\n      props.multiple\n        ? getMultipleContent(innerValue.value as SelectValue[], optionsList.value)\n        : getSingleContent(innerValue.value, optionsList.value),\n    );\n\n    // valueDisplayParams参数\n    const valueDisplayParams = computed(() => {\n      return props.multiple && isArray(innerValue.value)\n        ? (innerValue.value as SelectValue[]).map((value) => ({\n            value,\n            label: optionsMap.value.get(value)?.label,\n          }))\n        : innerValue.value;\n    });\n\n    const isFilterable = computed(() => {\n      return Boolean(props.filterable || globalConfig.value.filterable || isFunction(props.filter));\n    });\n\n    // 移除tag\n    const removeTag = (index: number, e?: MouseEvent) => {\n      e && e.stopPropagation();\n      const selectValue = cloneDeep(innerValue.value) as SelectValue[];\n      const value = selectValue[index];\n      selectValue.splice(index, 1);\n      setInnerValue(selectValue, { selectedOptions: getSelectedOptions(selectValue), trigger: 'tag-remove', e });\n      props.onRemove?.({\n        value: value as string | number,\n        data: optionsMap.value.get(value),\n        e,\n      });\n    };\n\n    const handleCreate = () => {\n      if (!innerInputValue.value) return;\n      props.onCreate?.(innerInputValue.value);\n      setInputValue('');\n    };\n\n    // 键盘操作逻辑\n    const hoverIndex = ref(-1);\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const optionsListLength = optionsList.value.length;\n      let newIndex = hoverIndex.value;\n      switch (e.code) {\n        case 'ArrowUp':\n          e.preventDefault();\n          if (hoverIndex.value === -1) {\n            newIndex = 0;\n          } else if (hoverIndex.value === 0) {\n            newIndex = optionsListLength - 1;\n          } else {\n            newIndex--;\n          }\n          if (optionsList.value[newIndex]?.disabled) {\n            newIndex--;\n          }\n          hoverIndex.value = newIndex;\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          if (hoverIndex.value === -1 || hoverIndex.value === optionsListLength - 1) {\n            newIndex = 0;\n          } else {\n            newIndex++;\n          }\n          if (optionsList.value[newIndex]?.disabled) {\n            newIndex++;\n          }\n          hoverIndex.value = newIndex;\n          break;\n        case 'Enter':\n          if (hoverIndex.value === -1) break;\n          if (!innerPopupVisible.value) {\n            setInnerPopupVisible(true, { e });\n            break;\n          }\n          if (!props.multiple) {\n            setInnerValue(optionsList.value[hoverIndex.value].value, {\n              selectedOptions: getSelectedOptions(optionsList.value[hoverIndex.value].value),\n              trigger: 'check',\n              e,\n            });\n            setInnerPopupVisible(false, { e });\n          } else {\n            if (hoverIndex.value === -1) return;\n            const optionValue = optionsList.value[hoverIndex.value]?.value;\n            if (!optionValue) return;\n            const newValue = getNewMultipleValue(innerValue.value, optionValue);\n            setInnerValue(newValue.value, {\n              selectedOptions: getSelectedOptions(newValue.value),\n              trigger: newValue.isCheck ? 'check' : 'uncheck',\n              e,\n            });\n          }\n          break;\n        case 'Escape':\n          setInnerPopupVisible(false, { e });\n          break;\n      }\n    };\n\n    const popupContentRef = computed(() => selectInputRef.value?.selectInputRef.getOverlay() as HTMLElement);\n\n    /**\n     * 可选选项的列表\n     * 排除已禁用和全选的选项\n     */\n    const optionalList = computed(() =>\n      optionsList.value.filter((item) => {\n        return !item.disabled && !item['check-all'] && !item.checkAll;\n      }),\n    );\n\n    const getSelectedOptions = (selectValue: SelectValue[] | SelectValue = innerValue.value) => {\n      return optionsList.value.filter((option) => {\n        if (option.checkAll) return;\n        if (Array.isArray(selectValue)) return selectValue.includes(option.value);\n        return selectValue === option.value;\n      });\n    };\n\n    const onCheckAllChange = (checked: boolean) => {\n      if (!props.multiple) return;\n      const value = checked ? optionalList.value.map((option) => option.value) : [];\n      setInnerValue(value, { selectedOptions: getSelectedOptions(value), trigger: checked ? 'check' : 'clear' });\n    };\n\n    // 已选的长度\n    const intersectionLen = computed<number>(() => {\n      const values = optionalList.value.map((item) => item.value);\n      const n = intersection(innerValue.value, values);\n      return n.length;\n    });\n\n    // 全选\n    const isCheckAll = computed<boolean>(() => {\n      return intersectionLen.value === optionalList.value.length;\n    });\n\n    // 半选\n    const indeterminate = computed<boolean>(() => !isCheckAll.value && intersectionLen.value !== 0);\n\n    const SelectProvide = computed(() => ({\n      max: props.max,\n      multiple: props.multiple,\n      hoverIndex: hoverIndex.value,\n      selectValue: innerValue.value,\n      reserveKeyword: props.reserveKeyword,\n      handleValueChange: setInnerValue,\n      handlerInputChange: setInputValue,\n      handlePopupVisibleChange: setInnerPopupVisible,\n      handleCreate,\n      size: props.size,\n      popupContentRef,\n      indeterminate: indeterminate.value,\n      isCheckAll: isCheckAll.value,\n      onCheckAllChange,\n      getSelectedOptions,\n    }));\n\n    provide(selectInjectKey, SelectProvide);\n\n    const checkValueInvalid = () => {\n      // 参数类型检测与修复\n      if (!props.multiple && isArray(orgValue.value)) {\n        setOrgValue('');\n      }\n      if (props.multiple && !isArray(orgValue.value)) {\n        setOrgValue([]);\n      }\n    };\n    const handleSearch = debounce((value: string) => {\n      props.onSearch?.(`${value}`);\n    }, 300);\n\n    watch(\n      orgValue,\n      () => {\n        checkValueInvalid();\n      },\n      {\n        immediate: true,\n      },\n    );\n    watch(\n      () => props.multiple,\n      () => {\n        checkValueInvalid();\n      },\n    );\n    watch(innerPopupVisible, (value) => {\n      if (value) {\n        hoverIndex.value = -1;\n      }\n    });\n\n    // 列表展开时定位置选中项\n    const updateScrollTop = (content: HTMLDivElement) => {\n      if (!selectPanelRef.value) {\n        return;\n      }\n      const firstSelectedNode: HTMLDivElement = (selectPanelRef.value?.innerRef as HTMLDivElement)?.querySelector(\n        `.${classPrefix.value}-is-selected`,\n      );\n      // 此处需要等待渲染后进行计算\n      nextTick(() => {\n        if (firstSelectedNode && content) {\n          const { paddingBottom } = getComputedStyle(firstSelectedNode);\n          const { marginBottom } = getComputedStyle(content);\n          const elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);\n          // 小于0时不需要特殊处理，会被设为0\n          const updateValue =\n            firstSelectedNode.offsetTop -\n            content.offsetTop -\n            (content.clientHeight - firstSelectedNode.clientHeight) +\n            elementBottomHeight;\n          // eslint-disable-next-line no-param-reassign\n          content.scrollTop = updateValue;\n        }\n      });\n    };\n    provide('updateScrollTop', updateScrollTop);\n\n    return () => {\n      const { overlayClassName, ...restPopupProps } = (props.popupProps || {}) as TdSelectProps['popupProps'];\n      return (\n        <div class={`${COMPONENT_NAME.value}__wrap`}>\n          <SelectInput\n            {...{\n              autoWidth: props.autoWidth,\n              readonly: props.readonly,\n              borderless: props.borderless || !props.bordered,\n              multiple: props.multiple,\n              clearable: props.clearable,\n              loading: props.loading,\n              status: props.status,\n              tips: props.tips,\n              minCollapsedNum: props.minCollapsedNum,\n            }}\n            ref={selectInputRef}\n            class={COMPONENT_NAME.value}\n            value={displayText.value}\n            disabled={disabled.value}\n            popupVisible={innerPopupVisible.value}\n            inputValue={innerPopupVisible.value ? innerInputValue.value : ''}\n            placeholder={`${placeholderText.value}`}\n            allowInput={isFilterable.value}\n            collapsed-items={props.collapsedItems}\n            inputProps={{\n              size: props.size,\n              ...(props.inputProps as TdSelectProps['inputProps']),\n              onkeydown: handleKeyDown,\n            }}\n            tagInputProps={{\n              size: props.size,\n              ...(props.tagInputProps as TdSelectProps['tagInputProps']),\n            }}\n            onTagChange={(val, ctx) => {\n              removeTag(ctx.index);\n            }}\n            tagProps={{ ...(props.tagProps as TdSelectProps['tagProps']) }}\n            popupProps={{\n              overlayClassName: [`${COMPONENT_NAME.value}__dropdown`, overlayClassName],\n              ...restPopupProps,\n            }}\n            label={() => renderTNodeJSX('prefixIcon')}\n            suffixIcon={() =>\n              props.showArrow && (\n                <FakeArrow\n                  overlayClassName={`${COMPONENT_NAME.value}__right-icon`}\n                  isActive={innerPopupVisible.value}\n                />\n              )\n            }\n            valueDisplay={() =>\n              renderTNodeJSX('valueDisplay', {\n                params: { value: valueDisplayParams.value, onClose: (index: number) => removeTag(index) },\n              })\n            }\n            onPopupVisibleChange={(val: boolean, context) => {\n              setInnerPopupVisible(val, context);\n            }}\n            onInputChange={(value) => {\n              if (!innerPopupVisible.value) return;\n              setInputValue(value);\n              handleSearch(`${value}`);\n            }}\n            onClear={({ e }) => {\n              setInnerValue(props.multiple ? [] : '', {\n                selectedOptions: getSelectedOptions(props.multiple ? [] : ''),\n                trigger: 'clear',\n                e,\n              });\n              props.onClear?.({ e });\n            }}\n            onEnter={(inputValue, { e }) => {\n              props.onEnter?.({ inputValue: `${innerInputValue.value}`, e, value: innerValue.value });\n              handleCreate();\n            }}\n            onBlur={(inputValue, { e }) => {\n              props.onBlur?.({ e, value: innerValue.value });\n            }}\n            onFocus={(inputValue, { e }) => {\n              props.onFocus?.({ e, value: innerValue.value });\n            }}\n            {...(props.selectInputProps as TdSelectProps['selectInputProps'])}\n            v-slots={{\n              panel: () => (\n                <SelectPanel\n                  ref={selectPanelRef}\n                  {...picker(props, [\n                    'size',\n                    'multiple',\n                    'empty',\n                    'loading',\n                    'loadingText',\n                    'filterable',\n                    'creatable',\n                    'panelTopContent',\n                    'panelBottomContent',\n                    'filter',\n                    'scroll',\n                  ])}\n                  options={options.value}\n                  inputValue={innerInputValue.value}\n                  v-slots={slots}\n                />\n              ),\n              collapsedItems: slots.collapsedItems,\n            }}\n          />\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","slots","expose","res","classPrefix","usePrefixClass","disabled","useFormDisabled","renderTNodeJSX","useTNodeJSX","COMPONENT_NAME","useConfig","globalConfig","t","toRefs","popupVisible","inputValue","modelValue","value","useVModel","defaultValue","onChange","orgValue","setOrgValue","selectPanelRef","ref","selectInputRef","keys","computed","label","useSelectOptions","options","optionsMap","optionsList","innerValue","valueType","multiple","map","option","setInnerValue","newVal","e","getOption","val","get","selectedOptions","getSelectedOptions","trigger","useDefaultValue","defaultInputValue","onInputChange","innerInputValue","setInputValue","visible","context","onPopupVisibleChange","onVisibleChange","innerPopupVisible","setInnerPopupVisible","placeholderText","getSingleContent","placeholder","displayText","getMultipleContent","valueDisplayParams","isArray","isFilterable","Boolean","filterable","isFunction","filter","removeTag","index","stopPropagation","selectValue","cloneDeep","splice","onRemove","data","handleCreate","onCreate","hoverIndex","handleKeyDown","optionsListLength","length","newIndex","code","preventDefault","optionValue","newValue","getNewMultipleValue","isCheck","popupContentRef","getOverlay","optionalList","item","checkAll","Array","includes","onCheckAllChange","checked","intersectionLen","values","n","intersection","isCheckAll","indeterminate","SelectProvide","max","reserveKeyword","handleValueChange","handlerInputChange","handlePopupVisibleChange","size","provide","selectInjectKey","checkValueInvalid","handleSearch","debounce","onSearch","watch","immediate","updateScrollTop","content","firstSelectedNode","innerRef","querySelector","nextTick","getComputedStyle","paddingBottom","marginBottom","elementBottomHeight","parseInt","updateValue","offsetTop","clientHeight","scrollTop","popupProps","overlayClassName","restPopupProps","_createVNode","_mergeProps","autoWidth","readonly","borderless","bordered","clearable","loading","status","tips","minCollapsedNum","collapsedItems","inputProps","onkeydown","tagInputProps","ctx","tagProps","showArrow","params","onClose","onClear","onEnter","onBlur","onFocus","selectInputProps","panel","picker"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,cAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,SADuB;EAE7BC,KAAA,EAAA,aAAA,CAAA,EAAA,EAAYA,KAAZ,CAF6B;EAG7BC,KAH6B,EAAA,SAAA,KAAA,CAGvBD,MAHuB,EAG0B,IAAA,EAAA;IAAA,IAAzBE,KAAyB,QAAzBA,KAAyB;QAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,QAAPC,GAAO,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;IACrD,IAAMC,cAAcC,cAAe,EAAnC,CAAA;IACA,IAAMC,WAAWC,eAAgB,EAAjC,CAAA;IACA,IAAMC,iBAAiBC,WAAY,EAAnC,CAAA;AACM,IAAA,IAAAC,cAAA,GAAiBL,eAAe,SAAhC,CAAA;;IACN,IAA4BM,UAAAA,GAAAA,UAAU,SAAtC;QAAQC,YAAR,cAAQA,YAAR;QAAsBC,CAAtB,cAAsBA,CAAtB,CAAA;;IACA,IAAwDC,OAAAA,GAAAA,OAAOf,OAA/D;QAAQgB,YAAR,WAAQA,YAAR;QAAsBC,UAAtB,WAAsBA,UAAtB;QAAkCC,UAAlC,WAAkCA,UAAlC;QAA8CC,KAA9C,WAA8CA,KAA9C,CAAA;;AACM,IAAA,IAAA,UAAA,GAA0BC,SAAA,CAAUD,KAAV,EAAiBD,UAAjB,EAA6BlB,MAAAA,CAAMqB,YAAnC,EAAiDrB,MAAAA,CAAMsB,QAAvD,CAA1B;AAAA,QAAA,WAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAA,QAACC,QAAD,GAAA,WAAA,CAAA,CAAA,CAAA;AAAA,QAAWC,WAAX,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA;;AACA,IAAA,IAAAC,cAAA,GAAiBC,IAAI,KAArB,CAAA;AACA,IAAA,IAAAC,cAAA,GAAiBD,IAAI,KAArB,CAAA;IACA,IAAAE,IAAA,GAAOC,SAAS,YAAA;AAAA,MAAA,IAAA,YAAA,EAAA,aAAA,CAAA;;MAAA,OAAO;QAC3BC,KAAA,EAAO9B,iBAAAA,MAAM,CAAA4B,IAAN5B,MAAY8B,IAAAA,IAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,YAAAA,CAAAA,KAAZ9B,KAAqB,OADD;AAE3BmB,QAAAA,KAAA,EAAOnB,CAAAA,CAAAA,aAAAA,GAAAA,MAAM,CAAA4B,IAAN5B,MAAAA,IAAAA,IAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAAA,CAAYmB,KAAZnB,KAAqB,OAAA;OAFR,CAAA;AAAA,MAAhB,CAAA;;AAIN,IAAA,IAAA,iBAAA,GAA6C+B,gBAAA,CAAiB/B,MAAjB,EAAwB4B,IAAxB,CAA7C;QAAQI,OAAR,qBAAQA,OAAR;QAAiBC,UAAjB,qBAAiBA,UAAjB;QAA6BC,WAA7B,qBAA6BA,WAA7B,CAAA;;AAGM,IAAA,IAAAC,UAAA,GAAaN,SAAS,YAAM;AAC5B7B,MAAAA,IAAAA,MAAAA,CAAMoC,SAANpC,KAAoB,QAApBA,EAA8B;QAChC,OAAO,CAACA,MAAM,CAAAqC,QAAP,GACHd,QAAS,CAAAJ,KAAT,CAAeS,KAAKT,KAAL,CAAWA,KAA1B,CADG,GAEFI,QAAS,CAAAJ,KAAT,CAAiCmB,GAAjC,CAAqC,UAACC,MAAD,EAAA;AAAA,UAAA,OAAYA,MAAO,CAAAX,IAAA,CAAKT,KAAL,CAAWA,KAAX,CAAnB,CAAA;AAAA,SAArC,CAFL,CAAA;AAGF,OAAA;;MACA,OAAOI,QAAS,CAAAJ,KAAhB,CAAA;AACD,MAPK,CAAA;;IAQA,IAAAqB,aAAA,GAA2C,SAA3CA,aAA2C,CAACC,MAAD,EAAsCC,CAAtC,EAA4C;AACvF1C,MAAAA,IAAAA,MAAAA,CAAMoC,SAANpC,KAAoB,QAApBA,EAA8B;QAChC,IAAyB4B,WAAAA,GAAAA,IAAK,CAAAT,KAA9B;YAAQA,MAAR,eAAQA,KAAR;YAAeW,KAAf,eAAeA,KAAf,CAAA;;AACM,QAAA,IAAAa,SAAA,GAAY,SAAZA,SAAY,CAACC,GAAD,EAAsB;AAAA,UAAA,IAAA,KAAA,CAAA;;UACtC,IAAML,MAAS,GAAAN,UAAA,CAAWd,KAAX,CAAiB0B,GAAjB,CAAqBD,GAArB,CAAf,CAAA;AACO,UAAA,OAAA,KAAA,GAAA,EAAA,EAAA,eAAA,CAAA,KAAA,EACJzB,MADI,EACI0B,GAAI,CAAAN,MAAA,EAAQpB,MAAR,CADR,CAEJW,EAAAA,eAAAA,CAAAA,KAAAA,EAAAA,KAFI,EAEIe,GAAI,CAAAN,MAAA,EAAQT,KAAR,CAFR,CAAA,EAAA,KAAA,CAAA;SAFH,CAAA;;QAOG9B,MAAAA,GAAAA,MAAAA,CAAMqC,QAANrC,GAAkByC,MAAA,CAAyBH,GAAzB,CAA6B,UAACM,GAAD,EAAA;UAAA,OAASD,SAAA,CAAUC,GAAV,CAAT,CAAA;AAAA,SAA7B,CAAlB5C,GAA0E2C,SAAA,CAAUF,MAAV,CAA1EzC,CAAAA;AACX,OAAA;;AACA,MAAA,IAAIyC,WAAWlB,QAAS,CAAAJ,KAAxB,EAA+B,OAAA;MAC/BK,WAAA,CAAYiB,MAAZ,EAAoB;AAAEK,QAAAA,eAAiB,EAAAC,kBAAA,CAAmBN,MAAnB,CAAnB;QAA+CO,OAAS,EAAAN,CAAA,CAAEM,OAA1D;QAAmEN,CAAA,EAAGA,CAAE,CAAAA,CAAAA;AAAxE,OAApB,CAAA,CAAA;KAbI,CAAA;;AAgBA,IAAA,IAAA,gBAAA,GAAmCO,eAAA,CACvChC,UADuC,EAEvCjB,MAAM,CAAAkD,iBAFiC,EAGvClD,MAAM,CAAAmD,aAHiC,EAIvC,YAJuC,CAAnC;AAAA,QAAA,iBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,QAACC,eAAD,GAAA,iBAAA,CAAA,CAAA,CAAA;AAAA,QAAkBC,aAAlB,GAAA,iBAAA,CAAA,CAAA,CAAA,CAAA;;IAMA,IAA4CJ,iBAAAA,GAAAA,eAAA,CAChDjC,YADgD,EAEhD,KAFgD,EAGhD,UAACsC,OAAD,EAAmBC,OAAnB,EAA0D;AAAA,MAAA,IAAA,qBAAA,EAAA,qBAAA,CAAA;;MACxDvD,CAAAA,qBAAAA,GAAAA,MAAAA,CAAMwD,oBAANxD,MAAAA,IAAAA,IAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAA6BsD,OAA7BtD,EAAsCuD,OAAtCvD,CAAAA,CAAAA;AACAA,MAAAA,CAAAA,qBAAAA,GAAAA,MAAAA,CAAMyD,eAANzD,qFAAAA,MAAAA,EAAwBsD,OAAxBtD,CAAAA,CAAAA;KAL8C,EAOhD,cAPgD,CAA5C;AAAA,QAAA,iBAAA,GAAA,cAAA,CAAA,iBAAA,EAAA,CAAA,CAAA;AAAA,QAAC0D,iBAAD,GAAA,iBAAA,CAAA,CAAA,CAAA;AAAA,QAAoBC,oBAApB,GAAA,iBAAA,CAAA,CAAA,CAAA,CAAA;;IAUN,IAAMC,eAAkB,GAAA/B,QAAA,CACtB,YAAA;AAAA,MAAA,IAAA,KAAA,CAAA;;AAAA,MAAA,OAAA,CAAA,KAAA,GACI,CAAC7B,MAAAA,CAAMqC,QAAP,IAAmBqB,iBAAA,CAAkBvC,KAArC,IAA8C0C,gBAAiB,CAAA1B,UAAA,CAAWhB,KAAX,EAAkBe,WAAA,CAAYf,KAA9B,CAA/D,IACAnB,MAAAA,CAAM8D,WAFV,MAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAGEhD,CAAE,CAAAD,YAAA,CAAaM,KAAb,CAAmB2C,WAAnB,CAHJ,CAAA;AAAA,KADsB,CAAxB,CAAA;IAQA,IAAMC,WAAc,GAAAlC,QAAA,CAAS,YAAA;MAAA,OAC3B7B,MAAAA,CAAMqC,QAANrC,GACIgE,kBAAA,CAAmB7B,UAAW,CAAAhB,KAA9B,EAAsDe,WAAY,CAAAf,KAAlE,CADJnB,GAEI6D,gBAAA,CAAiB1B,UAAW,CAAAhB,KAA5B,EAAmCe,YAAYf,KAA/C,CAHuB,CAAA;AAAA,KAAT,CAApB,CAAA;AAOM,IAAA,IAAA8C,kBAAA,GAAqBpC,SAAS,YAAM;AACjC7B,MAAAA,OAAAA,MAAAA,CAAMqC,QAANrC,IAAkBkE,OAAA,CAAQ/B,UAAW,CAAAhB,KAAnB,CAAlBnB,GACFmC,UAAW,CAAAhB,KAAX,CAAmCmB,GAAnC,CAAuC,UAACnB,MAAD,EAAA;AAAA,QAAA,IAAA,qBAAA,CAAA;;QAAA,OAAY;AAClDA,UAAAA,KAAAA,EAAAA,MADkD;UAElDW,KAAO,EAAA,CAAA,qBAAA,GAAAG,UAAA,CAAWd,KAAX,CAAiB0B,GAAjB,CAAqB1B,MAArB,CAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAA6BW,CAAAA,KAAAA;SAFE,CAAA;AAAA,OAAvC,CADE9B,GAKHmC,UAAW,CAAAhB,KALRnB,CAAAA;AAMR,MAPK,CAAA;AASA,IAAA,IAAAmE,YAAA,GAAetC,SAAS,YAAM;AAC3B,MAAA,OAAAuC,OAAA,CAAQpE,OAAMqE,UAANrE,IAAoBa,YAAA,CAAaM,KAAb,CAAmBkD,UAAvCrE,IAAqDsE,UAAA,CAAWtE,MAAM,CAAAuE,MAAjB,CAA7D,CAAA,CAAA;AACR,MAFK,CAAA;;IAKA,IAAAC,SAAA,GAAY,SAAZA,SAAY,CAACC,KAAD,EAAgB/B,CAAhB,EAAmC;AAAA,MAAA,IAAA,gBAAA,CAAA;;AACnDA,MAAAA,CAAA,IAAKA,EAAEgC,eAAF,EAAL,CAAA;AACM,MAAA,IAAAC,WAAA,GAAcC,SAAU,CAAAzC,UAAA,CAAWhB,KAAX,CAAxB,CAAA;AACN,MAAA,IAAMA,SAAQwD,WAAY,CAAAF,KAAA,CAA1B,CAAA;AACYE,MAAAA,WAAA,CAAAE,MAAA,CAAOJ,KAAP,EAAc,CAAd,CAAA,CAAA;MACEjC,aAAA,CAAAmC,WAAA,EAAa;AAAE7B,QAAAA,eAAiB,EAAAC,kBAAA,CAAmB4B,WAAnB,CAAnB;AAAoD3B,QAAAA,OAAA,EAAS,YAA7D;AAA2EN,QAAAA,CAAA,EAAAA,CAAAA;AAA3E,OAAb,CAAA,CAAA;AACd1C,MAAAA,CAAAA,gBAAAA,GAAAA,OAAM8E,QAAN9E,MAAAA,IAAAA,IAAAA,gBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,gBAAAA,CAAAA,IAAAA,CAAAA,QAAiB;AACfmB,QAAAA,KAAOA,EAAAA,MADQ;QAEf4D,IAAM,EAAA9C,UAAA,CAAWd,KAAX,CAAiB0B,GAAjB,CAAqB1B,MAArB,CAFS;AAGfuB,QAAAA,CAAA,EAAAA,CAAAA;AAHe,QAAjB1C,CAAAA;KANI,CAAA;;AAaN,IAAA,IAAMgF,eAAe,SAAfA,YAAe,GAAM;AAAA,MAAA,IAAA,gBAAA,CAAA;;AACzB,MAAA,IAAI,CAAC5B,eAAgB,CAAAjC,KAArB,EAA4B,OAAA;MAC5BnB,CAAAA,gBAAAA,GAAAA,MAAAA,CAAMiF,QAANjF,MAAAA,IAAAA,IAAAA,gBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,gBAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAiBoD,eAAA,CAAgBjC,KAAjCnB,CAAAA,CAAAA;MACAqD,aAAA,CAAc,EAAd,CAAA,CAAA;KAHF,CAAA;;AAOM,IAAA,IAAA6B,UAAA,GAAaxD,IAAI,CAAE,EAAnB,CAAA;;AACA,IAAA,IAAAyD,aAAA,GAAgB,SAAhBA,aAAgB,CAACzC,CAAD,EAAsB;AAAA,MAAA,IAAA,qBAAA,EAAA,sBAAA,CAAA;;AACpC,MAAA,IAAA0C,iBAAA,GAAoBlD,YAAYf,KAAZ,CAAkBkE,MAAtC,CAAA;AACN,MAAA,IAAIC,WAAWJ,UAAW,CAAA/D,KAA1B,CAAA;;MACA,QAAQuB,CAAE,CAAA6C,IAAV;AACO,QAAA,KAAA,SAAA;AACH7C,UAAAA,CAAA,CAAE8C,cAAF,EAAA,CAAA;;AACI,UAAA,IAAAN,UAAA,CAAW/D,KAAX,KAAqB,CAAI,CAAzB,EAAyB;AAChBmE,YAAAA,QAAA,GAAA,CAAA,CAAA;AACb,WAFI,MAEJ,IAAWJ,UAAW,CAAA/D,KAAX,KAAqB,CAAhC,EAAmC;YACjCmE,QAAA,GAAWF,iBAAoB,GAAA,CAA/B,CAAA;AACK,WAFP,MAEO;YACLE,QAAA,EAAA,CAAA;AACF,WAAA;;UACI,IAAApD,CAAAA,qBAAAA,GAAAA,WAAA,CAAYf,KAAZ,CAAkBmE,QAAlB,CAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,IAAA,qBAA6B/E,CAAAA,QAA7B,EAAuC;YACzC+E,QAAA,EAAA,CAAA;AACF,WAAA;;UACAJ,UAAA,CAAW/D,KAAX,GAAmBmE,QAAnB,CAAA;AACA,UAAA,MAAA;;AACG,QAAA,KAAA,WAAA;AACH5C,UAAAA,CAAA,CAAE8C,cAAF,EAAA,CAAA;;AACA,UAAA,IAAIN,WAAW/D,KAAX,KAAqB,CAAA,CAArB,IAA2B+D,UAAW,CAAA/D,KAAX,KAAqBiE,oBAAoB,CAAxE,EAA2E;AAC9DE,YAAAA,QAAA,GAAA,CAAA,CAAA;AACN,WAFP,MAEO;YACLA,QAAA,EAAA,CAAA;AACF,WAAA;;UACI,IAAApD,CAAAA,sBAAAA,GAAAA,WAAA,CAAYf,KAAZ,CAAkBmE,QAAlB,CAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,IAAA,sBAA6B/E,CAAAA,QAA7B,EAAuC;YACzC+E,QAAA,EAAA,CAAA;AACF,WAAA;;UACAJ,UAAA,CAAW/D,KAAX,GAAmBmE,QAAnB,CAAA;AACA,UAAA,MAAA;;AACG,QAAA,KAAA,OAAA;AACH,UAAA,IAAIJ,WAAW/D,KAAX,KAAqB,CAAA,CAAzB,EAA6B,MAAA;;AACzB,UAAA,IAAA,CAACuC,kBAAkBvC,KAAnB,EAA0B;YACPwC,oBAAA,CAAA,IAAA,EAAM;AAAEjB,cAAAA,CAAA,EAAAA,CAAAA;AAAF,aAAN,CAAA,CAAA;AACrB,YAAA,MAAA;AACF,WAAA;;AACI,UAAA,IAAA,CAAC1C,OAAMqC,QAAP,EAAiB;YACnBG,aAAA,CAAcN,WAAY,CAAAf,KAAZ,CAAkB+D,UAAW,CAAA/D,KAA7B,CAAoCA,CAAAA,KAAlD,EAAyD;AACvD2B,cAAAA,iBAAiBC,kBAAmB,CAAAb,WAAA,CAAYf,KAAZ,CAAkB+D,UAAA,CAAW/D,KAA7B,CAAoCA,CAAAA,KAApC,CADmB;AAEvD6B,cAAAA,OAAS,EAAA,OAF8C;AAGvDN,cAAAA,CAAA,EAAAA,CAAAA;AAHuD,aAAzD,CAAA,CAAA;YAKqBiB,oBAAA,CAAA,KAAA,EAAO;AAAEjB,cAAAA,CAAA,EAAAA,CAAAA;AAAF,aAAP,CAAA,CAAA;AAChB,WAPH,MAOG;AAAA,YAAA,IAAA,qBAAA,CAAA;;AACL,YAAA,IAAIwC,WAAW/D,KAAX,KAAqB,CAAA,CAAzB,EAA6B,OAAA;AAC7B,YAAA,IAAMsE,WAAc,GAAA,CAAA,qBAAA,GAAAvD,WAAA,CAAYf,KAAZ,CAAkB+D,UAAA,CAAW/D,KAA7B,CAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAqCA,KAAzD,CAAA;YACA,IAAI,CAACsE,WAAL,EAAkB,OAAA;YAClB,IAAMC,QAAW,GAAAC,mBAAA,CAAoBxD,UAAW,CAAAhB,KAA/B,EAAsCsE,WAAtC,CAAjB,CAAA;AACAjD,YAAAA,aAAA,CAAckD,SAASvE,KAAvB,EAA8B;AAC5B2B,cAAAA,eAAA,EAAiBC,kBAAmB,CAAA2C,QAAA,CAASvE,KAAT,CADR;AAE5B6B,cAAAA,OAAA,EAAS0C,QAAS,CAAAE,OAAT,GAAmB,OAAnB,GAA6B,SAFV;AAG5BlD,cAAAA,CAAA,EAAAA,CAAAA;AAH4B,aAA9B,CAAA,CAAA;AAKF,WAAA;;AACA,UAAA,MAAA;;AACG,QAAA,KAAA,QAAA;UACkBiB,oBAAA,CAAA,KAAA,EAAO;AAAEjB,YAAAA,CAAA,EAAAA,CAAAA;AAAF,WAAP,CAAA,CAAA;AACrB,UAAA,MAAA;AAtDJ,OAAA;KAHI,CAAA;;IA6DN,IAAMmD,kBAAkBhE,QAAS,CAAA,YAAA;AAAA,MAAA,IAAA,qBAAA,CAAA;;MAAA,OAAMF,CAAAA,qBAAAA,GAAAA,eAAeR,KAArB,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAM,sBAAsBQ,cAAtB,CAAqCmE,UAArC,EAAN,CAAA;AAAA,KAAA,CAAjC,CAAA;IAMA,IAAMC,YAAe,GAAAlE,QAAA,CAAS,YAAA;MAAA,OAC5BK,WAAA,CAAYf,KAAZ,CAAkBoD,MAAlB,CAAyB,UAACyB,IAAD,EAAU;AACjC,QAAA,OAAO,CAACA,IAAK,CAAAzF,QAAN,IAAkB,CAACyF,IAAK,CAAA,WAAA,CAAxB,IAAwC,CAACA,IAAK,CAAAC,QAArD,CAAA;AACD,OAFD,CAD4B,CAAA;AAAA,KAAT,CAArB,CAAA;;AAMA,IAAA,IAAMlD,kBAAqB,GAAA,SAArBA,kBAAqB,GAAiE;AAAA,MAAA,IAAhE4B,WAAgE,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAArBxC,UAAA,CAAWhB,KAAU,CAAA;MAC1F,OAAOe,WAAY,CAAAf,KAAZ,CAAkBoD,MAAlB,CAAyB,UAAChC,MAAD,EAAY;QAC1C,IAAIA,MAAO,CAAA0D,QAAX,EAAqB,OAAA;AACjB,QAAA,IAAAC,KAAA,CAAMhC,OAAN,CAAcS,WAAd,CAAA,EAAmC,OAAAA,WAAA,CAAYwB,QAAZ,CAAqB5D,MAAA,CAAOpB,KAA5B,CAAA,CAAA;AACvC,QAAA,OAAOwD,gBAAgBpC,MAAO,CAAApB,KAA9B,CAAA;AACD,OAJM,CAAP,CAAA;KADF,CAAA;;AAQM,IAAA,IAAAiF,gBAAA,GAAmB,SAAnBA,gBAAmB,CAACC,OAAD,EAAsB;AAC7C,MAAA,IAAI,CAACrG,MAAM,CAAAqC,QAAX,EAAqB,OAAA;MACflB,IAAAA,MAAAA,GAAQkF,OAAU,GAAAN,YAAA,CAAa5E,KAAb,CAAmBmB,GAAnB,CAAuB,UAACC,MAAD,EAAA;QAAA,OAAYA,MAAA,CAAOpB,KAAnB,CAAA;OAAvB,CAAA,GAAmD,EAArEA,CAAAA;MACQA,aAAAA,CAAAA,MAAAA,EAAO;AAAE2B,QAAAA,eAAA,EAAiBC,kBAAmB5B,CAAAA,MAAAA,CAAtC;AAA8C6B,QAAAA,OAAS,EAAAqD,OAAA,GAAU,OAAV,GAAoB,OAAA;AAA3E,OAAPlF,CAAAA,CAAAA;KAHV,CAAA;;AAOA,IAAA,IAAAmF,eAAA,GAAkBzE,SAAiB,YAAM;MAC7C,IAAM0E,SAASR,YAAa,CAAA5E,KAAb,CAAmBmB,GAAnB,CAAuB,UAAC0D,IAAD,EAAA;QAAA,OAAUA,KAAK7E,KAAf,CAAA;AAAA,OAAvB,CAAf,CAAA;MACA,IAAMqF,CAAI,GAAAC,YAAA,CAAatE,UAAW,CAAAhB,KAAxB,EAA+BoF,MAA/B,CAAV,CAAA;MACA,OAAOC,CAAE,CAAAnB,MAAT,CAAA;AACD,MAJK,CAAA;AAOA,IAAA,IAAAqB,UAAA,GAAa7E,SAAkB,YAAM;MAClC,OAAAyE,eAAA,CAAgBnF,KAAhB,KAA0B4E,YAAA,CAAa5E,KAAb,CAAmBkE,MAA7C,CAAA;AACR,MAFK,CAAA;IAKA,IAAAsB,aAAA,GAAgB9E,SAAkB,YAAA;MAAA,OAAM,CAAC6E,WAAWvF,KAAZ,IAAqBmF,eAAA,CAAgBnF,KAAhB,KAA0B,CAArD,CAAA;AAAA,MAAlC,CAAA;IAEA,IAAAyF,aAAA,GAAgB/E,SAAS,YAAA;MAAA,OAAO;QACpCgF,KAAK7G,MAAM,CAAA6G,GADyB;QAEpCxE,UAAUrC,MAAM,CAAAqC,QAFoB;QAGpC6C,YAAYA,UAAW,CAAA/D,KAHa;QAIpCwD,aAAaxC,UAAW,CAAAhB,KAJY;QAKpC2F,gBAAgB9G,MAAM,CAAA8G,cALc;AAMpCC,QAAAA,iBAAmB,EAAAvE,aANiB;AAOpCwE,QAAAA,kBAAoB,EAAA3D,aAPgB;AAQpC4D,QAAAA,wBAA0B,EAAAtD,oBARU;AASpCqB,QAAAA,YAAA,EAAAA,YAToC;QAUpCkC,MAAMlH,MAAM,CAAAkH,IAVwB;AAWpCrB,QAAAA,eAAA,EAAAA,eAXoC;QAYpCc,eAAeA,aAAc,CAAAxF,KAZO;QAapCuF,YAAYA,UAAW,CAAAvF,KAba;AAcpCiF,QAAAA,gBAAA,EAAAA,gBAdoC;AAepCrD,QAAAA,kBAAA,EAAAA,kBAAAA;OAf6B,CAAA;AAAA,MAAzB,CAAA;AAkBNoE,IAAAA,OAAA,CAAQC,eAAR,EAAyBR,aAAzB,CAAA,CAAA;;AAEA,IAAA,IAAMS,oBAAoB,SAApBA,iBAAoB,GAAM;MAE9B,IAAI,CAACrH,MAAM,CAAAqC,QAAP,IAAmB6B,OAAQ,CAAA3C,QAAA,CAASJ,KAAT,CAA/B,EAAgD;QAC9CK,WAAA,CAAY,EAAZ,CAAA,CAAA;AACF,OAAA;;MACA,IAAIxB,OAAMqC,QAANrC,IAAkB,CAACkE,OAAQ,CAAA3C,QAAA,CAASJ,KAAT,CAA/B,EAAgD;QAC9CK,WAAA,CAAY,EAAZ,CAAA,CAAA;AACF,OAAA;KAPF,CAAA;;AASM,IAAA,IAAA8F,YAAA,GAAeC,QAAS,CAAA,UAACpG,MAAD,EAAmB;AAAA,MAAA,IAAA,gBAAA,CAAA;;AAC/CnB,MAAAA,CAAAA,gBAAAA,GAAAA,MAAAA,CAAMwH,QAANxH,2EAAAA,MAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAoBmB,MAApBnB,CAAAA,CAAAA,CAAAA;KAD4B,EAE3B,GAF2B,CAAxB,CAAA;IAINyH,KAAA,CACElG,QADF,EAEE,YAAM;MACc8F,iBAAA,EAAA,CAAA;AACpB,KAJF,EAKE;AACEK,MAAAA,SAAW,EAAA,IAAA;AADb,KALF,CAAA,CAAA;AASAD,IAAAA,KAAA,CACE,YAAA;MAAA,OAAMzH,MAAM,CAAAqC,QAAZ,CAAA;AAAA,KADF,EAEE,YAAM;MACcgF,iBAAA,EAAA,CAAA;AACpB,KAJF,CAAA,CAAA;AAMMI,IAAAA,KAAA,CAAA/D,iBAAA,EAAmB,UAACvC,MAAD,EAAW;AAClC,MAAA,IAAIA,MAAJ,EAAW;AACT+D,QAAAA,UAAA,CAAW/D,KAAX,GAAmB,CAAA,CAAnB,CAAA;AACF,OAAA;AACD,KAJK,CAAA,CAAA;;AAOA,IAAA,IAAAwG,eAAA,GAAkB,SAAlBA,eAAkB,CAACC,OAAD,EAA6B;AAAA,MAAA,IAAA,qBAAA,EAAA,sBAAA,CAAA;;AAC/C,MAAA,IAAA,CAACnG,eAAeN,KAAhB,EAAuB;AACzB,QAAA,OAAA;AACF,OAAA;;AACM,MAAA,IAAA0G,iBAAA,GAAA,CAAA,qBAAA,GAAqCpG,cAAe,CAAAN,KAApD,MAAqC,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAA,qBAAA,CAAsB2G,QAA3D,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAqC,uBAAmDC,aAAnD,CAAA,GAAA,CAAA,MAAA,CACrC1H,WAAY,CAAAc,KADyB,EAArC,cAAA,CAAA,CAAA,CAAA;AAIN6G,MAAAA,QAAA,CAAS,YAAM;QACb,IAAIH,qBAAqBD,OAAzB,EAAkC;UAChC,IAA0BK,iBAAAA,GAAAA,gBAAA,CAAiBJ,iBAAjB,CAA1B;cAAQK,aAAR,qBAAQA,aAAR,CAAA;;UACA,IAAyBD,kBAAAA,GAAAA,gBAAA,CAAiBL,OAAjB,CAAzB;cAAQO,YAAR,sBAAQA,YAAR,CAAA;;AACA,UAAA,IAAMC,sBAAsBC,QAAS,CAAAH,aAAA,EAAe,EAAf,CAAT,GAA8BG,QAAA,CAASF,YAAT,EAAuB,EAAvB,CAA1D,CAAA;AAEM,UAAA,IAAAG,WAAA,GACJT,kBAAkBU,SAAlB,GACAX,OAAA,CAAQW,SADR,IAECX,OAAQ,CAAAY,YAAR,GAAuBX,kBAAkBW,YAF1C,IAGAJ,mBAJI,CAAA;UAMNR,OAAA,CAAQa,SAAR,GAAoBH,WAApB,CAAA;AACF,SAAA;AACD,OAdD,CAAA,CAAA;KARI,CAAA;;AAwBNnB,IAAAA,OAAA,CAAQ,iBAAR,EAA2BQ,eAA3B,CAAA,CAAA;AAEA,IAAA,OAAO,YAAM;AACX,MAAA,IAAA,KAAA,GAAiD3H,MAAAA,CAAM0I,UAAN1I,IAAoB,EAArE;UAAQ2I,gBAAR,SAAQA,gBAAR;AAAA,UAA6BC,cAA7B,GAAA,wBAAA,CAAA,KAAA,EAAA,UAAA,CAAA,CAAA;;AACA,MAAA,OAAAC,WAAA,CAAA,KAAA,EAAA;QAAA,OACiBlI,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAQ,KADhC,EAAA,QAAA,CAAA;AAAA,OAAA,EAAA,CAAA0H,WAAA,CAAA,WAAA,EAAAC,UAAA,CAAA;QAIQC,WAAW/I,MAAM,CAAA+I,SAJzB;QAKQC,UAAUhJ,MAAM,CAAAgJ,QALxB;QAMQC,UAAYjJ,EAAAA,MAAAA,CAAMiJ,UAANjJ,IAAoB,CAACA,MAAM,CAAAkJ,QAN/C;QAOQ7G,UAAUrC,MAAM,CAAAqC,QAPxB;QAQQ8G,WAAWnJ,MAAM,CAAAmJ,SARzB;QASQC,SAASpJ,MAAM,CAAAoJ,OATvB;QAUQC,QAAQrJ,MAAM,CAAAqJ,MAVtB;QAWQC,MAAMtJ,MAAM,CAAAsJ,IAXpB;QAYQC,iBAAiBvJ,MAAM,CAAAuJ,eAAAA;AAZ/B,OAAA,EAAA;AAAA,QAAA,KAAA,EAcW5H,cAdX;QAAA,OAeahB,EAAAA,cAAe,CAAAQ,KAf5B;QAAA,OAgBa4C,EAAAA,WAAA,CAAY5C,KAhBzB;QAAA,UAiBgBZ,EAAAA,QAAS,CAAAY,KAjBzB;QAAA,cAkBoBuC,EAAAA,iBAAkB,CAAAvC,KAlBtC;QAAA,YAmBkBuC,EAAAA,iBAAA,CAAkBvC,KAAlB,GAA0BiC,eAAA,CAAgBjC,KAA1C,GAAkD,EAnBpE;QAAA,aAoBsByC,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,eAAA,CAAgBzC,KApBtC,CAAA;QAAA,YAqBkBgD,EAAAA,YAAa,CAAAhD,KArB/B;QAAA,iBAsBuBnB,EAAAA,MAAAA,CAAMwJ,cAtB7B;AAAA,QAAA,YAAA,EAAA,aAAA,CAAA,aAAA,CAAA;UAwBQtC,MAAMlH,MAAM,CAAAkH,IAAAA;SACRlH,EAAAA,MAAM,CAAAyJ,UAzBlB,CAAA,EAAA,EAAA,EAAA;AA0BQC,UAAAA,SAAW,EAAAvE,aAAAA;AA1BnB,SAAA,CAAA;AAAA,QAAA,eAAA,EAAA,aAAA,CAAA;UA6BQ+B,MAAMlH,MAAM,CAAAkH,IAAAA;SACRlH,EAAAA,MAAM,CAAA2J,aA9BlB,CAAA;AAAA,QAAA,aAAA,EAgCmB,SAAC/G,WAAAA,CAAAA,GAAD,EAAMgH,GAAN,EAAc;AACzBpF,UAAAA,SAAA,CAAUoF,IAAInF,KAAd,CAAA,CAAA;SAjCR;QAAA,UAmCsBzE,EAAAA,aAAAA,CAAAA,EAAAA,EAAAA,MAAM,CAAA6J,QAnC5B,CAAA;AAAA,QAAA,YAAA,EAAA,aAAA,CAAA;AAqCQlB,UAAAA,gBAAkB,EAAA,CAAIhI,EAAAA,CAAAA,MAAAA,CAAAA,cAAA,CAAeQ,KAAnB,iBAAsCwH,gBAAtC,CAAA;AArC1B,SAAA,EAsCWC,cAtCX,CAAA;QAAA,OAwCa,EAAA,SAAA,KAAA,GAAA;UAAA,OAAMnI,cAAA,CAAe,YAAf,CAAN,CAAA;SAxCb;QAAA,YAyCkB,EAAA,SAAA,UAAA,GAAA;UAAA,OACVT,MAAAA,CAAM8J,SAAN9J,IAAAA,WAAAA,CAAAA,SAAAA,EAAAA;YAAAA,kBAEyBW,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAQ,KAFxCnB,EAAAA,cAAAA,CAAAA;AAAAA,YAAAA,UAAAA,EAGc0D,iBAAA,CAAkBvC,KAAAA;WAJtB,EAAA,IAAA,CAAA,CAAA;SAzClB;QAAA,cAiDoB,EAAA,SAAA,YAAA,GAAA;UAAA,OACZV,cAAA,CAAe,cAAf,EAA+B;AAC7BsJ,YAAAA,MAAA,EAAQ;cAAE5I,KAAA,EAAO8C,kBAAmB,CAAA9C,KAA5B;cAAmC6I,SAAS,iBAACvF,KAAD,EAAA;gBAAA,OAAmBD,SAAU,CAAAC,KAAA,CAA7B,CAAA;AAAA,eAAA;AAA5C,aAAA;AADqB,WAA/B,CADY,CAAA;SAjDpB;AAAA,QAAA,sBAAA,EAsD4B,SAAC7B,oBAAAA,CAAAA,GAAD,EAAeW,OAAf,EAA2B;AAC/CI,UAAAA,oBAAA,CAAqBf,GAArB,EAA0BW,OAA1B,CAAA,CAAA;SAvDR;QAAA,eAyDqB,EAAA,SAAA,aAAA,CAACpC,MAAD,EAAW;AACxB,UAAA,IAAI,CAACuC,iBAAkB,CAAAvC,KAAvB,EAA8B,OAAA;UAC9BkC,aAAA,CAAclC,MAAd,CAAA,CAAA;UACAmG,YAAA,CAAA,EAAA,CAAA,MAAA,CAAgBnG,MAAhB,CAAA,CAAA,CAAA;SA5DR;AAAA,QAAA,SAAA,EA8De,SAAW,OAAA,CAAA,KAAA,EAAA;AAAA,UAAA,IAAA,eAAA,CAAA;;UAAA,IAARuB,CAAQ,SAARA,CAAQ,CAAA;UAClBF,aAAA,CAAcxC,MAAM,CAAAqC,QAANrC,GAAiB,EAAjBA,GAAsB,EAApC,EAAwC;YACtC8C,iBAAiBC,kBAAmB/C,CAAAA,MAAAA,CAAMqC,QAANrC,GAAiB,EAAjBA,GAAsB,EAAtBA,CADE;AAEtCgD,YAAAA,OAAS,EAAA,OAF6B;AAGtCN,YAAAA,CAAA,EAAAA,CAAAA;AAHsC,WAAxC,CAAA,CAAA;AAKA1C,UAAAA,CAAAA,eAAAA,GAAAA,MAAM,CAAAiK,OAANjK,MAAAA,IAAAA,IAAAA,eAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,eAAAA,CAAAA,IAAAA,CAAAA,MAAM,EAAU;AAAE0C,YAAAA,CAAA,EAAAA,CAAAA;AAAF,WAAV,CAAN1C,CAAAA;SApER;QAAA,SAsEe,EAAA,SAAA,OAAA,CAACiB,WAAD,EAAuB,KAAA,EAAA;AAAA,UAAA,IAAA,eAAA,CAAA;;UAAA,IAARyB,CAAQ,SAARA,CAAQ,CAAA;AAC9B1C,UAAAA,CAAAA,eAAAA,GAAAA,MAAAA,CAAMkK,OAANlK,MAAAA,IAAAA,IAAAA,eAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,eAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAgB;AAAEiB,YAAAA,UAAY,EAAGmC,EAAAA,CAAAA,MAAAA,CAAAA,eAAgB,CAAAjC,KAAnB,CAAd;AAA0CuB,YAAAA,CAAG,EAAHA,CAA1C;YAA6CvB,KAAA,EAAOgB,UAAW,CAAAhB,KAAAA;AAA/D,WAAhBnB,CAAAA,CAAAA;UACagF,YAAA,EAAA,CAAA;SAxErB;QAAA,QA0Ec,EAAA,SAAA,MAAA,CAAC/D,WAAD,EAAuB,KAAA,EAAA;AAAA,UAAA,IAAA,cAAA,CAAA;;UAAA,IAARyB,CAAQ,SAARA,CAAQ,CAAA;AAC7B1C,UAAAA,CAAAA,cAAAA,GAAAA,OAAMmK,MAANnK,MAAAA,IAAAA,IAAAA,cAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAAA,CAAAA,IAAAA,CAAAA,QAAe;AAAE0C,YAAAA,GAAAA,CAAF;YAAKvB,KAAO,EAAAgB,UAAA,CAAWhB,KAAAA;AAAvB,YAAfnB,CAAAA;SA3ER;QAAA,SA6Ee,EAAA,SAAA,OAAA,CAACiB,WAAD,EAAuB,KAAA,EAAA;AAAA,UAAA,IAAA,eAAA,CAAA;;UAAA,IAARyB,CAAQ,SAARA,CAAQ,CAAA;AAC9B1C,UAAAA,CAAAA,eAAAA,GAAAA,OAAMoK,OAANpK,MAAAA,IAAAA,IAAAA,eAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,eAAAA,CAAAA,IAAAA,CAAAA,QAAgB;AAAE0C,YAAAA,GAAAA,CAAF;YAAKvB,KAAO,EAAAgB,UAAA,CAAWhB,KAAAA;AAAvB,YAAhBnB,CAAAA;AACF,SAAA;OACKA,EAAAA,MAAM,CAAAqK,gBAhFjB,CAiFe,EAAA;AACPC,QAAAA,OAAO,SAAA,KAAA,GAAA;AAAA,UAAA,OAAAzB,WAAA,CAAA,WAAA,EAAAC,UAAA,CAAA;YAAA,KAEErH,EAAAA,cAAAA;WACD8I,EAAAA,KAAOvK,QAAO,CAChB,MADgB,EAEhB,UAFgB,EAGhB,OAHgB,EAIhB,SAJgB,EAKhB,aALgB,EAMhB,YANgB,EAOhB,WAPgB,EAQhB,iBARgB,EAShB,oBATgB,EAUhB,QAVgB,EAWhB,QAXgB,EAHf,EAAA;YAAA,SAgBMgC,EAAAA,OAAA,CAAQb,KAhBd;AAAA,YAAA,YAAA,EAiBSiC,eAAA,CAAgBjC,KAAAA;AAjBzB,WAAA,CAAA,EAkBMjB,KAlBN,CAAA,CAAA;SADA;QAsBPsJ,gBAAgBtJ,KAAM,CAAAsJ,cAAAA;OAvG9B,CAAA,CAAA,CAAA,CAAA;KAFF,CAAA;AA+GF,GAAA;AApZ6B,CAAA,CAA/B;;;;"}