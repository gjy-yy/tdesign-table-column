{"version":3,"file":"calendar.js","sources":["../../src/calendar/calendar.tsx"],"sourcesContent":["import { defineComponent, computed, watch } from 'vue';\n// 通用库\nimport dayjs from 'dayjs';\nimport props from './props';\nimport * as utils from './utils';\nimport { useConfig } from '../hooks/useConfig';\nimport { useContent } from '../hooks/tnode';\nimport { useState, useCalendarClass, userController, useColHeaders } from './hook';\n\n// 组件的一些常量\nimport { COMPONENT_NAME, MIN_YEAR, FIRST_MONTH_OF_YEAR, LAST_MONTH_OF_YEAR, DEFAULT_YEAR_CELL_NUMINROW } from './const';\n\n// 子组件\nimport { Select as TSelect, Option as TOption } from '../select';\nimport { RadioGroup as TRadioGroup, RadioButton as TRadioButton } from '../radio';\nimport { Button as TButton } from '../button';\nimport { CheckTag as TCheckTag } from '../tag';\nimport CalendarCellItem from './calendar-cell';\n\n// 组件相关类型\nimport { CalendarCell } from './type';\nimport { CalendarRange, YearMonthOption, ModeOption, CellEventOption } from './interface';\n\n// 组件逻辑\nexport default defineComponent({\n  name: 'TCalendar',\n  props: { ...props },\n  setup(props, { slots }) {\n    const renderContent = useContent();\n    const { t, globalConfig } = useConfig(COMPONENT_NAME);\n    // 组件内部状态管理\n    const { state, toToday, checkDayVisibled } = useState(props);\n\n    // 样式\n    const cls = useCalendarClass(props, state);\n\n    // 日历主体头部（日历模式下使用）\n    const { cellColHeaders } = useColHeaders(props, state);\n\n    // 日历控件栏（右上角）\n    const controller = userController(props, state);\n\n    // 年\\月份下拉框\n    const rangeFromTo = computed<CalendarRange>(() => {\n      if (!props.range || props.range.length < 2) {\n        return null;\n      }\n      const [v1, v2] = props.range;\n      if (dayjs(v1).isBefore(dayjs(v2))) {\n        return {\n          from: v1,\n          to: v2,\n        };\n      }\n      return {\n        from: v2,\n        to: v1,\n      };\n    });\n    function checkMonthAndYearSelecterDisabled(year: number, month: number): boolean {\n      let disabled = false;\n      if (rangeFromTo.value && rangeFromTo.value.from && rangeFromTo.value.to) {\n        const beginYear = dayjs(rangeFromTo.value.from).year();\n        const endYear = dayjs(rangeFromTo.value.to).year();\n        if (year === beginYear) {\n          const beginMon = parseInt(dayjs(rangeFromTo.value.from).format('M'), 10);\n          disabled = month < beginMon;\n        } else if (year === endYear) {\n          const endMon = parseInt(dayjs(rangeFromTo.value.to).format('M'), 10);\n          disabled = month > endMon;\n        }\n      }\n      return disabled;\n    }\n    watch(\n      () => {\n        return {\n          year: `${state.curSelectedYear}`,\n          month: `${state.curSelectedMonth}`,\n        };\n      },\n      (v: { month: string; year: string }) => {\n        typeof props.onMonthChange === 'function' && props.onMonthChange({ ...v });\n        controller.emitControllerChange();\n      },\n    );\n    const dateSelect = {\n      yearSelectOptionList: computed<YearMonthOption[]>(() => {\n        const re: YearMonthOption[] = [];\n        let begin: number = state.curSelectedYear - 10;\n        let end: number = state.curSelectedYear + 10;\n        if (rangeFromTo.value && rangeFromTo.value.from && rangeFromTo.value.to) {\n          begin = dayjs(rangeFromTo.value.from).year();\n          end = dayjs(rangeFromTo.value.to).year();\n        }\n\n        if (begin < MIN_YEAR) {\n          begin = MIN_YEAR;\n        }\n        if (end < MIN_YEAR) {\n          end = MIN_YEAR;\n        }\n\n        for (let i = begin; i <= end; i++) {\n          const disabled = checkMonthAndYearSelecterDisabled(i, state.curSelectedMonth);\n          re.push({\n            value: i,\n            label: t(globalConfig.value.yearSelection, { year: i }),\n            disabled,\n          });\n        }\n        return re;\n      }),\n      isYearSelectVisible: computed<boolean>(() => {\n        return controller.checkControllerVisible('year');\n      }),\n      isYearSelectDisabled: computed<boolean>(() => {\n        return controller.checkControllerDisabled('year', 'selectProps');\n      }),\n      monthSelectOptionList: computed<YearMonthOption[]>(() => {\n        const re: YearMonthOption[] = [];\n        for (let i = FIRST_MONTH_OF_YEAR; i <= LAST_MONTH_OF_YEAR; i++) {\n          const disabled = checkMonthAndYearSelecterDisabled(state.curSelectedYear, i);\n          re.push({\n            value: i,\n            label: t(globalConfig.value.monthSelection, { month: i }),\n            disabled,\n          });\n        }\n        return re;\n      }),\n      isMonthSelectVisible: computed<boolean>(() => {\n        return state.curSelectedMode === 'month' && controller.checkControllerVisible('month');\n      }),\n      isMonthSelectDisabled: computed<boolean>(() => {\n        return controller.checkControllerDisabled('month', 'selectProps');\n      }),\n    };\n    // 模式选项\n    const modeSelect = {\n      optionList: computed<ModeOption[]>(() => {\n        return [\n          { value: 'month', label: t(globalConfig.value.monthRadio) },\n          { value: 'year', label: t(globalConfig.value.yearRadio) },\n        ];\n      }),\n      isVisible: computed<boolean>(() => {\n        return controller.checkControllerVisible('mode');\n      }),\n      isDisabled: computed<boolean>(() => {\n        return controller.checkControllerDisabled('mode', 'radioGroupProps');\n      }),\n    };\n    // 显示\\隐藏周末按钮\n    const weekendBtn = {\n      text: computed<string>(() => {\n        return state.isShowWeekend ? t(globalConfig.value.hideWeekend) : t(globalConfig.value.showWeekend);\n      }),\n      vBind: computed<object>(() => {\n        const c = controller.configData.value.weekend;\n        return state.isShowWeekend ? c.hideWeekendButtonProps : c.showWeekendButtonProps;\n      }),\n      isVisible: computed<boolean>(() => {\n        return (\n          props.theme === 'full' &&\n          controller.checkControllerVisible('current') &&\n          controller.checkControllerVisible('weekend')\n        );\n      }),\n      isDisabled: computed<boolean>(() => {\n        const p = state.isShowWeekend ? 'hideWeekendButtonProps' : 'showWeekendButtonProps';\n        return controller.checkControllerDisabled('weekend', p);\n      }),\n    };\n    // 今天\\本月按钮\n    const currentBtn = {\n      text: computed<string>(() => {\n        return state.curSelectedMode === 'month' ? t(globalConfig.value.today) : t(globalConfig.value.thisMonth);\n      }),\n      vBind: computed<object>(() => {\n        const c = controller.configData.value.current;\n        return state.curSelectedMode === 'month' ? c.currentDayButtonProps : c.currentMonthButtonProps;\n      }),\n      isVisible: computed<boolean>(() => {\n        return props.theme === 'full' && controller.checkControllerVisible('current');\n      }),\n      isDisabled: computed(() => {\n        const p = state.curSelectedMode === 'month' ? 'currentDayButtonProps' : 'currentMonthButtonProps';\n        return controller.checkControllerDisabled('current', p);\n      }),\n    };\n\n    const renderControl = () => {\n      return (\n        <div class={cls.control.value}>\n          <div class={cls.title.value}>\n            {renderContent('head', undefined, {\n              params: { ...controller.options.value },\n            })}\n          </div>\n          <div class={cls.controlSection.value}>\n            {dateSelect.isYearSelectVisible.value && (\n              <div class={cls.controlSectionCell.value}>\n                <TSelect\n                  v-model={state.curSelectedYear}\n                  size={state.controlSize}\n                  autoWidth={true}\n                  {...controller.configData.value.year.selectProps}\n                  disabled={dateSelect.isYearSelectDisabled.value}\n                >\n                  {dateSelect.yearSelectOptionList.value.map((item) => (\n                    <TOption key={item.value} value={item.value} label={item.label} disabled={item.disabled}>\n                      {item.label}\n                    </TOption>\n                  ))}\n                </TSelect>\n              </div>\n            )}\n            {dateSelect.isMonthSelectVisible.value && (\n              <div class={cls.controlSectionCell.value}>\n                <TSelect\n                  autoWidth={true}\n                  v-model={state.curSelectedMonth}\n                  size={state.controlSize}\n                  {...controller.configData.value.month.selectProps}\n                  disabled={dateSelect.isMonthSelectDisabled.value}\n                >\n                  {dateSelect.monthSelectOptionList.value.map((item) => (\n                    <TOption key={item.value} value={item.value} label={item.label} disabled={item.disabled}>\n                      {item.label}\n                    </TOption>\n                  ))}\n                </TSelect>\n              </div>\n            )}\n            {modeSelect.isVisible.value && (\n              <div class={cls.controlSectionCell.value} style=\"height: auto\">\n                <TRadioGroup\n                  v-model={state.curSelectedMode}\n                  variant=\"default-filled\"\n                  size={state.controlSize}\n                  {...controller.configData.value.mode.radioGroupProps}\n                  disabled={modeSelect.isDisabled.value}\n                  onChange={controller.emitControllerChange}\n                >\n                  {modeSelect.optionList.value.map((item) => (\n                    <TRadioButton key={item.value} value={item.value}>\n                      {item.label}\n                    </TRadioButton>\n                  ))}\n                </TRadioGroup>\n              </div>\n            )}\n            {weekendBtn.isVisible.value && (\n              <div class={cls.controlSectionCell.value}>\n                <TCheckTag\n                  class={cls.controlTag.value}\n                  theme={state.isShowWeekend ? 'default' : 'primary'}\n                  size={state.controlSize}\n                  {...weekendBtn.vBind.value}\n                  disabled={weekendBtn.isDisabled.value}\n                  onClick={() => {\n                    state.isShowWeekend = !state.isShowWeekend;\n                    controller.emitControllerChange();\n                  }}\n                >\n                  {weekendBtn.text.value}\n                </TCheckTag>\n              </div>\n            )}\n            {currentBtn.isVisible.value && (\n              <div class={cls.controlSectionCell.value}>\n                <TButton\n                  size={state.controlSize}\n                  {...currentBtn.vBind.value}\n                  disabled={currentBtn.isDisabled.value}\n                  onClick={() => {\n                    toToday();\n                  }}\n                >\n                  {currentBtn.text.value}\n                </TButton>\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    };\n\n    const cellClickEmit = (eventPropsName: string, e: MouseEvent, cellData: CalendarCell): void => {\n      if (typeof props[eventPropsName] === 'function') {\n        const options: CellEventOption = {\n          cell: {\n            ...cellData,\n            ...controller.options.value,\n          },\n          e,\n        };\n        props[eventPropsName](options);\n      }\n    };\n    const clickCell = (e: MouseEvent, cellData: CalendarCell): void => {\n      state.curDate = dayjs(cellData.date);\n      cellClickEmit('onCellClick', e, cellData);\n    };\n    const doubleClickCell = (e: MouseEvent, cellData: CalendarCell): void => {\n      cellClickEmit('onCellDoubleClick', e, cellData);\n    };\n    const rightClickCell = (e: MouseEvent, cellData: CalendarCell): void => {\n      if (props.preventCellContextmenu) {\n        e.preventDefault();\n      }\n      cellClickEmit('onCellRightClick', e, cellData);\n    };\n\n    const monthCellsData = computed<CalendarCell[][]>(() => {\n      const daysArr: CalendarCell[][] = utils.createMonthCellsData(\n        state.curSelectedYear,\n        state.curSelectedMonth,\n        state.realFirstDayOfWeek,\n        state.curDate,\n        props.format,\n      );\n      return daysArr;\n    });\n    const renderMonthBody = () => {\n      return (\n        <table class={cls.table.value}>\n          <thead class={cls.tableHead.value}>\n            <tr class={cls.tableHeadRow.value}>\n              {cellColHeaders.value.map(\n                (item, index) =>\n                  checkDayVisibled(item.num) && (\n                    <th class={cls.tableHeadCell.value}>\n                      {Array.isArray(props.week)\n                        ? props.week[index]\n                        : renderContent('week', undefined, {\n                            defaultNode: <span>{item.display}</span>,\n                            params: { day: item.num },\n                          })}\n                    </th>\n                  ),\n              )}\n            </tr>\n          </thead>\n\n          <tbody class={cls.tableBody.value}>\n            {monthCellsData.value.map((week, weekIndex) => (\n              <tr class={cls.tableBodyRow.value}>\n                {week.map(\n                  (item, itemIndex) =>\n                    (state.isShowWeekend || item.day < 6) && (\n                      <CalendarCellItem\n                        key={`d-${weekIndex}-${itemIndex}`}\n                        item={item}\n                        theme={props.theme}\n                        t={t}\n                        global={globalConfig.value}\n                        cell={props.cell}\n                        fillWithZero={props.fillWithZero}\n                        onClick={(e: MouseEvent) => clickCell(e, item)}\n                        onDblclick={(e: MouseEvent) => doubleClickCell(e, item)}\n                        onRightclick={(e: MouseEvent) => rightClickCell(e, item)}\n                        v-slots={{ ...slots }}\n                      ></CalendarCellItem>\n                    ),\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    };\n\n    const yearCellsData = computed<CalendarCell[][]>(() => {\n      const re: CalendarCell[][] = [];\n      const monthsArr: CalendarCell[] = utils.createYearCellsData(state.curSelectedYear, state.curDate, props.format);\n      const rowCount = Math.ceil(monthsArr.length / DEFAULT_YEAR_CELL_NUMINROW);\n      let index = 0;\n      for (let i = 1; i <= rowCount; i++) {\n        const row: CalendarCell[] = [];\n        for (let j = 1; j <= DEFAULT_YEAR_CELL_NUMINROW; j++) {\n          row.push(monthsArr[index]);\n          index += 1;\n        }\n        re.push(row);\n      }\n      return re;\n    });\n    const renderYearBody = () => {\n      return (\n        <table class={cls.table.value}>\n          <tbody class={cls.tableBody.value}>\n            {yearCellsData.value.map((cell, cellIndex) => (\n              <tr class={cls.tableBodyRow.value}>\n                {cell.map((item, itemIndex) => (\n                  <CalendarCellItem\n                    key={`m-${cellIndex}-${itemIndex}`}\n                    item={item}\n                    theme={props.theme}\n                    t={t}\n                    global={globalConfig.value}\n                    cell={props.cell}\n                    fillWithZero={props.fillWithZero}\n                    onClick={(e: MouseEvent) => clickCell(e, item)}\n                    onDblclick={(e: MouseEvent) => doubleClickCell(e, item)}\n                    onRightclick={(e: MouseEvent) => rightClickCell(e, item)}\n                    v-slots={{ ...slots }}\n                  ></CalendarCellItem>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    };\n\n    return () => {\n      return (\n        <div class={cls.body.value}>\n          {controller.visible.value && renderControl()}\n          <div class={cls.panel.value}>{state.curSelectedMode === 'month' ? renderMonthBody() : renderYearBody()}</div>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","slots","renderContent","useContent","useConfig","COMPONENT_NAME","t","globalConfig","useState","state","toToday","checkDayVisibled","cls","useCalendarClass","useColHeaders","cellColHeaders","controller","userController","rangeFromTo","computed","range","length","v1","v2","dayjs","isBefore","from","to","checkMonthAndYearSelecterDisabled","year","month","disabled","value","beginYear","endYear","beginMon","parseInt","format","endMon","watch","curSelectedYear","curSelectedMonth","v","onMonthChange","emitControllerChange","dateSelect","yearSelectOptionList","re","begin","end","MIN_YEAR","i","push","label","yearSelection","isYearSelectVisible","checkControllerVisible","isYearSelectDisabled","checkControllerDisabled","monthSelectOptionList","FIRST_MONTH_OF_YEAR","LAST_MONTH_OF_YEAR","monthSelection","isMonthSelectVisible","curSelectedMode","isMonthSelectDisabled","modeSelect","optionList","monthRadio","yearRadio","isVisible","isDisabled","weekendBtn","text","isShowWeekend","hideWeekend","showWeekend","vBind","c","configData","weekend","hideWeekendButtonProps","showWeekendButtonProps","theme","p","currentBtn","today","thisMonth","current","currentDayButtonProps","currentMonthButtonProps","renderControl","_createVNode","control","title","params","options","controlSection","controlSectionCell","TSelect","_mergeProps","controlSize","selectProps","map","item","TOption","TRadioGroup","mode","radioGroupProps","TRadioButton","TCheckTag","controlTag","TButton","cellClickEmit","eventPropsName","e","cellData","cell","clickCell","curDate","date","doubleClickCell","rightClickCell","preventCellContextmenu","preventDefault","monthCellsData","daysArr","utils","realFirstDayOfWeek","renderMonthBody","table","tableHead","tableHeadRow","index","num","tableHeadCell","Array","isArray","week","defaultNode","display","day","tableBody","weekIndex","tableBodyRow","itemIndex","fillWithZero","yearCellsData","monthsArr","rowCount","Math","ceil","DEFAULT_YEAR_CELL_NUMINROW","row","j","renderYearBody","cellIndex","body","visible","panel"],"mappings":"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"}