{"version":3,"file":"input.js","sources":["../../src/input/input.tsx"],"sourcesContent":["import { defineComponent, h, computed } from 'vue';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  BrowseOffIcon as TdBrowseOffIcon,\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\n\nimport props from './props';\nimport { TdInputProps } from './type';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport { useConfig, usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useInput from './useInput';\nimport useInputEventHandler from './useInputEventHandler';\nimport useInputWidth from './useInputWidth';\n\nexport interface ExtendsTdInputProps extends TdInputProps {\n  showInput: boolean;\n  keepWrapperWidth: boolean;\n  allowTriggerBlur: boolean;\n}\n\nfunction getValidAttrs(obj: Record<string, unknown>): Record<string, unknown> {\n  const newObj = {};\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined') {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n}\n\nexport default defineComponent({\n  name: 'TInput',\n  props: {\n    ...props,\n    showInput: {\n      // 没有这个 API，请勿使用，即将删除。控制透传readonly同时是否展示input 默认保留 因为正常Input需要撑开宽度\n      type: Boolean,\n      default: true,\n    },\n    keepWrapperWidth: {\n      // 没有这个 API，请勿使用，即将删除。控制透传autoWidth之后是否容器宽度也自适应 多选等组件需要用到自适应但也需要保留宽度\n      type: Boolean,\n      default: false,\n    },\n    allowTriggerBlur: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  setup(props, { slots, expose }) {\n    const { globalConfig } = useConfig('input');\n    const { BrowseIcon, BrowseOffIcon, CloseCircleFilledIcon } = useGlobalIcon({\n      BrowseIcon: TdBrowseIcon,\n      BrowseOffIcon: TdBrowseOffIcon,\n      CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n    });\n    const disabled = useFormDisabled();\n    const COMPONENT_NAME = usePrefixClass('input');\n    const INPUT_WRAP_CLASS = usePrefixClass('input__wrap');\n    const INPUT_TIPS_CLASS = usePrefixClass('input__tips');\n    const { STATUS, SIZE } = useCommonClassName();\n    const classPrefix = usePrefixClass();\n    const renderTNodeJSX = useTNodeJSX();\n    const {\n      isHover,\n      tStatus,\n      inputRef,\n      inputPreRef,\n      renderType,\n      showClear,\n      focused,\n      inputValue,\n      innerValue,\n      limitNumber,\n      ...inputHandle\n    } = useInput(props, expose);\n    useInputWidth(props, inputPreRef, inputRef, innerValue);\n    const inputEventHandler = useInputEventHandler(props, isHover, innerValue);\n\n    const tPlaceholder = computed(() => props.placeholder ?? globalConfig.value.placeholder);\n    const inputAttrs = computed(() =>\n      getValidAttrs({\n        autofocus: props.autofocus,\n        disabled: disabled.value,\n        readonly: props.readonly,\n        placeholder: tPlaceholder.value,\n        maxlength: (!props.allowInputOverMax && props.maxlength) || undefined,\n        name: props.name || undefined,\n        type: renderType.value,\n        autocomplete: props.autocomplete ?? (globalConfig.value.autocomplete || undefined),\n        unselectable: props.readonly ? 'on' : undefined,\n      }),\n    );\n\n    return () => {\n      const prefixIcon = renderTNodeJSX('prefixIcon');\n      let suffixIcon = renderTNodeJSX('suffixIcon');\n      let passwordIcon = renderTNodeJSX('passwordIcon');\n      const label = renderTNodeJSX('label', { silent: true });\n      const suffix = renderTNodeJSX('suffix');\n      const limitNode =\n        limitNumber.value && props.showLimitNumber ? (\n          <div class={`${classPrefix.value}-input__limit-number`}>{limitNumber.value}</div>\n        ) : null;\n\n      const labelContent = label ? <div class={`${COMPONENT_NAME.value}__prefix`}>{label}</div> : null;\n      const suffixContent =\n        suffix || limitNode ? (\n          <div class={`${COMPONENT_NAME.value}__suffix`}>\n            {suffix}\n            {limitNode}\n          </div>\n        ) : null;\n\n      if (props.type === 'password') {\n        if (renderType.value === 'password') {\n          suffixIcon = (\n            <BrowseOffIcon class={`${COMPONENT_NAME.value}__suffix-clear`} onClick={inputHandle.emitPassword} />\n          );\n        } else if (renderType.value === 'text') {\n          suffixIcon = (\n            <BrowseIcon class={`${COMPONENT_NAME.value}__suffix-clear`} onClick={inputHandle.emitPassword} />\n          );\n        }\n      }\n\n      if (showClear.value) {\n        // 如果类型为 password 则使用 passwordIcon 显示 clear\n        if (props.type === 'password') {\n          passwordIcon = (\n            <CloseCircleFilledIcon\n              ref={inputHandle.clearIconRef}\n              class={`${COMPONENT_NAME.value}__suffix-clear`}\n              onClick={inputHandle.emitClear}\n              onMousedown={inputHandle.onClearIconMousedown}\n            />\n          );\n        } else {\n          suffixIcon = (\n            <CloseCircleFilledIcon\n              ref={inputHandle.clearIconRef}\n              class={`${COMPONENT_NAME.value}__suffix-clear`}\n              onClick={inputHandle.emitClear}\n              onMousedown={inputHandle.onClearIconMousedown}\n            />\n          );\n        }\n      }\n\n      const classes = [\n        COMPONENT_NAME.value,\n        props.inputClass,\n        {\n          [SIZE.value[props.size]]: props.size !== 'medium',\n          [STATUS.value.disabled]: disabled.value,\n          [STATUS.value.focused]: focused.value,\n          [`${classPrefix.value}-is-${tStatus.value}`]: tStatus.value,\n          [`${classPrefix.value}-align-${props.align}`]: props.align !== 'left',\n          [`${classPrefix.value}-is-readonly`]: props.readonly,\n          [`${COMPONENT_NAME.value}--prefix`]: prefixIcon || labelContent,\n          [`${COMPONENT_NAME.value}--suffix`]: suffixIcon || suffixContent,\n          [`${COMPONENT_NAME.value}--focused`]: focused.value,\n          [`${COMPONENT_NAME.value}--auto-width`]: props.autoWidth && !props.keepWrapperWidth,\n        },\n      ];\n\n      const inputEvents = getValidAttrs({\n        onFocus: (e: FocusEvent) => inputHandle.emitFocus(e),\n        onBlur: inputHandle.formatAndEmitBlur,\n        onKeydown: inputEventHandler.handleKeydown,\n        onKeyup: inputEventHandler.handleKeyUp,\n        onKeypress: inputEventHandler.handleKeypress,\n        onPaste: inputEventHandler.onHandlePaste,\n        onCompositionend: inputHandle.onHandleCompositionend,\n        onCompositionstart: inputHandle.onHandleCompositionstart,\n      });\n\n      const tips = renderTNodeJSX('tips');\n\n      return (\n        <div class={INPUT_WRAP_CLASS.value}>\n          <div\n            class={classes}\n            onClick={inputHandle.onRootClick}\n            onMouseenter={inputEventHandler.onInputMouseenter}\n            onMouseleave={inputEventHandler.onInputMouseleave}\n            onWheel={inputEventHandler.onHandleMousewheel}\n          >\n            {prefixIcon ? (\n              <span class={[`${COMPONENT_NAME.value}__prefix`, `${COMPONENT_NAME.value}__prefix-icon`]}>\n                {prefixIcon}\n              </span>\n            ) : null}\n            {labelContent}\n            {props.showInput && (\n              <input\n                class={`${COMPONENT_NAME.value}__inner`}\n                {...inputAttrs.value}\n                {...inputEvents}\n                ref={inputRef}\n                value={inputValue.value ?? ''}\n                onInput={(e: Event) => inputHandle.handleInput(e as InputEvent)}\n              />\n            )}\n            {props.autoWidth && (\n              <span ref={inputPreRef} class={`${classPrefix.value}-input__input-pre`}>\n                {innerValue.value || tPlaceholder.value}\n              </span>\n            )}\n            {suffixContent}\n            {passwordIcon ? (\n              <span\n                class={[\n                  `${COMPONENT_NAME.value}__suffix`,\n                  `${COMPONENT_NAME.value}__suffix-icon`,\n                  `${COMPONENT_NAME.value}__clear`,\n                ]}\n              >\n                {passwordIcon}\n              </span>\n            ) : null}\n            {suffixIcon ? (\n              <span\n                class={[\n                  `${COMPONENT_NAME.value}__suffix`,\n                  `${COMPONENT_NAME.value}__suffix-icon`,\n                  { [`${COMPONENT_NAME.value}__clear`]: showClear.value },\n                ]}\n              >\n                {suffixIcon}\n              </span>\n            ) : null}\n          </div>\n          {tips && (\n            <div class={`${INPUT_TIPS_CLASS.value} ${classPrefix.value}-input__tips--${props.status || 'normal'}`}>\n              {tips}\n            </div>\n          )}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["getValidAttrs","obj","newObj","Object","keys","forEach","key","defineComponent","name","props","showInput","type","Boolean","keepWrapperWidth","allowTriggerBlur","setup","slots","expose","useConfig","globalConfig","useGlobalIcon","BrowseIcon","TdBrowseIcon","BrowseOffIcon","TdBrowseOffIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","disabled","useFormDisabled","COMPONENT_NAME","usePrefixClass","INPUT_WRAP_CLASS","INPUT_TIPS_CLASS","useCommonClassName","STATUS","SIZE","classPrefix","renderTNodeJSX","useTNodeJSX","useInput","isHover","tStatus","inputRef","inputPreRef","renderType","showClear","focused","inputValue","innerValue","limitNumber","inputHandle","inputEventHandler","useInputEventHandler","tPlaceholder","computed","placeholder","value","inputAttrs","autofocus","readonly","maxlength","allowInputOverMax","autocomplete","unselectable","prefixIcon","suffixIcon","passwordIcon","label","silent","suffix","limitNode","showLimitNumber","_createVNode","labelContent","suffixContent","emitPassword","clearIconRef","emitClear","onClearIconMousedown","classes","inputClass","size","align","autoWidth","inputEvents","onFocus","e","emitFocus","onBlur","formatAndEmitBlur","onKeydown","handleKeydown","onKeyup","handleKeyUp","onKeypress","handleKeypress","onPaste","onHandlePaste","onCompositionend","onHandleCompositionend","onCompositionstart","onHandleCompositionstart","tips","onRootClick","onInputMouseenter","onInputMouseleave","onHandleMousewheel","handleInput","status"],"mappings":"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"}