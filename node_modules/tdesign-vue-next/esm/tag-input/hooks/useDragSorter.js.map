{"version":3,"file":"useDragSorter.js","sources":["../../../src/tag-input/hooks/useDragSorter.ts"],"sourcesContent":["import { ref, reactive } from 'vue';\nimport { DragSortProps, DragSortInnerProps } from '../interface';\n\nexport default function useDragSorter<T>(props: DragSortProps<T>): DragSortInnerProps {\n  const { sortOnDraggable, onDragSort, onDragOverCheck } = props;\n  const draggingIndex = ref(-1);\n  const dragStartData = ref(null);\n  const isDropped = ref(null);\n  const startInfo = reactive({ nodeX: 0, nodeWidth: 0, mouseX: 0 });\n\n  const onDragOver = (e: DragEvent, index: number, record: T) => {\n    e.preventDefault();\n    if (draggingIndex.value === index || draggingIndex.value === -1) return;\n    const target = e.target as HTMLElement;\n    if (onDragOverCheck?.targetClassNameRegExp && !onDragOverCheck?.targetClassNameRegExp.test(target.className)) {\n      return;\n    }\n\n    if (onDragOverCheck?.x && target) {\n      if (!startInfo.nodeWidth) return;\n\n      const { x, width } = target.getBoundingClientRect();\n      const targetNodeMiddleX = x + width / 2;\n      const draggingNodeLeft = e.clientX - (startInfo.mouseX - startInfo.nodeX);\n      const draggingNodeRight = draggingNodeLeft + startInfo.nodeWidth;\n\n      let overlap = false;\n      if (draggingNodeLeft > x && draggingNodeLeft < x + width) {\n        overlap = draggingNodeLeft < targetNodeMiddleX;\n      } else {\n        overlap = draggingNodeRight > targetNodeMiddleX;\n      }\n\n      if (!overlap) return;\n    }\n\n    onDragSort?.({\n      currentIndex: draggingIndex.value,\n      current: dragStartData,\n      target: record,\n      targetIndex: index,\n    });\n\n    draggingIndex.value = index;\n  };\n\n  if (!sortOnDraggable) {\n    return {};\n  }\n\n  function onDragStart(e: DragEvent, index: number, record: T) {\n    draggingIndex.value = index;\n    dragStartData.value = record;\n    const target = e.target as HTMLElement;\n    if (onDragOverCheck && target) {\n      const { x, width } = target.getBoundingClientRect();\n      startInfo.nodeX = x;\n      startInfo.nodeWidth = width;\n      startInfo.mouseX = e.clientX;\n    }\n  }\n\n  function onDrop() {\n    isDropped.value = true;\n  }\n\n  function onDragEnd() {\n    if (!isDropped.value) {\n      // 取消排序，待扩展 api，输出 dragStartData\n    }\n    isDropped.value = false;\n    draggingIndex.value = -1;\n    dragStartData.value = null;\n  }\n\n  function getDragProps(index: number, record: T) {\n    if (sortOnDraggable) {\n      return {\n        draggable: true,\n        onDragstart: (e: DragEvent) => {\n          onDragStart(e, index, record);\n        },\n        onDragover: (e: DragEvent) => {\n          onDragOver(e, index, record);\n        },\n        onDrop: () => {\n          onDrop();\n        },\n        onDragend: () => {\n          onDragEnd();\n        },\n      };\n    }\n    return {};\n  }\n\n  return { onDragStart, onDragOver, onDrop, onDragEnd, getDragProps, dragging: draggingIndex.value !== -1 };\n}\n"],"names":["useDragSorter","props","sortOnDraggable","onDragSort","onDragOverCheck","draggingIndex","ref","dragStartData","isDropped","startInfo","reactive","nodeX","nodeWidth","mouseX","onDragOver","e","index","record","preventDefault","value","target","targetClassNameRegExp","test","className","x","getBoundingClientRect","width","targetNodeMiddleX","draggingNodeLeft","clientX","draggingNodeRight","overlap","currentIndex","current","targetIndex","onDragStart","onDrop","onDragEnd","getDragProps","draggable","onDragstart","onDragover","onDragend","dragging"],"mappings":"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"}