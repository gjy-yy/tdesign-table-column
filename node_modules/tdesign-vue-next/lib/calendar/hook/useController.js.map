{"version":3,"file":"useController.js","sources":["../../../src/calendar/hook/useController.ts"],"sourcesContent":["import { computed, nextTick } from 'vue';\nimport dayjs from 'dayjs';\nimport { COMPONENT_NAME } from '../const';\nimport { CalendarState } from '../interface';\nimport { TdCalendarProps, ControllerOptions } from '../type';\nimport { useConfig } from '../../hooks/useConfig';\n\nconst getDefaultControllerConfigData = (visible = true): Record<string, any> => ({\n  visible, // 是否显示（全部控件）\n  disabled: false, // 是否禁用（全部控件）\n  // 模式切换单选组件设置\n  mode: {\n    visible: true, // 是否显示\n    radioGroupProps: {}, // 用于透传props给该radioGroup组件\n  },\n  // 年份选择框组件相关设置\n  year: {\n    visible: true, // 是否显示\n    selectProps: {}, // 用于透传props给该select组件\n  },\n  // 年份选择框组件相关设置\n  month: {\n    visible: true, // 是否显示（“year”模式下本身是不显示该组件的）\n    selectProps: {}, // 用于透传props给该select组件\n  },\n  // 隐藏\\显示周末按钮组件相关设置\n  weekend: {\n    visible: true, // 是否显示\n    showWeekendButtonProps: {}, // 用于透传props给显示周末按钮组件\n    hideWeekendButtonProps: {}, // 用于透传props给隐藏周末按钮组件\n  },\n  // “今天\\本月”按钮组件相关设置\n  current: {\n    visible: true, // 是否显示\n    currentDayButtonProps: {}, // 用于透传props给“今天”钮组件（“month”模式下有效）\n    currentMonthButtonProps: {}, // 用于透传props给“本月”按钮组件（“year”模式下有效）\n  },\n});\n\nexport function userController(props: TdCalendarProps, state: CalendarState) {\n  const { globalConfig } = useConfig(COMPONENT_NAME);\n\n  const options = computed<ControllerOptions>(() => {\n    const dayJsFilterDate = dayjs(`${state.curSelectedYear}-${state.curSelectedMonth}`);\n    const re = {\n      isShowWeekend: state.isShowWeekend,\n      filterDate: dayJsFilterDate.toDate(),\n      formattedFilterDate: dayJsFilterDate.format(props.format),\n      mode: state.curSelectedMode,\n    };\n    return re;\n  });\n  const configData = computed<Record<string, any>>(() => {\n    const controllerConfig = props.controllerConfig ?? globalConfig.value.controllerConfig ?? true;\n    if (typeof controllerConfig === 'boolean') {\n      return getDefaultControllerConfigData(controllerConfig);\n    }\n    return {\n      ...getDefaultControllerConfigData(),\n      ...controllerConfig,\n    };\n  });\n  const visible = computed<boolean>(() => {\n    return !!configData.value && configData.value.visible;\n  });\n  /**\n   * 判断某个控件是否显示\n   * @param name 控件对应的配置节点名（对应controllerConfigData）\n   * @returns true表示显示\n   */\n  function checkControllerVisible(name: string): boolean {\n    let re = true;\n    const conf = configData.value;\n    if (!conf || !conf.visible || conf[name] === false || (conf[name] && !conf[name].visible)) {\n      re = false;\n    }\n    return re;\n  }\n  /**\n   * 判断某个控件是否禁用\n   * @param name 控件对应的配置节点名（对应controllerConfigData）\n   * @param propsName 表示禁用的控件属性（对应controllerConfigData）\n   * @returns true表示禁用\n   */\n  function checkControllerDisabled(name: string, propsName: string): boolean {\n    let re = false;\n    const conf = configData.value;\n    if (conf && (conf.disabled || (conf[name] && conf[name][propsName] && conf[name][propsName].disabled))) {\n      re = true;\n    }\n    return re;\n  }\n  function emitControllerChange() {\n    nextTick(() => {\n      typeof props.onControllerChange === 'function' && props.onControllerChange({ ...options.value });\n    });\n  }\n\n  return {\n    options,\n    configData,\n    visible,\n    checkControllerVisible,\n    checkControllerDisabled,\n    emitControllerChange,\n  };\n}\n"],"names":["getDefaultControllerConfigData","visible","disabled","mode","radioGroupProps","year","selectProps","month","weekend","showWeekendButtonProps","hideWeekendButtonProps","current","currentDayButtonProps","currentMonthButtonProps","userController","props","state","useConfig","COMPONENT_NAME","globalConfig","options","computed","dayJsFilterDate","dayjs","curSelectedYear","curSelectedMonth","re","isShowWeekend","filterDate","toDate","formattedFilterDate","format","curSelectedMode","configData","controllerConfig","value","checkControllerVisible","name","conf","checkControllerDisabled","propsName","emitControllerChange","nextTick","onControllerChange"],"mappings":"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"}