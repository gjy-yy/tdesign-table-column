{"version":3,"file":"useTree.js","sources":["../../src/tree/useTree.tsx"],"sourcesContent":["import { ref, watch, toRefs, nextTick } from 'vue';\nimport { TdTreeProps } from './type';\nimport TreeItem from './tree-item';\n\nimport TreeStore from '../_common/js/tree/tree-store';\nimport TreeNode from '../_common/js/tree/tree-node';\n\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport useVModel from '../hooks/useVModel';\nimport useOnDrag from './hooks/useOnDrag';\nimport { getMark, getNode, getStoreConfig } from './util';\n\nimport { TypeEventState, TypeTreeNodeModel } from './interface';\n\nexport default function useTree(props: TdTreeProps) {\n  const treeStore = ref();\n  const cacheMap = new Map();\n  const treeNodeViews = ref([]);\n  const { expanded, actived, value, modelValue } = toRefs(props);\n\n  const [innerChecked, setInnerChecked] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n  const [innerActived, setInnerActived] = useDefaultValue(actived, props.defaultActived, props.onActive, 'actived');\n  const [innerExpanded, setInnerExpanded] = useDefaultValue(\n    expanded,\n    props.defaultExpanded,\n    props.onExpand,\n    'expanded',\n  );\n\n  // 懒加载回调\n  const handleLoad = (info: TypeEventState) => {\n    const { node } = info;\n    const ctx = {\n      node: node.getModel(),\n    };\n    if (innerChecked.value && innerChecked.value.length > 0) {\n      treeStore.value.replaceChecked(innerChecked.value);\n    }\n    if (innerExpanded.value && innerExpanded.value.length > 0) {\n      treeStore.value.replaceExpanded(innerExpanded.value);\n    }\n    if (innerActived.value && innerActived.value.length > 0) {\n      treeStore.value.replaceActived(innerActived.value);\n    }\n    props.onLoad?.(ctx);\n  };\n\n  // 点击回调\n  const handleClick = (state: TypeEventState) => {\n    const { expandOnClickNode } = props;\n    const { mouseEvent, event, node } = state;\n\n    if (!node || props.disabled || node.disabled) {\n      return;\n    }\n\n    let shouldExpand = expandOnClickNode;\n    let shouldActive = true;\n    ['trigger', 'ignore'].forEach((markName) => {\n      const mark = getMark(markName, event.target as HTMLElement, event.currentTarget as HTMLElement);\n      const markValue = mark?.value || '';\n      if (markValue.indexOf('expand') >= 0) {\n        if (markName === 'trigger') {\n          shouldExpand = true;\n        } else if (markName === 'ignore') {\n          shouldExpand = false;\n        }\n      }\n      if (markValue.indexOf('active') >= 0) {\n        if (markName === 'ignore') {\n          shouldActive = false;\n        }\n      }\n    });\n\n    const ctx = {\n      node: node.getModel(),\n      e: mouseEvent,\n    };\n\n    if (shouldExpand) {\n      const tnode = getNode(treeStore.value, node);\n      const expanded = node.setExpanded(!tnode.isExpanded());\n      setInnerExpanded(expanded, ctx);\n    }\n\n    if (shouldActive) {\n      const tnode = getNode(treeStore.value, node);\n      const actived = node.setActived(!tnode.isActived());\n      setInnerActived(actived, ctx);\n    }\n\n    props.onClick?.(ctx);\n  };\n\n  const handleChange = (state: TypeEventState) => {\n    const { disabled } = props;\n    const { node, mouseEvent } = state;\n    if (!node || disabled || node.disabled) {\n      return;\n    }\n\n    const tnode = getNode(treeStore.value, node);\n    const checked = node.setChecked(!tnode.isChecked());\n    setInnerChecked(checked, {\n      node: node.getModel(),\n      e: mouseEvent,\n    });\n  };\n\n  // 节点渲染\n  const renderTreeNodeViews = () => {\n    const nodes = treeStore.value.getNodes();\n\n    treeNodeViews.value = nodes\n      .filter((node: TreeNode) => node.visible)\n      .map((node: TreeNode) => {\n        // 如果节点已经存在，则使用缓存节点\n        let nodeView = cacheMap.get(node.value);\n        // 如果节点未曾创建，则临时创建\n        if (!nodeView) {\n          // 初次仅渲染可显示的节点\n          // 不存在节点视图，则创建该节点视图并插入到当前位置\n          nodeView = <TreeItem key={node.value} node={node} onChange={handleChange} onClick={handleClick} />;\n          cacheMap.set(node.value, nodeView);\n        }\n        return nodeView;\n      });\n\n    // 更新缓存后，被删除的节点要移除掉，避免内存泄露\n    nextTick(() => {\n      cacheMap.forEach((view, value: string) => {\n        if (!treeStore.value.getNode(value)) {\n          cacheMap.delete(value);\n        }\n      });\n    });\n  };\n\n  useOnDrag(treeStore);\n\n  // 更新展开状态\n  const updateExpanded = () => {\n    const { expandParent } = props;\n    // 初始化展开状态\n    // 校验是否自动展开父节点\n    if (Array.isArray(innerExpanded.value)) {\n      const expandedMap = new Map();\n      innerExpanded.value.forEach((val) => {\n        expandedMap.set(val, true);\n        if (expandParent) {\n          const node = treeStore.value.getNode(val);\n          node.getParents().forEach((tn: TypeTreeNodeModel) => {\n            expandedMap.set(tn.value, true);\n          });\n        }\n      });\n      const expandedArr = Array.from(expandedMap.keys());\n      treeStore.value.setExpanded(expandedArr);\n    }\n  };\n\n  // 初始化\n  const init = () => {\n    let options = props.data;\n    const store = new TreeStore({\n      ...getStoreConfig(props),\n      onLoad: (info: TypeEventState) => {\n        handleLoad(info);\n      },\n      onUpdate: () => {\n        renderTreeNodeViews();\n      },\n    });\n\n    // 初始化数据\n    treeStore.value = store;\n\n    if (!Array.isArray(options)) {\n      options = [];\n    }\n    store.append(options);\n\n    // 刷新节点，必须在配置选中之前执行\n    // 这样选中态联动判断才能找到父节点\n    store.refreshNodes();\n\n    // 初始化选中状态\n    if (Array.isArray(innerChecked.value)) {\n      store.setChecked(innerChecked.value);\n    }\n\n    updateExpanded();\n\n    // 初始化激活状态\n    if (Array.isArray(innerActived.value)) {\n      store.setActived(innerActived.value);\n    }\n\n    // 树的数据初始化之后，需要立即进行一次视图刷新\n    renderTreeNodeViews();\n  };\n\n  // ------ 监听start ------\n\n  // data变化，重构 tree\n  watch(\n    () => props.data,\n    (list) => {\n      list = props.data;\n      cacheMap.clear();\n\n      treeStore.value.reload(list);\n      if (!list.length) return;\n      // 初始化选中状态\n      if (Array.isArray(innerChecked.value)) {\n        treeStore.value.setChecked(innerChecked.value);\n      }\n\n      // 更新展开状态\n      updateExpanded();\n\n      // 初始化激活状态\n      if (Array.isArray(innerActived.value)) {\n        treeStore.value.setActived(innerActived.value);\n      }\n      // 刷新节点状态\n      treeStore.value.refreshState();\n    },\n  );\n\n  // tree插件配置变化\n  watch(\n    () => getStoreConfig(props),\n    () => {\n      if (!treeStore.value) return;\n      treeStore.value.setConfig(getStoreConfig(props));\n    },\n  );\n  watch(innerChecked, (nVal) => {\n    treeStore.value.replaceChecked(nVal);\n  });\n  watch(innerExpanded, (nVal) => {\n    treeStore.value.replaceExpanded(nVal);\n  });\n  watch(innerActived, (nVal) => {\n    treeStore.value.replaceActived(nVal);\n  });\n\n  // 初始化树\n  init();\n\n  return {\n    treeStore,\n    treeNodeViews,\n  };\n}\n"],"names":["useTree","props","treeStore","ref","cacheMap","Map","treeNodeViews","toRefs","expanded","actived","value","modelValue","useVModel","defaultValue","onChange","innerChecked","setInnerChecked","useDefaultValue","defaultActived","onActive","innerActived","setInnerActived","defaultExpanded","onExpand","innerExpanded","setInnerExpanded","handleLoad","info","node","ctx","getModel","length","replaceChecked","replaceExpanded","replaceActived","onLoad","handleClick","state","expandOnClickNode","mouseEvent","event","disabled","shouldExpand","shouldActive","forEach","markName","mark","getMark","target","currentTarget","markValue","indexOf","e","tnode","getNode","setExpanded","isExpanded","setActived","isActived","onClick","handleChange","checked","setChecked","isChecked","renderTreeNodeViews","nodes","getNodes","filter","visible","map","nodeView","get","_createVNode","set","nextTick","view","useOnDrag","updateExpanded","expandParent","Array","isArray","expandedMap","val","getParents","tn","expandedArr","from","keys","init","options","data","store","TreeStore","getStoreConfig","onUpdate","append","refreshNodes","watch","list","clear","reload","refreshState","setConfig","nVal"],"mappings":"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"}