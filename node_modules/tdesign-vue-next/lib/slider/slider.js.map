{"version":3,"file":"slider.js","sources":["../../src/slider/slider.tsx"],"sourcesContent":["import {\n  defineComponent,\n  VNode,\n  ref,\n  reactive,\n  provide,\n  computed,\n  onBeforeUnmount,\n  onMounted,\n  watch,\n  toRefs,\n} from 'vue';\nimport props from './props';\nimport TSliderButton from './slider-button';\nimport { SliderValue } from './type';\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useSliderMark } from './hooks/useSliderMark';\nimport { useSliderInput } from './hooks/useSliderInput';\nimport { formatSlderValue, getStopStyle } from './util/common';\nimport { sliderPropsInjectKey } from './util/constants';\nimport useVModel from '../hooks/useVModel';\n\ninterface SliderButtonType {\n  setPosition: (param: number) => {};\n}\nexport default defineComponent({\n  name: 'TSlider',\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props: { ...props },\n\n  setup(props, ctx) {\n    const disabled = useFormDisabled();\n    const COMPONENT_NAME = usePrefixClass('slider');\n    const { STATUS } = useCommonClassName();\n    const { value, modelValue } = toRefs(props) as any;\n    const [sliderValue, setSliderValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    const sliderContainerRef = ref<HTMLDivElement>();\n    const sliderRef = ref<HTMLDivElement>();\n    const firstButtonRef = ref<SliderButtonType>();\n    const secondButtonRef = ref<SliderButtonType>();\n\n    // const sliderState = reactive({\n    //   // TODO: 该属性应该是暴露出来的api供用户配置才对\n    //   showSteps: true,\n    // });\n    const firstValue = ref(formatSlderValue(sliderValue.value, 'first'));\n    const secondValue = ref(formatSlderValue(sliderValue.value, 'second'));\n    const dragging = ref(false);\n    const sliderSize = ref(1);\n\n    const vertical = computed(() => {\n      return props.layout === 'vertical';\n    });\n\n    /** ----------------- 样式计算 start ------------- */\n    const containerClass = computed(() => [`${COMPONENT_NAME.value}__container`, { 'is-vertical': vertical.value }]);\n    const sliderClass = computed(() => {\n      return [\n        `${COMPONENT_NAME.value}`,\n        {\n          'is-vertical': vertical.value,\n          [`${COMPONENT_NAME.value}--with-input`]: props.inputNumberProps,\n          [`${COMPONENT_NAME.value}--vertical`]: vertical.value,\n          [STATUS.value.disabled]: disabled.value,\n        },\n      ];\n    });\n    const sliderRailClass = computed(() => [\n      `${COMPONENT_NAME.value}__rail`,\n      { 'show-input': props.inputNumberProps, disabled: disabled.value },\n    ]);\n    const runwayStyle = computed(() => {\n      return vertical.value ? { height: '100%' } : {};\n    });\n    const barStyle = computed(() => {\n      const barStart = props.range ? `${(100 * (minValue.value - props.min)) / rangeDiff.value}%` : '0%';\n      const cuttentDiff = props.range ? maxValue.value - minValue.value : firstValue.value - props.min;\n      const barSize = `${(100 * cuttentDiff) / rangeDiff.value}%`;\n      return vertical.value\n        ? {\n            height: barSize,\n            bottom: barStart,\n          }\n        : {\n            width: barSize,\n            left: barStart,\n          };\n    });\n    /** ----------------- 样式计算 end ------------- */\n\n    // 差值范围\n    const rangeDiff = computed(() => {\n      return props.max - props.min;\n    });\n    const minValue = computed(() => {\n      return Math.min(firstValue.value, secondValue.value);\n    });\n    const maxValue = computed(() => {\n      return Math.max(firstValue.value, secondValue.value);\n    });\n    const steps = computed(() => {\n      if (!props.showStep || props.min > props.max) return [];\n      if (props.step === 0) {\n        console.warn('[Element Warn][Slider]step should not be 0.');\n        return [];\n      }\n      const stepCount = rangeDiff.value / props.step;\n      const stepWidth = (100 * props.step) / rangeDiff.value;\n      const result = [];\n      for (let i = 1; i < stepCount; i++) {\n        result.push(i * stepWidth);\n      }\n      if (props.range) {\n        const r = result.filter(\n          (step) =>\n            step < (100 * (minValue.value - props.min)) / rangeDiff.value ||\n            props.step > (100 * (maxValue.value - props.max)) / rangeDiff.value,\n        );\n        return r;\n      }\n      return result.filter((step) => step > (100 * (firstValue.value - props.min)) / rangeDiff.value);\n    });\n    const precision = computed(() => {\n      const precisions = [props.min, props.max, props.step].map((item) => {\n        const decimalArr = `${item}`.split('.');\n        return decimalArr[1] ? decimalArr[1].length : 0;\n      });\n      return Math.max.apply(null, precisions);\n    });\n    // 防止值越级\n    const setValues = (value: SliderValue): SliderValue => {\n      const [min, max] = [props.min, props.max];\n      if (min > max) {\n        console.warn('[Slider] max should be greater than min.');\n        return;\n      }\n      // 双向滑块\n      if (props.range && Array.isArray(value)) {\n        let [maxLimit, minLimit] = [Math.min(...value), Math.max(...value)];\n        if (maxLimit > max) {\n          maxLimit = firstValue.value;\n        }\n        if (maxLimit < min) {\n          maxLimit = min;\n        }\n        if (minLimit < min) {\n          minLimit = secondValue.value;\n        }\n        if (minLimit > max) {\n          minLimit = max;\n        }\n        [firstValue.value, secondValue.value] = [maxLimit, minLimit];\n        return [maxLimit, minLimit];\n      }\n      let preValue = value;\n      if (preValue < min) {\n        preValue = min;\n      }\n      if (preValue > max) {\n        preValue = max;\n      }\n      return preValue;\n    };\n    // 只要触发修改就要有这个方法抛出change事件\n    const emitChange = (value: SliderValue) => {\n      let changeValue = value;\n      if (changeValue === undefined) {\n        if (props.range) {\n          changeValue = [firstValue.value, secondValue.value];\n        } else {\n          changeValue = firstValue.value;\n        }\n      }\n      const fixValue: SliderValue = setValues(changeValue);\n      setSliderValue(fixValue);\n    };\n\n    const resetSize = () => {\n      if (sliderRef.value) {\n        sliderSize.value = sliderRef.value[`client${vertical.value ? 'Height' : 'Width'}`];\n      }\n    };\n\n    // 是否以完成挂载（部分组合组件如inputNumber依赖于首次init后的状态值进行渲染）\n    const isAlreadyMount = ref(false);\n    // 初始化传入的value\n    const init = () => {\n      let valuetext: string | number;\n      if (props.range) {\n        if (Array.isArray(sliderValue.value)) {\n          firstValue.value = Math.max(props.min || 0, sliderValue.value[0]);\n          secondValue.value = Math.min(props.max || 100, sliderValue.value[1]);\n        } else {\n          firstValue.value = props.min || 0;\n          secondValue.value = props.max || 100;\n        }\n        valuetext = `${firstValue.value}-${secondValue.value}`;\n      } else {\n        if (typeof sliderValue.value !== 'number') {\n          firstValue.value = props.min;\n        } else {\n          firstValue.value = Math.min(props.max, Math.max(props.min, sliderValue.value as number));\n        }\n        valuetext = String(firstValue.value);\n      }\n      if (sliderContainerRef.value) {\n        sliderContainerRef.value.setAttribute('aria-valuetext', valuetext);\n      }\n      resetSize();\n      window.addEventListener('resize', resetSize);\n    };\n    // 相应button的位置\n    const setPosition = (percent: number): void => {\n      let targetValue = (percent * rangeDiff.value) / 100;\n      targetValue = props.min + targetValue;\n      if (!props.range && firstButtonRef.value) {\n        firstButtonRef.value.setPosition(percent);\n        return;\n      }\n      let button;\n      if (Math.abs(minValue.value - targetValue) < Math.abs(maxValue.value - targetValue)) {\n        button = firstValue.value < secondValue.value ? 'button1' : 'button2';\n      } else {\n        button = firstValue.value > secondValue.value ? 'button1' : 'button2';\n      }\n      if (button === 'button1' && firstButtonRef.value) {\n        firstButtonRef.value.setPosition(percent);\n      }\n      if (button === 'button2' && secondButtonRef.value) {\n        secondButtonRef.value.setPosition(percent);\n      }\n    };\n\n    // 全局点击\n    const onSliderClick = (event: MouseEvent): void => {\n      if (disabled.value || dragging.value) {\n        return;\n      }\n      if (!sliderRef.value) return;\n      resetSize();\n      let value = 0;\n      if (vertical.value) {\n        const sliderOffsetBottom = sliderRef.value.getBoundingClientRect().bottom;\n        value = ((sliderOffsetBottom - event.clientY) / sliderSize.value) * 100;\n        setPosition(value);\n      } else {\n        const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\n        value = ((event.clientX - sliderOffsetLeft) / sliderSize.value) * 100;\n        setPosition(value);\n      }\n    };\n\n    // mark 点击触发修改事件\n    const changeValue = (point: number) => {\n      if (disabled.value || dragging.value) {\n        return;\n      }\n      resetSize();\n      const value = Number((point / rangeDiff.value) * 100);\n      setPosition(value);\n      emitChange(point);\n    };\n\n    /** 副作用监听 */\n    watch(\n      () => sliderValue.value,\n      (newVal) => {\n        if (dragging.value === true) return;\n        if (Array.isArray(newVal) && props.range) {\n          [firstValue.value, secondValue.value] = newVal;\n        } else {\n          firstValue.value = newVal as number;\n        }\n      },\n    );\n\n    watch([firstValue, secondValue, dragging], (newStates, prevStates) => {\n      if (newStates[0] !== prevStates[0]) {\n        if (props.range) {\n          emitChange([minValue.value, maxValue.value]);\n        } else {\n          emitChange(firstValue.value);\n        }\n      }\n      if (newStates[1] !== prevStates[1]) {\n        if (props.range) {\n          emitChange([minValue.value, maxValue.value]);\n        }\n      }\n      if (newStates[2] !== prevStates[2] && newStates[2] === false) {\n        init();\n      }\n    });\n\n    /** 挂载&卸载 */\n    onMounted(() => {\n      init();\n      isAlreadyMount.value = true;\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', resetSize);\n    });\n\n    /** -------------------------- 渲染相关逻辑 start --------------------------  */\n    const markConfig = computed(() => ({\n      max: props.max,\n      min: props.min,\n      marks: props.marks,\n      vertical: vertical.value,\n      prefixName: COMPONENT_NAME.value,\n    }));\n    const renderMask = useSliderMark(markConfig);\n\n    const inputConfig = computed(() => ({\n      max: props.max,\n      min: props.min,\n      inputNumberProps: props.inputNumberProps,\n      step: props.step,\n      prefixName: COMPONENT_NAME.value,\n      vertical: vertical.value,\n      disabled: disabled.value,\n    }));\n    const renderInputNumber = useSliderInput(inputConfig);\n\n    const renderInputButton = (): VNode => {\n      const firstInputVal = firstValue.value;\n      const firstInputOnChange = (v: number) => {\n        firstValue.value = v;\n      };\n      const secondInputVal = secondValue.value;\n      const secondInputOnChange = (v: number) => {\n        secondValue.value = v;\n      };\n      return (\n        <div\n          class={[\n            `${COMPONENT_NAME.value}__input-container`,\n            {\n              'is-vertical': vertical.value,\n            },\n          ]}\n        >\n          {renderInputNumber(firstInputVal, firstInputOnChange)}\n          {props.range && <div class={`${COMPONENT_NAME.value}__center-line`} />}\n          {props.range && renderInputNumber(secondInputVal, secondInputOnChange)}\n        </div>\n      );\n    };\n    /** -------------------------- 渲染相关逻辑 end --------------------------  */\n\n    /** 父子共用状态&方法 */\n    const toggleDragging = (toState: boolean) => {\n      dragging.value = toState;\n    };\n\n    const { min, max, step } = toRefs(props);\n    provide(\n      sliderPropsInjectKey,\n      reactive({\n        min,\n        max,\n        step,\n        dragging,\n        toggleDragging,\n        precision,\n        disabled,\n        resetSize,\n        sliderSize,\n      }),\n    );\n\n    return () => (\n      <div class={containerClass.value} ref={sliderContainerRef}>\n        <div\n          class={sliderClass.value}\n          role=\"slider\"\n          aria-valuemin={props.min}\n          aria-valuemax={props.max}\n          aria-orientation={props.layout}\n          aria-disabled={disabled.value}\n          tooltip-props={props.tooltipProps}\n        >\n          <div class={sliderRailClass.value} style={runwayStyle.value} onClick={onSliderClick} ref={sliderRef}>\n            <div class={`${COMPONENT_NAME.value}__track`} style={barStyle.value} />\n            <TSliderButton\n              vertical={vertical.value}\n              value={firstValue.value}\n              ref={firstButtonRef}\n              disabled={disabled.value}\n              tooltip-props={props.tooltipProps}\n              label={props.label}\n              onInput={(v: number) => {\n                firstValue.value = v;\n              }}\n            />\n            {props.range && (\n              <TSliderButton\n                vertical={vertical.value}\n                value={secondValue.value}\n                ref={secondButtonRef}\n                disabled={disabled.value}\n                label={props.label}\n                tooltip-props={props.tooltipProps}\n                onInput={(v: number) => {\n                  secondValue.value = v;\n                }}\n              />\n            )}\n            {props.showStep && (\n              <div>\n                {steps.value.map((item, key) => (\n                  <div class={`${COMPONENT_NAME.value}__stop`} key={key} style={getStopStyle(item, vertical.value)} />\n                ))}\n              </div>\n            )}\n            {renderMask(changeValue)}\n          </div>\n        </div>\n        {isAlreadyMount.value && props.inputNumberProps && renderInputButton()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","model","prop","event","props","setup","ctx","disabled","useFormDisabled","COMPONENT_NAME","usePrefixClass","useCommonClassName","STATUS","toRefs","value","modelValue","useVModel","defaultValue","onChange","sliderValue","setSliderValue","sliderContainerRef","ref","sliderRef","firstButtonRef","secondButtonRef","firstValue","formatSlderValue","secondValue","dragging","sliderSize","vertical","computed","layout","containerClass","sliderClass","inputNumberProps","sliderRailClass","runwayStyle","height","barStyle","barStart","range","minValue","min","rangeDiff","cuttentDiff","maxValue","barSize","bottom","width","left","max","Math","steps","showStep","step","console","warn","stepCount","stepWidth","result","i","push","r","filter","precision","precisions","map","item","decimalArr","split","length","apply","setValues","Array","isArray","maxLimit","minLimit","preValue","emitChange","changeValue","fixValue","resetSize","isAlreadyMount","init","valuetext","String","setAttribute","window","addEventListener","setPosition","percent","targetValue","button","abs","onSliderClick","sliderOffsetBottom","getBoundingClientRect","clientY","sliderOffsetLeft","clientX","point","Number","watch","newVal","newStates","prevStates","onMounted","onBeforeUnmount","removeEventListener","markConfig","marks","prefixName","renderMask","useSliderMark","inputConfig","renderInputNumber","useSliderInput","renderInputButton","firstInputVal","firstInputOnChange","v","secondInputVal","secondInputOnChange","_createVNode","toggleDragging","toState","provide","sliderPropsInjectKey","reactive","tooltipProps","TSliderButton","label","key","getStopStyle"],"mappings":"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"}