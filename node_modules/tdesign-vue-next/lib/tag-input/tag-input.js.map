{"version":3,"file":"tag-input.js","sources":["../../src/tag-input/tag-input.tsx"],"sourcesContent":["import { defineComponent, computed, toRefs, nextTick, reactive } from 'vue';\n\nimport { CloseCircleFilledIcon as TdCloseCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport TInput, { InputValue } from '../input';\n\nimport { TdTagInputProps } from './type';\nimport props from './props';\nimport { renderTNodeJSX } from '../utils/render-tnode';\nimport { useConfig } from '../config-provider/useConfig';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\n\nimport useTagScroll from './hooks/useTagScroll';\nimport useTagList from './useTagList';\nimport useHover from './hooks/useHover';\nimport useDefault from '../hooks/useDefaultValue';\nimport useDragSorter from './hooks/useDragSorter';\n\nconst useComponentClassName = () => {\n  return {\n    NAME_CLASS: usePrefixClass('tag-input'),\n    CLEAR_CLASS: usePrefixClass('tag-input__suffix-clear'),\n    BREAK_LINE_CLASS: usePrefixClass('tag-input--break-line'),\n  };\n};\n\nexport default defineComponent({\n  name: 'TTagInput',\n\n  props: { ...props },\n\n  setup(props: TdTagInputProps) {\n    const { NAME_CLASS, CLEAR_CLASS, BREAK_LINE_CLASS } = useComponentClassName();\n    const { CloseCircleFilledIcon } = useGlobalIcon({ CloseCircleFilledIcon: TdCloseCircleFilledIcon });\n\n    const { inputValue } = toRefs(props);\n    const [tInputValue, setTInputValue] = useDefault(\n      inputValue,\n      props.defaultInputValue,\n      props.onInputChange,\n      'inputValue',\n    );\n    const { excessTagsDisplayType, readonly, disabled, clearable, placeholder } = toRefs(props);\n    const { isHover, addHover, cancelHover } = useHover({\n      readonly: props.readonly,\n      disabled: props.disabled,\n      onMouseenter: props.onMouseenter,\n      onMouseleave: props.onMouseleave,\n    });\n    const { classPrefix: prefix } = useConfig();\n    // 这里不需要响应式，因此直接传递参数\n    const { getDragProps } = useDragSorter({\n      ...props,\n      sortOnDraggable: props.dragSort,\n      onDragOverCheck: {\n        x: true,\n        targetClassNameRegExp: new RegExp(`^${prefix}-tag`),\n      },\n    });\n    const { scrollToRight, onWheel, scrollToRightOnEnter, scrollToLeftOnLeave, tagInputRef } = useTagScroll(props);\n    // handle tag add and remove\n    // 需要响应式，为了尽量的和 react 版本做法相同，这里进行响应式处理\n    const { tagValue, onInnerEnter, onInputBackspaceKeyUp, clearAll, renderLabel, onClose } = useTagList(\n      reactive({\n        ...toRefs(props),\n        getDragProps,\n      }),\n    );\n\n    const classes = computed(() => {\n      return [\n        NAME_CLASS.value,\n        {\n          [BREAK_LINE_CLASS.value]: excessTagsDisplayType.value === 'break-line',\n        },\n      ];\n    });\n\n    const tagInputPlaceholder = computed(() => (!tagValue.value?.length ? placeholder.value : ''));\n\n    const showClearIcon = computed(() =>\n      Boolean(\n        !readonly.value &&\n          !disabled.value &&\n          clearable.value &&\n          isHover.value &&\n          (tagValue.value?.length || tInputValue.value),\n      ),\n    );\n\n    const onInputEnter = (value: InputValue, context: { e: KeyboardEvent }) => {\n      // 阻止 Enter 默认行为，避免在 Form 中触发 submit 事件\n      context.e?.preventDefault?.();\n      setTInputValue('', { e: context.e, trigger: 'enter' });\n      onInnerEnter(value, context);\n      nextTick(() => {\n        scrollToRight();\n      });\n    };\n\n    const onClick = () => {\n      tagInputRef.value.focus();\n    };\n\n    const onClearClick = (context: { e: MouseEvent }) => {\n      clearAll(context);\n      setTInputValue('', { e: context.e, trigger: 'clear' });\n      props.onClear?.(context);\n    };\n\n    return {\n      CLEAR_CLASS,\n      CloseCircleFilledIcon,\n      tagValue,\n      tInputValue,\n      isHover,\n      tagInputPlaceholder,\n      showClearIcon,\n      tagInputRef,\n      setTInputValue,\n      addHover,\n      cancelHover,\n      onInputEnter,\n      onInnerEnter,\n      onInputBackspaceKeyUp,\n      renderLabel,\n      onWheel,\n      scrollToRightOnEnter,\n      scrollToLeftOnLeave,\n      onClick,\n      onClearClick,\n      onClose,\n      classes,\n    };\n  },\n\n  render() {\n    const { CloseCircleFilledIcon } = this;\n\n    const suffixIconNode = this.showClearIcon ? (\n      <CloseCircleFilledIcon class={this.CLEAR_CLASS} onClick={this.onClearClick} />\n    ) : (\n      renderTNodeJSX(this, 'suffixIcon')\n    );\n    // 自定义 Tag 节点\n    const displayNode = renderTNodeJSX(this, 'valueDisplay', {\n      params: {\n        value: this.tagValue,\n        onClose: (index: number, item: any) => this.onClose({ index, item }),\n      },\n    });\n    // 左侧文本\n    const label = renderTNodeJSX(this, 'label', { silent: true });\n    return (\n      <TInput\n        ref=\"tagInputRef\"\n        readonly={this.readonly}\n        value={this.tInputValue}\n        autoWidth={true} // 控制input_inner的宽度 设置为true让内部input不会提前换行\n        size={this.size}\n        disabled={this.disabled}\n        label={() => this.renderLabel({ displayNode, label })}\n        class={this.classes}\n        tips={this.tips}\n        status={this.status}\n        placeholder={this.tagInputPlaceholder}\n        suffix={this.suffix}\n        suffixIcon={() => suffixIconNode}\n        showInput={\n          !(this.inputProps as TdTagInputProps['inputProps'])?.readonly || !this.tagValue || !this.tagValue?.length\n        }\n        keepWrapperWidth={!this.autoWidth}\n        onWheel={this.onWheel}\n        onChange={(val: InputValue, context?: { e?: InputEvent | MouseEvent }) => {\n          this.setTInputValue(val, { ...context, trigger: 'input' });\n        }}\n        onPaste={this.onPaste}\n        onEnter={this.onInputEnter}\n        onKeyup={this.onInputBackspaceKeyUp}\n        onMouseenter={(context: { e: MouseEvent }) => {\n          this.addHover(context);\n          this.scrollToRightOnEnter();\n        }}\n        onMouseleave={(context: { e: MouseEvent }) => {\n          this.cancelHover(context);\n          this.scrollToLeftOnLeave();\n        }}\n        onFocus={(inputValue: InputValue, context: { e: MouseEvent }) => {\n          this.onFocus?.(this.tagValue, { e: context.e, inputValue });\n        }}\n        onBlur={(inputValue: InputValue, context: { e: MouseEvent }) => {\n          this.onBlur?.(this.tagValue, { e: context.e, inputValue });\n        }}\n        onClick={this.onClick}\n        {...(this.inputProps as TdTagInputProps['inputProps'])}\n      />\n    );\n  },\n});\n"],"names":["useComponentClassName","NAME_CLASS","usePrefixClass","CLEAR_CLASS","BREAK_LINE_CLASS","defineComponent","name","props","setup","useGlobalIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","toRefs","inputValue","useDefault","defaultInputValue","onInputChange","tInputValue","setTInputValue","excessTagsDisplayType","readonly","disabled","clearable","placeholder","useHover","onMouseenter","onMouseleave","isHover","addHover","cancelHover","useConfig","prefix","classPrefix","useDragSorter","sortOnDraggable","dragSort","onDragOverCheck","x","targetClassNameRegExp","RegExp","getDragProps","useTagScroll","scrollToRight","onWheel","scrollToRightOnEnter","scrollToLeftOnLeave","tagInputRef","useTagList","reactive","tagValue","onInnerEnter","onInputBackspaceKeyUp","clearAll","renderLabel","onClose","classes","computed","value","tagInputPlaceholder","length","showClearIcon","Boolean","onInputEnter","context","e","preventDefault","trigger","nextTick","onClick","focus","onClearClick","onClear","render","suffixIconNode","_createVNode","renderTNodeJSX","displayNode","params","index","item","label","silent","TInput","_mergeProps","size","tips","status","suffix","inputProps","autoWidth","val","onPaste","onFocus","onBlur"],"mappings":"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"}