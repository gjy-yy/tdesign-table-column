{"version":3,"file":"useMoreAction.js","sources":["../../src/pagination/useMoreAction.ts"],"sourcesContent":["import { computed, ref, Ref } from 'vue';\nimport { TdPaginationProps } from './type';\n\nexport default function useMoreAction(props: TdPaginationProps, pageCount: Ref<number>, innerCurrent: Ref<number>) {\n  const prevMore = ref(false);\n\n  const nextMore = ref(false);\n\n  const curPageLeftCount = computed(() => Math.ceil((props.foldedMaxPageBtn - 1) / 2));\n\n  const curPageRightCount = computed(() => Math.ceil((props.foldedMaxPageBtn - 1) / 2));\n\n  const isPrevMoreShow = computed(() => 2 + curPageLeftCount.value < innerCurrent.value);\n\n  const isNextMoreShow = computed(() => pageCount.value - 1 - curPageRightCount.value > innerCurrent.value);\n\n  return {\n    prevMore,\n    nextMore,\n    curPageLeftCount,\n    curPageRightCount,\n    isPrevMoreShow,\n    isNextMoreShow,\n  };\n}\n"],"names":["useMoreAction","props","pageCount","innerCurrent","prevMore","ref","nextMore","curPageLeftCount","computed","Math","ceil","foldedMaxPageBtn","curPageRightCount","isPrevMoreShow","value","isNextMoreShow"],"mappings":";;;;;;;;AAGwB,SAAAA,aAAA,CAAcC,KAAd,EAAwCC,SAAxC,EAAgEC,YAAhE,EAA2F;AAC3G,EAAA,IAAAC,QAAA,GAAWC,IAAI,MAAf,CAAA;AAEA,EAAA,IAAAC,QAAA,GAAWD,IAAI,MAAf,CAAA;EAEA,IAAAE,gBAAA,GAAmBC,SAAS,YAAA;AAAA,IAAA,OAAMC,IAAA,CAAKC,IAAL,EAAWT,KAAM,CAAAU,gBAAN,GAAyB,KAAK,CAAzC,CAAN,CAAA;AAAA,IAA5B,CAAA;EAEA,IAAAC,iBAAA,GAAoBJ,SAAS,YAAA;AAAA,IAAA,OAAMC,IAAA,CAAKC,IAAL,EAAWT,KAAM,CAAAU,gBAAN,GAAyB,KAAK,CAAzC,CAAN,CAAA;AAAA,IAA7B,CAAA;EAEN,IAAME,iBAAiBL,QAAS,CAAA,YAAA;AAAA,IAAA,OAAM,IAAID,gBAAiB,CAAAO,KAArB,GAA6BX,aAAaW,KAAhD,CAAA;AAAA,GAAA,CAAhC,CAAA;EAEM,IAAAC,cAAA,GAAiBP,SAAS,YAAA;AAAA,IAAA,OAAMN,SAAA,CAAUY,KAAV,GAAkB,CAAlB,GAAsBF,iBAAA,CAAkBE,KAAxC,GAAgDX,YAAA,CAAaW,KAAnE,CAAA;AAAA,IAA1B,CAAA;EAEC,OAAA;AACLV,IAAAA,QAAA,EAAAA,QADK;AAELE,IAAAA,QAAA,EAAAA,QAFK;AAGLC,IAAAA,gBAAA,EAAAA,gBAHK;AAILK,IAAAA,iBAAA,EAAAA,iBAJK;AAKLC,IAAAA,cAAA,EAAAA,cALK;AAMLE,IAAAA,cAAA,EAAAA,cAAAA;GANK,CAAA;AAQT;;;;"}