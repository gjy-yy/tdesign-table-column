{"version":3,"file":"pagination.js","sources":["../../src/pagination/pagination.tsx"],"sourcesContent":["import { defineComponent, computed, ref, watch, toRefs } from 'vue';\nimport isNaN from 'lodash/isNaN';\nimport {\n  PageFirstIcon as TdPageFirstIcon,\n  PageLastIcon as TdPageLastIcon,\n  ChevronLeftIcon as TdChevronLeftIcon,\n  ChevronRightIcon as TdChevronRightIcon,\n  ChevronLeftDoubleIcon as TdChevronLeftDoubleIcon,\n  ChevronRightDoubleIcon as TdChevronRightDoubleIcon,\n  EllipsisIcon as TdEllipsisIcon,\n} from 'tdesign-icons-vue-next';\n\nimport { TdPaginationProps } from '../pagination/type';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport TInputNumber from '../input-number';\nimport { Option, Select } from '../select';\nimport TInputAdornment from '../input-adornment';\nimport props from './props';\nimport usePaginationClasses from './usePaginationClasses';\nimport useMoreAction from './useMoreAction';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport { useTNodeJSX } from '../hooks/tnode';\n\nconst min = 1;\n\nexport default defineComponent({\n  name: 'TPagination',\n  props,\n\n  setup(props) {\n    const { modelValue, pageSize, current } = toRefs(props);\n    const renderTNodeJSX = useTNodeJSX();\n    const [innerCurrent, setInnerCurrent] = useVModel(\n      current,\n      modelValue,\n      props.defaultCurrent,\n      props.onCurrentChange,\n      'current',\n    );\n\n    const [innerPageSize, setInnerPageSize] = useDefaultValue(\n      pageSize,\n      props.defaultPageSize,\n      props.onPageSizeChange,\n      'pageSize',\n    );\n\n    const { t, globalConfig } = useConfig('pagination');\n    const COMPONENT_NAME = usePrefixClass('pagination');\n    const {\n      PageFirstIcon,\n      PageLastIcon,\n      ChevronLeftIcon,\n      ChevronRightIcon,\n      ChevronLeftDoubleIcon,\n      ChevronRightDoubleIcon,\n      EllipsisIcon,\n    } = useGlobalIcon({\n      PageFirstIcon: TdPageFirstIcon,\n      PageLastIcon: TdPageLastIcon,\n      ChevronLeftIcon: TdChevronLeftIcon,\n      ChevronRightIcon: TdChevronRightIcon,\n      ChevronLeftDoubleIcon: TdChevronLeftDoubleIcon,\n      ChevronRightDoubleIcon: TdChevronRightDoubleIcon,\n      EllipsisIcon: TdEllipsisIcon,\n    });\n\n    const { pageCount, ...CLASS_MAP } = usePaginationClasses(props, innerCurrent, innerPageSize, COMPONENT_NAME);\n\n    const { prevMore, isPrevMoreShow, curPageLeftCount, nextMore, isNextMoreShow, curPageRightCount } = useMoreAction(\n      props,\n      pageCount,\n      innerCurrent,\n    );\n\n    const jumpIndex = ref(innerCurrent.value);\n\n    const isFolded = computed(() => pageCount.value > props.maxPageBtn);\n\n    const pageCountOption = computed<Array<{ label: string; value: number }>>(() => {\n      const ans = [];\n      for (let i = 1; i <= pageCount.value; i++) {\n        ans.push({ value: i, label: `${i}/${pageCount.value}` });\n      }\n      return ans;\n    });\n\n    const sizeOptions = computed<Array<{ label: string; value: number }>>(() => {\n      const pageSizeOptions = props.pageSizeOptions as TdPaginationProps['pageSizeOptions'];\n      const options = pageSizeOptions.map((option) =>\n        typeof option === 'object'\n          ? option\n          : {\n              label: t(globalConfig.value.itemsPerPage, { size: option }),\n              value: Number(option),\n            },\n      );\n      return options.sort((a, b) => a.value - b.value);\n    });\n\n    const isMidEllipsis = computed(() => {\n      return props.pageEllipsisMode === 'mid';\n    });\n\n    const pages = computed(() => {\n      const array = [];\n      let start;\n      let end;\n\n      if (isFolded.value) {\n        if (isPrevMoreShow.value && isNextMoreShow.value) {\n          start = innerCurrent.value - curPageLeftCount.value;\n          end = innerCurrent.value + curPageRightCount.value;\n        } else {\n          const foldedStart = isMidEllipsis.value ? 2 : 1;\n          const foldedEnd = isMidEllipsis.value ? pageCount.value - 1 : pageCount.value;\n          start = isPrevMoreShow.value ? pageCount.value - props.foldedMaxPageBtn + 1 : foldedStart;\n          end = isPrevMoreShow.value ? foldedEnd : props.foldedMaxPageBtn;\n        }\n      } else {\n        start = 1;\n        end = pageCount.value;\n      }\n\n      for (let i = start; i <= end; i++) {\n        array.push(i);\n      }\n      return array;\n    });\n\n    // 如果页面总数发生变化并当前页数大于总页数则重置为1\n    watch(\n      () => pageCount.value,\n      () => {\n        if (innerCurrent.value > pageCount.value) innerCurrent.value = 1;\n      },\n    );\n    watch(\n      () => innerCurrent.value,\n      (val) => (jumpIndex.value = val),\n    );\n\n    const toPage: (pageIndex: number, isTriggerChange?: boolean) => void = (pageIndex, isTriggerChange) => {\n      if (props.disabled) {\n        return;\n      }\n      let current = pageIndex;\n      if (pageIndex < min) {\n        current = min;\n      } else if (pageIndex > pageCount.value) {\n        current = pageCount.value;\n      }\n      if (innerCurrent.value !== current) {\n        const prev = innerCurrent.value;\n        const pageInfo = {\n          current,\n          previous: prev,\n          pageSize: innerPageSize.value,\n        };\n        if (isTriggerChange !== false) {\n          props.onChange?.(pageInfo);\n        }\n        setInnerCurrent(current, pageInfo);\n      }\n    };\n\n    const handlePageChange = (type: string) => {\n      const pageChangeMap = {\n        prevPage: () => toPage(innerCurrent.value - 1),\n        nextPage: () => toPage(innerCurrent.value + 1),\n        prevMorePage: () => toPage(innerCurrent.value - props.foldedMaxPageBtn),\n        nextMorePage: () => toPage(innerCurrent.value + props.foldedMaxPageBtn),\n      };\n\n      pageChangeMap[type]();\n    };\n\n    const onSelectorChange: (e: string) => void = (e) => {\n      if (props.disabled) {\n        return;\n      }\n      const pageSize: number = parseInt(e, 10);\n      let pageCount = 1;\n      if (pageSize > 0) {\n        pageCount = Math.ceil(props.total / pageSize);\n      }\n\n      let isIndexChange = false;\n\n      if (innerCurrent.value > pageCount) {\n        isIndexChange = true;\n      }\n\n      /**\n       * 分页大小变化事件\n       * @param {Number} pageSize 分页大小\n       * @param {Number} index 当前页\n       */\n      const pageInfo = {\n        current: isIndexChange ? pageCount : innerCurrent.value,\n        previous: innerCurrent.value,\n        pageSize,\n      };\n      props.onChange?.(pageInfo);\n      setInnerPageSize(pageSize, pageInfo);\n      if (isIndexChange) {\n        toPage(pageCount, false);\n      }\n    };\n\n    const onJumperChange = (val: number) => {\n      const currentIndex = Math.trunc(+val);\n      if (isNaN(currentIndex)) return;\n      jumpIndex.value = currentIndex;\n      toPage(currentIndex);\n    };\n\n    return () => {\n      const { total, pageSizeOptions, size, disabled, showPageSize } = props;\n      if (pageCount.value < 1) return null;\n\n      const Jumper = (\n        <div class={CLASS_MAP.jumperClass.value}>\n          {t(globalConfig.value.jumpTo)}\n          <TInputAdornment append={`/ ${pageCount.value} ${t(globalConfig.value.page)}`}>\n            <TInputNumber\n              class={CLASS_MAP.jumperInputClass.value}\n              v-model={jumpIndex.value}\n              onBlur={onJumperChange}\n              onEnter={onJumperChange}\n              max={pageCount.value}\n              min={min}\n              size={size}\n              disabled={disabled}\n              theme=\"normal\"\n              placeholder=\"\"\n            />\n          </TInputAdornment>\n        </div>\n      );\n\n      return (\n        <div class={CLASS_MAP.paginationClass.value}>\n          {/* 数据统计区 */}\n          {renderTNodeJSX(\n            'totalContent',\n            <div class={CLASS_MAP.totalClass.value}>{t(globalConfig.value.total, { total })}</div>,\n          )}\n\n          {/* 分页器 */}\n          {showPageSize && pageSizeOptions.length > 0 && (\n            <Select\n              size={size}\n              value={innerPageSize}\n              disabled={disabled}\n              class={CLASS_MAP.sizerClass.value}\n              autoWidth={true}\n              onChange={onSelectorChange}\n            >\n              {sizeOptions.value.map((item, index) => (\n                <Option value={item.value} label={item.label} key={index} />\n              ))}\n            </Select>\n          )}\n          {/* 首页按钮 */}\n          {props.showFirstAndLastPageBtn ? (\n            <div\n              class={CLASS_MAP.preBtnClass.value}\n              onClick={() => toPage(1)}\n              disabled={props.disabled || props.current === min}\n            >\n              <PageFirstIcon />\n            </div>\n          ) : null}\n          {/* 向前按钮 */}\n          {props.showPreviousAndNextBtn ? (\n            <div\n              class={CLASS_MAP.preBtnClass.value}\n              onClick={() => handlePageChange('prevPage')}\n              disabled={disabled || innerCurrent.value === min}\n            >\n              <ChevronLeftIcon />\n            </div>\n          ) : null}\n          {/* 常规版 */}\n          {props.showPageNumber && props.theme === 'default' ? (\n            <ul class={CLASS_MAP.btnWrapClass.value}>\n              {isFolded.value && isMidEllipsis.value && (\n                <li class={CLASS_MAP.getButtonClass(1)} onClick={() => toPage(min)}>\n                  {min}\n                </li>\n              )}\n              {isFolded.value && isPrevMoreShow.value && isMidEllipsis.value ? (\n                <li\n                  class={CLASS_MAP.btnMoreClass.value}\n                  onClick={() => handlePageChange('prevMorePage')}\n                  onMouseOver={() => (prevMore.value = true)}\n                  onMouseOut={() => (prevMore.value = false)}\n                >\n                  {prevMore.value ? <ChevronLeftDoubleIcon /> : <EllipsisIcon />}\n                </li>\n              ) : null}\n              {pages.value.map((i) => (\n                <li class={CLASS_MAP.getButtonClass(i)} key={i} onClick={() => toPage(i)}>\n                  {i}\n                </li>\n              ))}\n              {isFolded.value && isNextMoreShow.value && isMidEllipsis.value ? (\n                <li\n                  class={CLASS_MAP.btnMoreClass.value}\n                  onClick={() => handlePageChange('nextMorePage')}\n                  onMouseOver={() => (nextMore.value = true)}\n                  onMouseOut={() => (nextMore.value = false)}\n                >\n                  {nextMore.value ? <ChevronRightDoubleIcon /> : <EllipsisIcon />}\n                </li>\n              ) : null}\n              {isFolded.value && isMidEllipsis.value ? (\n                <li class={CLASS_MAP.getButtonClass(pageCount.value)} onClick={() => toPage(pageCount.value)}>\n                  {pageCount.value}\n                </li>\n              ) : null}\n            </ul>\n          ) : null}\n          {/* 极简版 */}\n          {props.theme === 'simple' && Jumper}\n          {/* 向后按钮 */}\n          {props.showPreviousAndNextBtn ? (\n            <div\n              class={CLASS_MAP.nextBtnClass.value}\n              onClick={() => handlePageChange('nextPage')}\n              disabled={disabled || innerCurrent.value === pageCount.value}\n            >\n              <ChevronRightIcon />\n            </div>\n          ) : null}\n          {/* 尾页按钮 */}\n          {props.showFirstAndLastPageBtn ? (\n            <div\n              class={CLASS_MAP.nextBtnClass.value}\n              onClick={() => toPage(pageCount.value)}\n              disabled={disabled || innerCurrent.value === pageCount.value}\n            >\n              <PageLastIcon />\n            </div>\n          ) : null}\n          {/* 快速跳转 */}\n          {props.theme === 'default' && props.showJumper && Jumper}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["min","defineComponent","name","props","setup","toRefs","modelValue","pageSize","current","renderTNodeJSX","useTNodeJSX","useVModel","defaultCurrent","onCurrentChange","innerCurrent","setInnerCurrent","useDefaultValue","defaultPageSize","onPageSizeChange","innerPageSize","setInnerPageSize","useConfig","t","globalConfig","COMPONENT_NAME","usePrefixClass","useGlobalIcon","PageFirstIcon","TdPageFirstIcon","PageLastIcon","TdPageLastIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","ChevronLeftDoubleIcon","TdChevronLeftDoubleIcon","ChevronRightDoubleIcon","TdChevronRightDoubleIcon","EllipsisIcon","TdEllipsisIcon","usePaginationClasses","pageCount","CLASS_MAP","useMoreAction","prevMore","isPrevMoreShow","curPageLeftCount","nextMore","isNextMoreShow","curPageRightCount","jumpIndex","ref","value","isFolded","computed","maxPageBtn","ans","i","push","label","sizeOptions","pageSizeOptions","options","map","option","itemsPerPage","size","Number","sort","a","b","isMidEllipsis","pageEllipsisMode","pages","array","start","end","foldedStart","foldedEnd","foldedMaxPageBtn","watch","val","toPage","pageIndex","isTriggerChange","disabled","prev","pageInfo","previous","onChange","handlePageChange","type","pageChangeMap","prevPage","nextPage","prevMorePage","nextMorePage","onSelectorChange","e","parseInt","Math","ceil","total","isIndexChange","onJumperChange","currentIndex","trunc","isNaN","showPageSize","Jumper","_createVNode","jumperClass","jumpTo","TInputAdornment","page","TInputNumber","jumperInputClass","paginationClass","totalClass","length","sizerClass","item","index","showFirstAndLastPageBtn","preBtnClass","showPreviousAndNextBtn","showPageNumber","theme","btnWrapClass","getButtonClass","btnMoreClass","nextBtnClass","showJumper"],"mappings":"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"}