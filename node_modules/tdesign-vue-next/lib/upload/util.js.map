{"version":3,"file":"util.js","sources":["../../src/upload/util.ts"],"sourcesContent":["import { SizeUnit } from './type';\n\nexport function returnFileSize(number: number) {\n  if (number < 1024) {\n    return `${number} Bytes`;\n  }\n  if (number >= 1024 && number < 1048576) {\n    return `${(number / 1024).toFixed(1)} KB`;\n  }\n  if (number >= 1048576) {\n    return `${(number / 1048576).toFixed(1)} MB`;\n  }\n}\n\nexport function getCurrentDate() {\n  const d = new Date();\n  let month: string | number = d.getMonth() + 1;\n  month = month < 10 ? `0${month}` : month;\n  return `${d.getFullYear()}-${month}-${d.getDate()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n}\n/**\n * 缩略文件名 ABCDEFG => ABC...FG\n * @param inputName 文件名\n * @param leftCount 左边长度\n * @param rightcount 右边长度\n * @returns 缩略后的文件名\n */\nexport function abridgeName(inputName: string, leftCount = 5, rightcount = 7): string {\n  const name = inputName;\n  let leftLength = 0;\n  let rightLength = 0;\n  for (let i = 0; i < name.length; i++) {\n    const w = name[i];\n    const isCn = escape(w).indexOf('%u') === 0;\n    if (i < leftCount * 2 && leftLength < leftCount) {\n      isCn ? (leftLength += 1) : (leftLength += 2);\n    } else if (i > i - rightcount && rightLength < rightcount) {\n      isCn ? (rightLength += 1) : (rightLength += 2);\n    }\n  }\n  return name.replace(new RegExp(`^(.{${leftLength}})(.+)(.{${rightLength}})$`), '$1…$3');\n}\n\n/**\n * [*] 表示方法采用这种方式\n * [x] 表示方法不采用这种方式\n *\n * [x] bit      位              b     0 or 1\n * [*] byte     字节            B     8 bits\n * [x] kilobit  千位            kb    1000 bites\n * [*] kilobyte 千字节(二进制)   KB    1024 bytes\n * [x] kilobyte 千字节(十进制)   KB    1000 bytes\n * [x] Megabite 百万位          Mb    1000 kilobits\n * [*] Megabyte 兆字节(二进制)   KB    1024 kilobytes\n * [*] Megabyte 兆字节(十进制)   KB    1000 kilobytes\n * [x] Gigabit  万亿位          Gb    1000 Megabite\n * [*] Gigabyte 吉字节(二进制)   GB    1024 Megabytes\n * [x] Gigabyte 吉字节(十进制)   GB    1000 Megabytes\n */\n\n// 各个单位和 KB 的关系，以KB为基准\nconst SIZE_MAP = {\n  B: 1024,\n  KB: 1,\n  MB: 1024, // 1024 * 1024\n  GB: 1048576, // 1024 * 1024 * 1024\n};\n\n/**\n * 大小比较\n * @param size 文件大小\n * @param unit 计算机计量单位\n */\nexport function isOverSizeLimit(fileSize: number, sizeLimit: number, unit: SizeUnit) {\n  // 以 KB 为单位进行比较\n  const units = ['B', 'KB', 'MB', 'GB'];\n  const KB_INDEX = 1;\n  let index = units.indexOf(unit);\n  if (index === -1) {\n    console.warn(`TDesign Upload Warn: \\`sizeLimit.unit\\` can only be one of ${units.join()}`);\n    index = KB_INDEX;\n  }\n  const num = SIZE_MAP[unit];\n  const limit = index < KB_INDEX ? sizeLimit / num : sizeLimit * num;\n  return fileSize <= limit;\n}\n"],"names":["returnFileSize","number","toFixed","getCurrentDate","d","Date","month","getMonth","getFullYear","getDate","getHours","getMinutes","getSeconds","abridgeName","inputName","leftCount","rightcount","name","leftLength","rightLength","i","length","w","isCn","escape","indexOf","replace","RegExp","SIZE_MAP","B","KB","MB","GB","isOverSizeLimit","fileSize","sizeLimit","unit","units","KB_INDEX","index","console","warn","join","num","limit"],"mappings":"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"}