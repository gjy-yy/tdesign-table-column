import { PropType } from 'vue';
import { UploadFile } from './type';
import { UploadRemoveOptions } from './interface';
import { UploadConfig } from '../config-provider/type';
declare const _default: import("vue").DefineComponent<{
    files: {
        type: PropType<UploadFile[]>;
        default: any;
    };
    loadingFile: {
        type: PropType<UploadFile>;
        default: () => UploadFile;
    };
    locale: {
        type: PropType<UploadConfig>;
        default: () => UploadConfig;
    };
    percent: NumberConstructor;
    showUploadProgress: {
        type: BooleanConstructor;
        default: boolean;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    multiple: BooleanConstructor;
    max: {
        type: NumberConstructor;
        default: number;
    };
    disabled: BooleanConstructor;
    onClick: PropType<(e: MouseEvent) => void>;
    onRemove: PropType<(options: UploadRemoveOptions) => void>;
    onImgPreview: PropType<(options: MouseEvent, file: UploadFile) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    files: {
        type: PropType<UploadFile[]>;
        default: any;
    };
    loadingFile: {
        type: PropType<UploadFile>;
        default: () => UploadFile;
    };
    locale: {
        type: PropType<UploadConfig>;
        default: () => UploadConfig;
    };
    percent: NumberConstructor;
    showUploadProgress: {
        type: BooleanConstructor;
        default: boolean;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    multiple: BooleanConstructor;
    max: {
        type: NumberConstructor;
        default: number;
    };
    disabled: BooleanConstructor;
    onClick: PropType<(e: MouseEvent) => void>;
    onRemove: PropType<(options: UploadRemoveOptions) => void>;
    onImgPreview: PropType<(options: MouseEvent, file: UploadFile) => void>;
}>>, {
    max: number;
    disabled: boolean;
    multiple: boolean;
    placeholder: string;
    locale: UploadConfig;
    files: UploadFile[];
    loadingFile: UploadFile;
    showUploadProgress: boolean;
}>;
export default _default;
