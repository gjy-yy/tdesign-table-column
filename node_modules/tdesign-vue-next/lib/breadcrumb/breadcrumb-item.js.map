{"version":3,"file":"breadcrumb-item.js","sources":["../../src/breadcrumb/breadcrumb-item.tsx"],"sourcesContent":["import { defineComponent, VNode, inject, ref, computed, getCurrentInstance, onMounted, onBeforeUpdate } from 'vue';\nimport { ChevronRightIcon as TdChevronRightIcon } from 'tdesign-icons-vue-next';\n\nimport props from './breadcrumb-item-props';\nimport Tooltip from '../tooltip/index';\nimport { isNodeOverflow } from '../utils/dom';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\n\ninterface LocalTBreadcrumb {\n  separator: (() => void) | string;\n  theme: string;\n  slots: {\n    separator: VNode | string;\n  };\n  maxItemWidth: string;\n}\n\nconst localTBreadcrumbOrigin: LocalTBreadcrumb = {\n  separator: '',\n  theme: 'light',\n  slots: { separator: '' },\n  maxItemWidth: undefined,\n};\n\nexport default defineComponent({\n  name: 'TBreadcrumbItem',\n  props: {\n    ...props,\n  },\n  setup(props, { slots, attrs }) {\n    const breadcrumbText = ref<HTMLElement>();\n    const localTBreadcrumb = inject('tBreadcrumb', localTBreadcrumbOrigin);\n    const themeClassName = ref(localTBreadcrumb?.theme);\n    const isCutOff = ref(false);\n    const COMPONENT_NAME = usePrefixClass('breadcrumb__item');\n    const separatorClass = usePrefixClass('breadcrumb__separator');\n    const disableClass = usePrefixClass('is-disabled');\n    const linkClass = usePrefixClass('link');\n    const maxLengthClass = usePrefixClass('breadcrumb__inner');\n    const textFlowClass = usePrefixClass('breadcrumb--text-overflow');\n    const { ChevronRightIcon } = useGlobalIcon({ ChevronRightIcon: TdChevronRightIcon });\n    const maxWithStyle = computed(() => {\n      const maxItemWidth = localTBreadcrumb?.maxItemWidth;\n      const maxWith: string = props.maxWidth || maxItemWidth || '120';\n      return { maxWidth: `${maxWith}px` };\n    });\n\n    onMounted(() => {\n      isCutOff.value = isNodeOverflow(breadcrumbText.value);\n    });\n    onBeforeUpdate(() => {\n      isCutOff.value = isNodeOverflow(breadcrumbText.value);\n    });\n\n    const separatorPropContent = localTBreadcrumb?.separator;\n    const separatorSlot = localTBreadcrumb?.slots?.separator;\n    const separatorContent = separatorPropContent || separatorSlot || (\n      <ChevronRightIcon {...{ color: 'rgba(0,0,0,.3)' }} />\n    );\n    const { proxy } = getCurrentInstance();\n    const bindEvent = (e: MouseEvent) => {\n      if (!props.disabled) {\n        e.preventDefault();\n        if (props.href) {\n          window.location.href = props.href;\n        }\n        const router = props.router || proxy.$root.$router;\n        if (props.to && router) {\n          props.replace ? router.replace(props.to) : router.push(props.to);\n        }\n      }\n    };\n\n    return () => {\n      const itemClass = [COMPONENT_NAME.value, themeClassName.value];\n      const textClass = [textFlowClass.value];\n\n      if (props.disabled) {\n        textClass.push(disableClass.value);\n      }\n\n      const listeners = {\n        onClick: (e: MouseEvent) => {\n          if (props.disabled) {\n            e.stopPropagation();\n            return;\n          }\n          (props as any).onClick?.({ e });\n        },\n      };\n      const textContent = (\n        <span ref={breadcrumbText} {...{ class: maxLengthClass.value, style: maxWithStyle.value }}>\n          {slots.default()}\n        </span>\n      );\n      let itemContent = <span {...{ class: textClass, ...listeners }}>{textContent}</span>;\n\n      if ((props.href || props.to) && !props.disabled) {\n        textClass.push(linkClass.value);\n        itemContent = (\n          <a class={textClass} href={props.href} target={props.target} {...listeners} onClick={bindEvent}>\n            {textContent}\n          </a>\n        );\n      }\n      return (\n        <div class={itemClass} {...attrs}>\n          {isCutOff.value ? <Tooltip content={() => slots?.default()}>{itemContent}</Tooltip> : itemContent}\n          <span class={separatorClass.value}>\n            {typeof separatorContent === 'function' ? separatorContent() : separatorContent}\n          </span>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["localTBreadcrumbOrigin","separator","theme","slots","maxItemWidth","defineComponent","name","props","setup","attrs","breadcrumbText","ref","localTBreadcrumb","inject","themeClassName","isCutOff","COMPONENT_NAME","usePrefixClass","separatorClass","disableClass","linkClass","maxLengthClass","textFlowClass","useGlobalIcon","ChevronRightIcon","TdChevronRightIcon","maxWithStyle","computed","maxWith","maxWidth","onMounted","value","isNodeOverflow","onBeforeUpdate","separatorPropContent","separatorSlot","separatorContent","_createVNode","color","getCurrentInstance","proxy","bindEvent","e","disabled","preventDefault","href","window","location","router","$root","$router","to","replace","push","itemClass","textClass","listeners","onClick","stopPropagation","textContent","style","itemContent","_mergeProps","target"],"mappings":"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"}