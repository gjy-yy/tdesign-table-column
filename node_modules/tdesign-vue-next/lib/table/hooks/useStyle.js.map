{"version":3,"file":"useStyle.js","sources":["../../../src/table/hooks/useStyle.ts"],"sourcesContent":["import { computed, toRefs } from 'vue';\nimport { TdBaseTableProps } from '../type';\nimport useClassName from './useClassName';\nimport useCommonClassName from '../../hooks/useCommonClassName';\n\nexport function formatCSSUnit(unit: string | number) {\n  if (!unit) return unit;\n  return isNaN(Number(unit)) ? unit : `${unit}px`;\n}\n\nexport default function useStyle(props: TdBaseTableProps) {\n  const { size, bordered, stripe, hover, verticalAlign, height, maxHeight, tableContentWidth } = toRefs(props);\n\n  const { tableBaseClass, tableAlignClasses } = useClassName();\n  const { sizeClassNames } = useCommonClassName();\n\n  const tableClasses = computed(() => [\n    tableBaseClass.table,\n    {\n      [sizeClassNames[size.value]]: size.value !== 'medium',\n      [tableBaseClass.bordered]: bordered.value,\n      [tableBaseClass.striped]: stripe.value,\n      [tableBaseClass.hover]: hover.value,\n      [tableBaseClass.loading]: props.loading,\n      [tableBaseClass.affixedHeader]: props.headerAffixedTop,\n      [tableBaseClass.rowspanAndColspan]: props.rowspanAndColspan,\n      [tableAlignClasses[verticalAlign.value]]: verticalAlign.value !== 'middle',\n    },\n  ]);\n\n  const tableContentStyles = computed(() => ({\n    height: formatCSSUnit(height.value),\n    maxHeight: formatCSSUnit(maxHeight.value),\n  }));\n\n  const tableElementStyles = computed(() => ({\n    width: formatCSSUnit(tableContentWidth.value),\n  }));\n\n  return {\n    tableClasses,\n    tableElementStyles,\n    tableContentStyles,\n  };\n}\n"],"names":["formatCSSUnit","unit","isNaN","Number","useStyle","props","toRefs","size","bordered","stripe","hover","verticalAlign","height","maxHeight","tableContentWidth","useClassName","tableBaseClass","tableAlignClasses","useCommonClassName","sizeClassNames","tableClasses","computed","table","value","striped","loading","affixedHeader","headerAffixedTop","rowspanAndColspan","tableContentStyles","tableElementStyles","width"],"mappings":";;;;;;;;;;;;;;;;;;AAKO,SAASA,aAAT,CAAuBC,IAAvB,EAA8C;AACnD,EAAA,IAAI,CAACA,IAAL,EAAkB,OAAAA,IAAA,CAAA;EAClB,OAAOC,MAAMC,MAAO,CAAAF,IAAA,EAAb,GAAsBA,IAAtB,GAAgCA,EAAAA,CAAAA,MAAAA,CAAAA,IAAhC,EAAP,IAAA,CAAA,CAAA;AACF,CAAA;AAEA,SAAwBG,QAAxB,CAAiCC,KAAjC,EAA0D;EAClD,IAAyFC,OAAAA,GAAAA,MAAA,CAAOD,KAAP,CAAzF;MAAEE,IAAF,WAAEA,IAAF;MAAQC,QAAR,WAAQA,QAAR;MAAkBC,MAAlB,WAAkBA,MAAlB;MAA0BC,KAA1B,WAA0BA,KAA1B;MAAiCC,aAAjC,WAAiCA,aAAjC;MAAgDC,MAAhD,WAAgDA,MAAhD;MAAwDC,SAAxD,WAAwDA,SAAxD;MAAmEC,iBAAnE,WAAmEA,iBAAnE,CAAA;;AAEN,EAAA,IAAA,aAAA,GAA8CC,YAAa,EAA3D;MAAQC,cAAR,iBAAQA,cAAR;MAAwBC,iBAAxB,iBAAwBA,iBAAxB,CAAA;;AACM,EAAA,IAAA,mBAAA,GAAqBC,kBAAmB,EAAxC;MAAEC,cAAF,uBAAEA,cAAF,CAAA;;EAEA,IAAAC,YAAA,GAAeC,SAAS,YAAA;AAAA,IAAA,IAAA,IAAA,CAAA;;AAAA,IAAA,OAAM,CAClCL,cAAe,CAAAM,KADmB,GAAA,IAAA,GAAA,EAAA,EAAA,eAAA,CAAA,IAAA,EAG/BH,cAAA,CAAeZ,IAAK,CAAAgB,KAApB,CAH+B,EAGFhB,KAAKgB,KAAL,KAAe,QAHb,CAAA,EAAA,eAAA,CAAA,IAAA,EAI/BP,cAAe,CAAAR,QAJgB,EAILA,QAAS,CAAAe,KAJJ,yBAK/BP,cAAe,CAAAQ,OALgB,EAKNf,MAAO,CAAAc,KALD,yBAM/BP,cAAe,CAAAN,KANgB,EAMRA,KAAM,CAAAa,KANE,yBAO/BP,cAAe,CAAAS,OAPgB,EAONpB,KAAM,CAAAoB,OAPA,CAQ/BT,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,cAAe,CAAAU,aARgB,EAQArB,KAAM,CAAAsB,gBARN,CAS/BX,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,cAAe,CAAAY,iBATgB,EASIvB,KAAM,CAAAuB,iBATV,CAAA,EAAA,eAAA,CAAA,IAAA,EAU/BX,iBAAA,CAAkBN,aAAc,CAAAY,KAAhC,CAV+B,EAUUZ,cAAcY,KAAd,KAAwB,QAVlC,CAAN,EAAA,IAAA,EAAA,CAAA;AAAA,IAAxB,CAAA;EAcA,IAAAM,kBAAA,GAAqBR,SAAS,YAAA;IAAA,OAAO;AACzCT,MAAAA,MAAA,EAAQZ,aAAc,CAAAY,MAAA,CAAOW,KAAP,CADmB;AAEzCV,MAAAA,SAAA,EAAWb,aAAc,CAAAa,SAAA,CAAUU,KAAV,CAAA;KAFS,CAAA;AAAA,IAA9B,CAAA;EAKA,IAAAO,kBAAA,GAAqBT,SAAS,YAAA;IAAA,OAAO;AACzCU,MAAAA,KAAA,EAAO/B,aAAc,CAAAc,iBAAA,CAAkBS,KAAlB,CAAA;KADa,CAAA;AAAA,IAA9B,CAAA;EAIC,OAAA;AACLH,IAAAA,YAAA,EAAAA,YADK;AAELU,IAAAA,kBAAA,EAAAA,kBAFK;AAGLD,IAAAA,kBAAA,EAAAA,kBAAAA;GAHK,CAAA;AAKT;;;;"}