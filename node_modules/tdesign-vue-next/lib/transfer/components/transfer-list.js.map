{"version":3,"file":"transfer-list.js","sources":["../../../src/transfer/components/transfer-list.tsx"],"sourcesContent":["import { defineComponent, VNode, PropType, ref, computed, watch } from 'vue';\nimport {\n  EmptyType,\n  SearchEvent,\n  SearchOption,\n  TransferValue,\n  TdTransferProps,\n  TransferListType,\n  TransferItemOption,\n} from '../interface';\nimport { PageInfo, TdPaginationProps, Pagination } from '../../pagination';\nimport { Checkbox as TCheckbox, CheckboxGroup as TCheckboxGroup, CheckboxProps } from '../../checkbox';\nimport { getLefCount, getDataValues } from '../utils';\nimport Search from './transfer-search';\nimport { useTNodeDefault } from '../../hooks/tnode';\n\nimport { useConfig, usePrefixClass } from '../../hooks/useConfig';\n\nconst props = {\n  checkboxProps: {\n    type: Object as PropType<CheckboxProps>,\n    default: () => ({}),\n  },\n  dataSource: {\n    type: Array as PropType<Array<TransferItemOption>>,\n    default(): Array<TransferItemOption> {\n      return [];\n    },\n  },\n  listType: {\n    type: String as PropType<TransferListType>,\n    default: 'target',\n  },\n  title: {\n    type: [String, Function],\n  },\n  checkedValue: {\n    type: Array as PropType<Array<TransferValue>>,\n    default(): Array<TransferValue> {\n      return [];\n    },\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  search: {\n    type: [Boolean, Object] as PropType<SearchOption>,\n    default: false,\n  },\n  transferItem: Function as PropType<TdTransferProps['transferItem']>,\n  empty: {\n    type: [Function, String] as PropType<EmptyType>,\n  },\n  pagination: [Boolean, Object],\n  footer: [Function, String],\n  checkAll: Boolean,\n  isTreeMode: {\n    type: Boolean as PropType<boolean>,\n    default: false,\n  },\n  onCheckedChange: Function as PropType<(event: Array<TransferValue>) => void>,\n  onPageChange: Function,\n  onScroll: Function,\n  onSearch: Function,\n};\n\nexport default defineComponent({\n  name: 'TTransferList',\n  props: { ...props },\n  setup(props) {\n    const classPrefix = usePrefixClass();\n    const { t, globalConfig } = useConfig('transfer');\n    // 搜索框输入内容\n    const filterValue = ref('');\n    // 用于兼容处理 Pagination 的非受控属性（非受控属性仅有 change 事件变化，无 props 变化，因此只需监听事件）\n    const defaultCurrent = ref(1);\n    // 用于兼容处理 Pagination 的非受控属性\n    const defaultPageSize = ref(0);\n\n    const currentPage = computed(() => {\n      const pagination = props.pagination as any;\n      return pagination?.current || defaultCurrent.value || pagination?.defaultCurrent;\n    });\n    const pageSize = computed(() => {\n      const pagination = props.pagination as any;\n      return pagination?.pageSize || defaultPageSize.value || pagination?.defaultPageSize;\n    });\n    const filteredData = computed(() => {\n      return props.dataSource.filter((item: TransferItemOption) => {\n        const label = item && item.label.toString();\n        return label.toLowerCase().indexOf(filterValue.value.toLowerCase()) > -1;\n      });\n    });\n\n    const pageTotal = computed(() => {\n      return (filteredData.value && filteredData.value.length) || 0;\n    });\n\n    const curPageData = computed(() => {\n      let pageData = filteredData.value;\n      if (!props.pagination) return pageData;\n      if (pageSize.value === 0) return pageData;\n      const startIndex = (currentPage.value - 1) * pageSize.value;\n      const endIndex = currentPage.value * pageSize.value;\n      pageData = pageData.slice(startIndex, endIndex);\n      return pageData;\n    });\n    const paginationProps = computed(() => {\n      const defaultPaginationProps: TdPaginationProps = {\n        size: 'small',\n        theme: 'simple',\n        totalContent: false,\n        pageSizeOptions: [],\n      };\n      return typeof props.pagination === 'object'\n        ? {\n            ...defaultPaginationProps,\n            ...props.pagination,\n            current: currentPage.value,\n            total: pageTotal.value,\n            pageSize: pageSize.value,\n          }\n        : {};\n    });\n\n    const isAllChecked = computed(() => {\n      const allValue = getDataValues(props.dataSource, [], { isTreeMode: props.isTreeMode, include: false });\n\n      return (\n        props.checkedValue.length > 0 &&\n        (props.isTreeMode\n          ? allValue.every((item) => props.checkedValue.includes(item))\n          : (props.search ? filteredData.value : props.dataSource).every(\n              (item: TransferItemOption) => item.disabled || props.checkedValue.includes(item.value),\n            ))\n      );\n    });\n    const indeterminate = computed(() => {\n      return !isAllChecked.value && props.checkedValue.length > 0;\n    });\n\n    const totalCount = computed(() => {\n      return getLefCount(props.dataSource);\n    });\n\n    watch(totalCount, (val) => {\n      if (val <= (currentPage.value - 1) * pageSize.value) {\n        const lastPage = Math.ceil(val / pageSize.value);\n        defaultCurrent.value = lastPage;\n      }\n    });\n\n    const handlePaginationChange = (pageInfo: PageInfo) => {\n      props.onPageChange?.(pageInfo);\n      defaultCurrent.value = pageInfo.current;\n      defaultPageSize.value = pageInfo.pageSize;\n    };\n    const handleCheckedChange = (val: Array<TransferValue>) => {\n      props.onCheckedChange?.(val);\n    };\n    const handleCheckedAllChange = (checked: boolean) => {\n      if (checked) {\n        const allValue = getDataValues(props.search ? filteredData.value : props.dataSource, [], {\n          isTreeMode: props.isTreeMode,\n          include: false,\n        });\n        handleCheckedChange(allValue);\n      } else {\n        handleCheckedChange([]);\n      }\n    };\n    const scroll = (e: Event) => {\n      props.onScroll?.(e);\n    };\n    const handleSearch = (e: any) => {\n      const event: SearchEvent = {\n        query: e.value,\n        type: props.listType as TransferListType,\n        e: e.e,\n        trigger: e.trigger,\n      };\n      filterValue.value = e.value;\n      props.onSearch?.(event);\n    };\n    const renderTNodeJSX = useTNodeDefault();\n    const renderTitle = () => {\n      const defaultNode = props.title && typeof props.title === 'string' ? <template>{props.title}</template> : null;\n      const titleNode = renderTNodeJSX('title', {\n        defaultNode,\n        params: {\n          type: props.listType,\n        },\n      });\n      return <span>{titleNode}</span>;\n    };\n    const renderContent = () => {\n      const defaultNode = (\n        <TCheckboxGroup value={props.checkedValue} onChange={handleCheckedChange}>\n          {curPageData.value.map((item, index) => (\n            <TCheckbox\n              disabled={props.disabled || item.disabled}\n              value={item.value}\n              needRipple={true}\n              class={[\n                `${classPrefix.value}-transfer__list-item`,\n                props.checkedValue.includes(item.value) ? `${classPrefix.value}-is-checked` : '',\n              ]}\n              key={item.key}\n              {...props.checkboxProps}\n            >\n              {renderTNodeJSX('transferItem', {\n                defaultNode: <span>{item.label}</span>,\n                params: { data: item.data, index, type: props.listType },\n              })}\n            </TCheckbox>\n          ))}\n        </TCheckboxGroup>\n      );\n      return (\n        <div class={`${classPrefix.value}-transfer__list-content narrow-scrollbar`} onScroll={scroll}>\n          {renderTNodeJSX('tree', {\n            defaultNode,\n            params: {\n              data: curPageData.value,\n              value: props.checkedValue,\n              onChange: handleCheckedChange,\n            },\n          })}\n        </div>\n      );\n    };\n    const renderEmpty = () => {\n      const empty = props.empty || t(globalConfig.value.empty);\n      const defaultNode: VNode = typeof empty === 'string' ? <span>{empty}</span> : null;\n      return (\n        <div class={`${classPrefix.value}-transfer__empty`}>\n          {renderTNodeJSX('empty', {\n            defaultNode,\n            params: {\n              type: props.listType,\n            },\n          })}\n        </div>\n      );\n    };\n    const renderFooter = () => {\n      const defaultNode =\n        typeof props.footer === 'string' ? (\n          <div class={`${classPrefix.value}-transfer__footer`}>{props.footer}</div>\n        ) : null;\n      return renderTNodeJSX('footer', {\n        defaultNode,\n        params: {\n          type: props.listType,\n        },\n      });\n    };\n\n    return () => (\n      <div class={`${classPrefix.value}-transfer__list ${classPrefix.value}-transfer__list-${props.listType}`}>\n        <div class={`${classPrefix.value}-transfer__list-header`}>\n          <div>\n            {props.checkAll && (\n              <TCheckbox\n                disabled={props.disabled || !props.dataSource.length}\n                checked={isAllChecked.value}\n                indeterminate={indeterminate.value}\n                onChange={handleCheckedAllChange}\n              />\n            )}\n            <span>\n              {t(globalConfig.value.title, {\n                checked: props.checkedValue.length,\n                total: totalCount.value,\n              })}\n            </span>\n          </div>\n          {renderTitle()}\n        </div>\n        <div\n          class={[\n            `${classPrefix.value}-transfer__list-body`,\n            props.search ? `${classPrefix.value}-transfer__list--with-search` : '',\n          ]}\n        >\n          {props.search && (\n            <Search\n              searchValue={filterValue.value}\n              placeholder={t(globalConfig.value.placeholder)}\n              onChange={handleSearch}\n              disabled={props.disabled}\n              search={props.search}\n            />\n          )}\n          {curPageData.value.length > 0 ? renderContent() : renderEmpty()}\n        </div>\n        {props.pagination && pageSize.value > 0 && pageTotal.value > 0 && (\n          <div class={`${classPrefix.value}-transfer__list-pagination`}>\n            <Pagination {...paginationProps.value} onChange={handlePaginationChange} />\n          </div>\n        )}\n        {renderFooter()}\n      </div>\n    );\n  },\n});\n"],"names":["props","checkboxProps","type","Object","dataSource","Array","listType","String","title","Function","checkedValue","disabled","Boolean","search","transferItem","empty","pagination","footer","checkAll","isTreeMode","onCheckedChange","onPageChange","onScroll","onSearch","defineComponent","name","setup","classPrefix","usePrefixClass","useConfig","t","globalConfig","filterValue","ref","defaultCurrent","defaultPageSize","currentPage","computed","current","value","pageSize","filteredData","filter","item","label","toString","toLowerCase","indexOf","pageTotal","length","curPageData","pageData","startIndex","endIndex","slice","paginationProps","defaultPaginationProps","size","theme","totalContent","pageSizeOptions","total","isAllChecked","allValue","getDataValues","include","every","includes","indeterminate","totalCount","getLefCount","watch","val","lastPage","Math","ceil","handlePaginationChange","pageInfo","handleCheckedChange","handleCheckedAllChange","checked","scroll","e","handleSearch","event","query","trigger","renderTNodeJSX","useTNodeDefault","renderTitle","defaultNode","titleNode","params","_createVNode","renderContent","TCheckboxGroup","map","index","TCheckbox","_mergeProps","key","data","onChange","renderEmpty","renderFooter","placeholder"],"mappings":"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"}