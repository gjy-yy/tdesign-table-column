/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var isObject = require('lodash/isObject');
var steps_props = require('./props.js');
var steps_stepItemProps = require('./step-item-props.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useVModel = require('../hooks/useVModel.js');
var hooks_slot = require('../hooks/slot.js');
require('../config-provider/useConfig.js');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('lodash/kebabCase');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var isObject__default = /*#__PURE__*/_interopDefaultLegacy(isObject);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _Steps = vue.defineComponent({
  name: "TSteps",
  props: _objectSpread({}, steps_props["default"]),
  setup: function setup(props2) {
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("steps");

    var _toRefs = vue.toRefs(props2),
        current = _toRefs.current,
        modelValue = _toRefs.modelValue;

    var _useVModel = hooks_useVModel["default"](current, modelValue, props2.defaultCurrent, props2.onChange, "current"),
        _useVModel2 = _slicedToArray__default["default"](_useVModel, 2),
        innerCurrent = _useVModel2[0],
        setInnerCurrent = _useVModel2[1];

    vue.provide("StepsState", vue.reactive({
      current: innerCurrent,
      setCurrent: setInnerCurrent
    }));
    vue.provide("StepsProps", props2);
    var indexMap = vue.ref({});
    vue.watchEffect(function () {
      var _props2$options;

      if (!props2.options) return;
      (_props2$options = props2.options) === null || _props2$options === void 0 ? void 0 : _props2$options.forEach(function (item, index) {
        if (item.value !== void 0) indexMap.value[item.value] = index;
      });
    });

    var handleStatus = function handleStatus(itemProps, index) {
      if (itemProps.status && itemProps.status !== "default") return itemProps.status;
      if (innerCurrent.value === "FINISH") return "finish";

      if (itemProps.value === void 0) {
        if (props2.sequence === "positive" && index < innerCurrent.value) return "finish";
        if (props2.sequence === "reverse" && index > innerCurrent.value) return "finish";
      }

      if (itemProps.value !== void 0) {
        var matchIndex = indexMap.value[innerCurrent.value];

        if (matchIndex === void 0) {
          console.warn("TDesign Steps Warn: The current `value` is not exist.");
          return "default";
        }

        if (props2.sequence === "positive" && index < matchIndex) return "finish";
        if (props2.sequence === "reverse" && index > matchIndex) return "finish";
      }

      var key = itemProps.value === void 0 ? index : itemProps.value;
      if (key === innerCurrent.value) return "process";
      return "default";
    };

    var getChildComponentByName = hooks_slot.useChildComponentSlots();

    var getOptionListBySlots = function getOptionListBySlots(nodes) {
      var arr = [];
      nodes === null || nodes === void 0 ? void 0 : nodes.forEach(function (node) {
        var option = node === null || node === void 0 ? void 0 : node.props;
        var children = node === null || node === void 0 ? void 0 : node.children;
        if (!option && !children) return;

        if (children && isObject__default["default"](children)) {
          for (var key in children) {
            if (key in steps_stepItemProps["default"] && !option[key]) {
              option[key] = children[key];
            }
          }
        }

        props2.sequence === "reverse" ? arr.unshift(option) : arr.push(option);
      });
      return arr;
    };

    var getOptions = function getOptions() {
      var _props2$options2;

      var options;

      if ((_props2$options2 = props2.options) !== null && _props2$options2 !== void 0 && _props2$options2.length) {
        options = props2.sequence === "reverse" ? props2.options.slice().reverse() : props2.options;
      } else {
        var nodes = getChildComponentByName("StepItem");
        options = getOptionListBySlots(nodes);
      }

      return options;
    };

    var renderContent = function renderContent() {
      var content = null;
      var options = getOptions();
      var nodes = getChildComponentByName("StepItem");
      content = options.map(function (item, index) {
        var stepIndex = props2.sequence === "reverse" ? options.length - index - 1 : index;

        var stepItem = vue.createVNode(vue.resolveComponent("t-step-item"), vue.mergeProps(item, {
          "index": stepIndex,
          "status": handleStatus(item, index),
          "key": item.value || index
        }), null);

        if (nodes && nodes[index]) {
          var vnode = nodes[index];
          vnode.props = _objectSpread(_objectSpread({}, item), {}, {
            index: stepIndex,
            status: handleStatus(item, index)
          });
          return vnode;
        }

        return stepItem;
      });
      return content;
    };

    var handleTheme = function handleTheme() {
      var theme = props2.theme;
      var options = getOptions();
      options.forEach(function (item) {
        if ((item === null || item === void 0 ? void 0 : item.icon) !== void 0) {
          theme = "default";
        }
      });
      return theme;
    };

    var baseClass = vue.computed(function () {
      return [COMPONENT_NAME.value, "".concat(COMPONENT_NAME.value, "--").concat(props2.layout), "".concat(COMPONENT_NAME.value, "--").concat(handleTheme(), "-anchor"), "".concat(COMPONENT_NAME.value, "--").concat(props2.sequence), "".concat(COMPONENT_NAME.value, "--").concat(props2.separator, "-separator")];
    });
    return function () {
      return vue.createVNode("div", {
        "class": baseClass.value
      }, [renderContent()]);
    };
  }
});

exports["default"] = _Steps;
//# sourceMappingURL=steps.js.map
