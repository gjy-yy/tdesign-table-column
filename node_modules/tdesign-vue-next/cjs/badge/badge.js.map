{"version":3,"file":"badge.js","sources":["../../src/badge/badge.tsx"],"sourcesContent":["import { defineComponent, computed } from 'vue';\nimport props from './props';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useConfig } from '../hooks/useConfig';\n\nexport default defineComponent({\n  name: 'TBadge',\n\n  props: { ...props },\n\n  setup(props) {\n    const renderTNodeJSX = useTNodeJSX();\n\n    /** 内容计算相关逻辑 start */\n    const content = computed(() => {\n      if (props.dot) return '';\n      if (typeof props.count === 'function') {\n        return renderTNodeJSX('count');\n      }\n      if (Number.isNaN(Number(props.count))) {\n        return props.count;\n      }\n      const count = Number(props.count);\n      return count > props.maxCount ? `${props.maxCount}+` : count;\n    });\n\n    const renderChildren = () => renderTNodeJSX('default');\n\n    const getOffset = () => {\n      if (!props.offset) return {};\n      let [xOffset, yOffset]: Array<string | number> = props.offset;\n      xOffset = Number.isNaN(Number(xOffset)) ? xOffset : `${xOffset}px`;\n      yOffset = Number.isNaN(Number(yOffset)) ? yOffset : `${yOffset}px`;\n      return { xOffset, yOffset };\n    };\n    /** 内容计算相关逻辑 end */\n\n    /** 样式计算相关逻辑 start */\n    const { classPrefix } = useConfig('classPrefix');\n    const name = `${classPrefix.value}-badge`;\n    const isHidden = computed(() => {\n      return !props.showZero && (content.value === 0 || content.value === '0');\n    });\n\n    const badgeClassNames = computed(() => {\n      return [\n        {\n          [`${name}--dot`]: !!props.dot,\n          [`${name}--circle`]: !props.dot && props.shape === 'circle',\n          [`${name}--round`]: props.shape === 'round',\n          [`${classPrefix.value}-size-s`]: props.size === 'small',\n        },\n      ];\n    });\n\n    const inlineStyle = computed(() => {\n      const { xOffset, yOffset } = getOffset();\n      return {\n        background: `${props.color}`,\n        right: xOffset,\n        top: yOffset,\n      };\n    });\n    /** 样式计算相关逻辑 end */\n    return {\n      content,\n      inlineStyle,\n      badgeClassNames,\n      isHidden,\n      renderChildren,\n      name,\n    };\n  },\n\n  render() {\n    return (\n      <div class={this.name} {...this.$attrs}>\n        {this.renderChildren()}\n        {this.isHidden ? null : (\n          <sup class={this.badgeClassNames} style={this.inlineStyle}>\n            {this.content}\n          </sup>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","renderTNodeJSX","useTNodeJSX","content","computed","dot","count","Number","isNaN","maxCount","renderChildren","getOffset","offset","xOffset","yOffset","useConfig","classPrefix","value","isHidden","showZero","badgeClassNames","shape","_defineProperty","size","inlineStyle","background","color","right","top","render","_createVNode","_mergeProps","$attrs"],"mappings":"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"}