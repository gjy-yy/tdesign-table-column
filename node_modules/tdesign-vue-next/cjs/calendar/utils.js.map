{"version":3,"file":"utils.js","sources":["../../src/calendar/utils.ts"],"sourcesContent":["import dayjs from 'dayjs';\n\nimport { CalendarCell } from './type';\n\n// 组件的一些常量\nimport { FIRST_MONTH_OF_YEAR, LAST_MONTH_OF_YEAR, DAY_CN_MAP } from './const';\n\n/**\n * 获取一个日期是周几（1~7）\n */\nexport const getDay = (dt: Date): number => {\n  let day = dayjs(dt).day();\n  if (day === 0) {\n    day = 7;\n  }\n  return day;\n};\n\n/**\n * 获取星期的中文\n * @param num 星期（1~7）\n */\nexport const getDayCn = (num: number): string => {\n  let re = '';\n  const numStr = num.toString();\n  if (numStr in DAY_CN_MAP) {\n    re = DAY_CN_MAP[numStr];\n  }\n  return re;\n};\n\n/**\n * 获取一个日期在日历上的列下标\n * @param firstDayOfWeek 周起始日（1~7）\n * @param dt\n */\nexport const getCellColIndex = (firstDayOfWeek: number, dt: Date): number => {\n  let re = 0;\n  const day = getDay(dt);\n  if (day >= firstDayOfWeek) {\n    re = day - firstDayOfWeek;\n  } else {\n    re = 7 - firstDayOfWeek + day;\n  }\n  return re;\n};\n/**\n * 返回日期+天数（天数可以负数）\n */\nexport const addDate = (dt: Date, days: number) => {\n  const d = new Date(dt);\n  d.setDate(d.getDate() + days);\n  return d;\n};\n\n/**\n * 创建月历单元格数据\n * @param year 月历年份\n * @param curDate 当前日期\n */\nexport const createYearCellsData = (year: number, curDate: dayjs.Dayjs, format: string): CalendarCell[] => {\n  const monthsArr: CalendarCell[] = [];\n  const isCurYear = curDate.year() === year;\n  for (let num = FIRST_MONTH_OF_YEAR; num <= LAST_MONTH_OF_YEAR; num++) {\n    const date = new Date(year, num - 1);\n    const curDateMon = parseInt(curDate.format('M'), 10);\n    const isCurrent = isCurYear && curDateMon === num;\n    monthsArr.push({\n      mode: 'year',\n      isCurrent,\n      date,\n      formattedDate: dayjs(date).format(format),\n      filterDate: null,\n      formattedFilterDate: null,\n      isShowWeekend: true,\n    });\n  }\n\n  return monthsArr;\n};\n\n/**\n * 创建日历单元格数据\n * @param year 日历年份\n * @param month 日历月份\n * @param firstDayOfWeek 周起始日（1~7）\n * @param curDate 当前日期\n * @param format 日期格式\n */\nexport const createMonthCellsData = (\n  year: number,\n  month: number,\n  firstDayOfWeek: number,\n  curDate: dayjs.Dayjs,\n  format: string,\n): CalendarCell[][] => {\n  const daysArr: CalendarCell[][] = [];\n  // 当前月份的开始日期\n  const begin: Date = dayjs(`${year}-${month}`).startOf('month').toDate();\n  // 当前月份的结束日期\n  const end: Date = dayjs(`${year}-${month}`).endOf('month').toDate();\n  const days = end.getDate();\n\n  const beginDateColIndex = getCellColIndex(firstDayOfWeek, begin);\n  let arr = [];\n  let num = 1;\n\n  const createCellData = (belongTo: number, isCurrent: boolean, date: Date, weekOrder: number): CalendarCell => {\n    const day = getDay(date);\n    return {\n      mode: 'month',\n      belongTo,\n      isCurrent,\n      day,\n      weekOrder,\n      date,\n      formattedDate: dayjs(date).format(format),\n      filterDate: null,\n      formattedFilterDate: null,\n      isShowWeekend: true,\n    };\n  };\n\n  // 添加上个月中和当前月第一天同一周的日期\n  for (let i = 0; i < beginDateColIndex; i++) {\n    const date = addDate(begin, i - beginDateColIndex);\n    arr.push(createCellData(-1, false, date, num));\n    if (arr.length === 7) {\n      daysArr.push(arr);\n      arr = [];\n      num += 1;\n    }\n  }\n  for (let i = 0; i < days; i++) {\n    const date = addDate(begin, i);\n    arr.push(createCellData(0, curDate.isSame(dayjs(date)), date, num));\n    if (arr.length === 7) {\n      daysArr.push(arr);\n      arr = [];\n      num += 1;\n    }\n  }\n  // 添加下个月中和当前月最后同一周的日期\n  if (arr.length) {\n    const nextMonthCellNum = 7 - arr.length;\n    for (let i = 0; i < nextMonthCellNum; i++) {\n      const date = addDate(end, i + 1);\n      arr.push(createCellData(1, false, date, num));\n    }\n    daysArr.push(arr);\n  }\n\n  return daysArr;\n};\n\n/**\n * 根据当前时间创建一个默认日期\n * @returns 当前日期都dayjs对象\n */\nexport const createDefaultCurDate = (): dayjs.Dayjs => dayjs(dayjs().format('YYYY-MM-DD'));\n"],"names":["getDay","dt","day","dayjs","getDayCn","num","re","numStr","toString","DAY_CN_MAP","getCellColIndex","firstDayOfWeek","addDate","days","d","Date","setDate","getDate","createYearCellsData","year","curDate","format","monthsArr","isCurYear","FIRST_MONTH_OF_YEAR","LAST_MONTH_OF_YEAR","date","curDateMon","parseInt","isCurrent","push","mode","formattedDate","filterDate","formattedFilterDate","isShowWeekend","createMonthCellsData","month","daysArr","begin","startOf","toDate","end","endOf","beginDateColIndex","arr","createCellData","belongTo","weekOrder","i","length","isSame","nextMonthCellNum","createDefaultCurDate"],"mappings":"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"}