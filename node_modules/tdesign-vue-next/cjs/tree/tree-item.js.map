{"version":3,"file":"tree-item.js","sources":["../../src/tree/tree-item.tsx"],"sourcesContent":["import { computed, h, defineComponent, ref, PropType, inject, reactive } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport { CaretRightSmallIcon as TdCaretRightSmallIcon } from 'tdesign-icons-vue-next';\nimport TCheckBox from '../checkbox';\nimport TLoading from '../loading';\n\nimport { getTNode } from './util';\nimport { TypeEventState, TreeNodeModel } from './interface';\nimport { useCLASSNAMES, injectKey } from './constants';\nimport TreeNode from '../_common/js/tree/tree-node';\n\nimport useRipple from '../hooks/useRipple';\nimport { useConfig } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\n\nimport useDraggable from './hooks/useDraggable';\n\nexport default defineComponent({\n  name: 'TTreeNode',\n  props: {\n    node: {\n      type: Object as PropType<TreeNode>,\n    },\n    onClick: Function as PropType<(e: TypeEventState) => void>,\n    onChange: Function as PropType<(e: TypeEventState) => void>,\n    onDrop: Function as PropType<(node: TreeNode, val: number, e: DragEvent) => void>,\n    onDragStart: Function as PropType<(node: TreeNode, e: DragEvent) => void>,\n  },\n  setup(props) {\n    const treeScope = inject(injectKey);\n    const label = ref<HTMLElement>();\n    useRipple(label);\n\n    const CLASS_NAMES = useCLASSNAMES();\n\n    const { globalConfig } = useConfig('tree');\n    const { CaretRightSmallIcon } = useGlobalIcon({ CaretRightSmallIcon: TdCaretRightSmallIcon });\n\n    const handleClick = (evt: MouseEvent) => {\n      const { node } = props;\n\n      const state: TypeEventState = {\n        mouseEvent: evt,\n        event: evt,\n        node,\n        path: node.getPath(),\n      };\n      props.onClick?.(state);\n    };\n\n    const nodeRef = ref<HTMLElement>();\n    const { isDragOver, isDragging, dropPosition, setDragStatus } = useDraggable(\n      reactive({ nodeRef, node: props.node }),\n    );\n\n    const handleDragStart = (evt: DragEvent) => {\n      const { node } = props;\n      if (!node.isDraggable()) return;\n      evt.stopPropagation();\n      setDragStatus('dragStart', evt);\n\n      try {\n        // ie throw error firefox-need-it\n        evt.dataTransfer?.setData('text/plain', '');\n      } catch (e) {\n        // empty\n      }\n      props.onDragStart?.(node, evt);\n    };\n\n    const handleDragEnd = (evt: DragEvent) => {\n      const { node } = props;\n      if (!node.isDraggable()) return;\n      evt.stopPropagation();\n      setDragStatus('dragEnd', evt);\n    };\n\n    const handleDragOver = (evt: DragEvent) => {\n      const { node } = props;\n      if (!node.isDraggable()) return;\n      evt.stopPropagation();\n      evt.preventDefault();\n      setDragStatus('dragOver', evt);\n    };\n\n    const handleDragLeave = (evt: DragEvent) => {\n      const { node } = props;\n      if (!node.isDraggable()) return;\n      evt.stopPropagation();\n      setDragStatus('dragLeave', evt);\n    };\n\n    const handleDrop = (evt: DragEvent) => {\n      const { node } = props;\n      if (!node.isDraggable()) return;\n      evt.stopPropagation();\n      evt.preventDefault();\n      setDragStatus('drop', evt);\n      props.onDrop?.(node, dropPosition.value, evt);\n    };\n\n    const handleChange = () => {\n      const { node } = props;\n      const event = new Event('change');\n      const state: TypeEventState = {\n        event,\n        node,\n      };\n      props.onChange?.(state);\n    };\n\n    const itemStyles = computed(() => {\n      const { level } = props.node;\n      const styles = `--level: ${level};`;\n      return styles;\n    });\n\n    const itemClassList = computed(() => {\n      const { node } = props;\n      const list = [];\n      list.push(CLASS_NAMES.value.treeNode);\n      list.push({\n        [CLASS_NAMES.value.treeNodeOpen]: node.expanded,\n        [CLASS_NAMES.value.actived]: node.isActivable() ? node.actived : false,\n        [CLASS_NAMES.value.disabled]: node.isDisabled(),\n      });\n      // 拖拽相关 class\n      list.push({\n        [CLASS_NAMES.value.treeNodeDraggable]: node.isDraggable(),\n        [CLASS_NAMES.value.treeNodeDragging]: isDragging.value,\n        [CLASS_NAMES.value.treeNodeDragTipTop]: isDragOver.value && dropPosition.value < 0,\n        [CLASS_NAMES.value.treeNodeDragTipBottom]: isDragOver.value && dropPosition.value > 0,\n        [CLASS_NAMES.value.treeNodeDragTipHighlight]: !isDragging.value && isDragOver.value && dropPosition.value === 0,\n      });\n      return list;\n    });\n\n    const renderLine = () => {\n      const { node } = props;\n      const { line, scopedSlots } = treeScope.value;\n      const iconVisible = !!treeScope.value.icon;\n\n      let lineNode = null;\n      if (line === true) {\n        if (scopedSlots?.line) {\n          lineNode = scopedSlots.line({\n            node: node?.getModel(),\n          });\n        } else if (node.parent && node.tree) {\n          const { vmIsLeaf, vmIsFirst, level } = node;\n\n          const lineClasses = [];\n\n          // 每个节点绘制抵达上一层级的折线\n          lineClasses.push(CLASS_NAMES.value.line);\n\n          // 叶子节点，折线宽度延长，因为没有 icon 呈现\n          // 任意节点，icon 不呈现时也是要延长折线宽度\n          if (vmIsLeaf || !iconVisible) {\n            lineClasses.push(CLASS_NAMES.value.lineIsLeaf);\n          }\n\n          // 分支首节点，到上一节点的折线高度要缩短，让位给 icon 呈现\n          // 如果 icon 隐藏了，则不必缩短折线高度\n          if (vmIsFirst && iconVisible) {\n            lineClasses.push(CLASS_NAMES.value.lineIsFirst);\n          }\n\n          // 如果节点的父节点，不是最后的节点\n          // 则需要绘制节点延长线\n          const shadowStyles: string[] = [];\n          const parents = node.getParents();\n          parents.pop();\n          parents.forEach((pNode: TreeNode, index: number) => {\n            if (!pNode.vmIsLast) {\n              shadowStyles.push(`calc(-${index + 1} * var(--space)) 0 var(--color)`);\n            }\n          });\n\n          const styles = {\n            '--level': level,\n            'box-shadow': shadowStyles.join(','),\n          };\n\n          lineNode = <span class={lineClasses} style={styles}></span>;\n        }\n      } else {\n        lineNode = getTNode(line, {\n          node,\n        });\n      }\n      return lineNode;\n    };\n\n    const renderIcon = () => {\n      const getFolderIcon = () => {\n        if (isFunction(globalConfig.value.folderIcon)) {\n          return globalConfig.value.folderIcon(h);\n        }\n        return <CaretRightSmallIcon />;\n      };\n\n      const { node } = props;\n      const { icon, scopedSlots } = treeScope.value;\n      let isDefaultIcon = false;\n\n      let iconNode = null;\n      if (icon === true) {\n        if (scopedSlots?.icon) {\n          iconNode = scopedSlots.icon({\n            node: node?.getModel(),\n          });\n        } else if (!node.vmIsLeaf) {\n          isDefaultIcon = true;\n          iconNode = getFolderIcon();\n          if (node.loading && node.expanded) {\n            iconNode = <TLoading />;\n          }\n        } else {\n          iconNode = '';\n        }\n      } else {\n        iconNode = getTNode(icon, {\n          node,\n        });\n      }\n      iconNode = (\n        <span\n          class={[\n            CLASS_NAMES.value.treeIcon,\n            CLASS_NAMES.value.folderIcon,\n            isDefaultIcon ? CLASS_NAMES.value.treeIconDefault : '',\n          ]}\n          trigger=\"expand\"\n          ignore=\"active\"\n        >\n          {iconNode}\n        </span>\n      );\n\n      return iconNode;\n    };\n\n    const renderLabel = () => {\n      const { node } = props;\n      const { label, scopedSlots, disableCheck } = treeScope.value;\n      const checkProps = treeScope.value.checkProps || {};\n\n      let labelNode = null;\n      if (label === true) {\n        if (scopedSlots.label) {\n          labelNode = scopedSlots.label({\n            node: node.getModel(),\n          });\n        } else {\n          labelNode = node.label || '';\n        }\n      } else {\n        labelNode = getTNode(label, {\n          node,\n        });\n      }\n\n      const labelClasses = [\n        CLASS_NAMES.value.treeLabel,\n        CLASS_NAMES.value.treeLabelStrictly,\n        {\n          [CLASS_NAMES.value.actived]: node.isActivable() ? node.actived : false,\n        },\n      ];\n\n      if (node.vmCheckable) {\n        let checkboxDisabled = false;\n        if (typeof disableCheck === 'function') {\n          checkboxDisabled = disableCheck(node as TreeNodeModel & TreeNode);\n        } else {\n          checkboxDisabled = !!disableCheck;\n        }\n        if (node.isDisabled()) {\n          checkboxDisabled = true;\n        }\n        const itemCheckProps = {\n          ...checkProps,\n          disabled: checkboxDisabled,\n        };\n\n        labelNode = (\n          <TCheckBox\n            class={labelClasses}\n            checked={node.checked}\n            indeterminate={node.indeterminate}\n            disabled={node.isDisabled()}\n            name={node.value.toString()}\n            onChange={() => handleChange()}\n            ignore=\"expand\"\n            needRipple={true}\n            {...itemCheckProps}\n          >\n            {labelNode}\n          </TCheckBox>\n        );\n      } else {\n        const inner = <span style=\"position: relative\">{labelNode}</span>;\n        labelNode = node.isActivable() ? ( // 使用key是为了避免元素复用，从而顺利移除ripple指令\n          <span key=\"1\" ref=\"label\" class={labelClasses}>\n            {inner}\n          </span>\n        ) : (\n          <span key=\"2\" class={labelClasses}>\n            {inner}\n          </span>\n        );\n      }\n\n      return labelNode;\n    };\n\n    const renderOperations = () => {\n      const { node } = props;\n      const { operations, scopedSlots } = treeScope.value;\n\n      let opNode = null;\n      if (scopedSlots?.operations) {\n        opNode = scopedSlots.operations({\n          node: node?.getModel(),\n        });\n      } else {\n        opNode = getTNode(operations, {\n          node,\n        });\n      }\n      if (opNode) {\n        opNode = (\n          <span class={CLASS_NAMES.value.treeOperations} ignore=\"active,expand\">\n            {opNode}\n          </span>\n        );\n      }\n      return opNode;\n    };\n\n    return () => {\n      const { node } = props;\n\n      return (\n        <div\n          ref={nodeRef}\n          class={itemClassList.value}\n          data-value={node.value}\n          data-level={node.level}\n          style={itemStyles.value}\n          onClick={(evt: MouseEvent) => handleClick(evt)}\n          draggable={node.isDraggable()}\n          onDragstart={(evt: DragEvent) => handleDragStart(evt)}\n          onDragend={(evt: DragEvent) => handleDragEnd(evt)}\n          onDragover={(evt: DragEvent) => handleDragOver(evt)}\n          onDragleave={(evt: DragEvent) => handleDragLeave(evt)}\n          onDrop={(evt: DragEvent) => handleDrop(evt)}\n        >\n          {renderLine()}\n          {renderIcon()}\n          {renderLabel()}\n          {renderOperations()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","node","type","Object","onClick","Function","onChange","onDrop","onDragStart","setup","treeScope","inject","injectKey","label","ref","useRipple","CLASS_NAMES","useCLASSNAMES","useConfig","globalConfig","useGlobalIcon","CaretRightSmallIcon","TdCaretRightSmallIcon","handleClick","evt","state","mouseEvent","event","path","getPath","nodeRef","useDraggable","reactive","isDragOver","isDragging","dropPosition","setDragStatus","handleDragStart","isDraggable","stopPropagation","dataTransfer","setData","e","handleDragEnd","handleDragOver","preventDefault","handleDragLeave","handleDrop","value","handleChange","Event","itemStyles","computed","level","styles","itemClassList","list","push","treeNode","_defineProperty","treeNodeOpen","expanded","actived","isActivable","disabled","isDisabled","treeNodeDraggable","treeNodeDragging","treeNodeDragTipTop","treeNodeDragTipBottom","treeNodeDragTipHighlight","renderLine","line","scopedSlots","iconVisible","icon","lineNode","getModel","parent","tree","vmIsLeaf","vmIsFirst","lineClasses","lineIsLeaf","lineIsFirst","shadowStyles","parents","getParents","pop","forEach","pNode","index","vmIsLast","join","_createVNode","getTNode","renderIcon","getFolderIcon","isFunction","folderIcon","h","isDefaultIcon","iconNode","loading","TLoading","treeIcon","treeIconDefault","renderLabel","disableCheck","checkProps","labelNode","labelClasses","treeLabel","treeLabelStrictly","vmCheckable","checkboxDisabled","itemCheckProps","TCheckBox","_mergeProps","checked","indeterminate","toString","inner","renderOperations","operations","opNode","treeOperations"],"mappings":"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"}