{"version":3,"file":"useOnDrag.js","sources":["../../../src/tree/hooks/useOnDrag.ts"],"sourcesContent":["import { ref, Ref, provide, getCurrentInstance } from 'vue';\nimport TreeStore from '../../_common/js/tree/tree-store';\nimport TreeNode from '../../_common/js/tree/tree-node';\nimport { dragInjectKey } from '../constants';\n\nexport default function useOnDrag(treeStore: Ref<TreeStore>) {\n  const dragNode = ref<TreeNode>();\n  const { emit } = getCurrentInstance();\n\n  const onDragStart = (context: { node: TreeNode; e: DragEvent }) => {\n    dragNode.value = context.node;\n    emit?.('dragStart', context);\n  };\n\n  const onDragEnd = (context: { node: TreeNode; e: DragEvent }) => {\n    dragNode.value = context.node;\n    emit?.('dragEnd', context);\n  };\n\n  const onDragOver = (context: { node: TreeNode; e: DragEvent }) => {\n    emit?.('dragOver', context);\n  };\n\n  const onDragLeave = (context: { node: TreeNode; e: DragEvent }) => {\n    emit?.('dragLeave', context);\n  };\n\n  const onDrop = (context: { node: TreeNode; dropPosition: number; e: DragEvent }) => {\n    const { node, dropPosition } = context;\n    if (node.value === dragNode.value.value || node.getParents().some((_node) => _node.value === dragNode.value.value))\n      return;\n\n    const nodes = treeStore.value.getNodes() as TreeNode[];\n    nodes.some((_node, _index) => {\n      if (_node.value === node.value) {\n        if (dropPosition === 0) {\n          dragNode.value.appendTo(treeStore.value, _node);\n        } else if (dropPosition < 0) {\n          node.insertBefore(dragNode.value);\n        } else {\n          node.insertAfter(dragNode.value);\n        }\n        return true;\n      }\n      return false;\n    });\n    emit?.('drop', context);\n  };\n  provide(dragInjectKey, {\n    onDragStart,\n    onDragEnd,\n    onDragOver,\n    onDragLeave,\n    onDrop,\n  });\n}\n"],"names":["useOnDrag","treeStore","dragNode","ref","getCurrentInstance","emit","onDragStart","context","value","node","onDragEnd","onDragOver","onDragLeave","onDrop","dropPosition","getParents","some","_node","nodes","getNodes","_index","appendTo","insertBefore","insertAfter","provide","dragInjectKey"],"mappings":"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"}