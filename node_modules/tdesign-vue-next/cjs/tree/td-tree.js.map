{"version":3,"file":"td-tree.js","sources":["../../src/tree/td-tree.tsx"],"sourcesContent":["import { computed, defineComponent, TransitionGroup, provide } from 'vue';\n\nimport props from './props';\nimport { useConfig } from '../hooks/useConfig';\nimport { useTNodeDefault } from '../hooks/tnode';\nimport { useCLASSNAMES, injectKey } from './constants';\nimport useTree from './useTree';\nimport useExposeFunc from './hooks/useExposeFunc';\n\nexport default defineComponent({\n  name: 'TTree',\n  props,\n  setup(props, { expose, slots }) {\n    const { globalConfig, t } = useConfig('tree');\n    const CLASS_NAMES = useCLASSNAMES();\n    const renderTNodeJSX = useTNodeDefault();\n\n    // 向子组件传递的状态\n    const statusContext = computed(() => {\n      const { checkProps, empty, icon, label, line, disableCheck, operations } = props;\n      return {\n        checkProps,\n        empty,\n        icon,\n        label,\n        line,\n        disableCheck,\n        operations,\n        scopedSlots: slots,\n      };\n    });\n    provide(injectKey, statusContext);\n\n    // tree核心逻辑\n    const { treeStore, treeNodeViews } = useTree(props);\n\n    // 导出方法\n    useExposeFunc(treeStore, expose);\n\n    const classList = computed(() => [\n      CLASS_NAMES.value.tree,\n      {\n        [CLASS_NAMES.value.disabled]: props.disabled,\n        [CLASS_NAMES.value.treeHoverAble]: props.hover,\n        [CLASS_NAMES.value.treeCheckable]: props.checkable,\n        [CLASS_NAMES.value.treeTransition]: props.transition,\n        [CLASS_NAMES.value.treeBlockNode]: props.expandOnClickNode,\n      },\n    ]);\n\n    return () => (\n      <div class={classList.value}>\n        {treeNodeViews.value.length === 0 ? (\n          <div class={CLASS_NAMES.value.treeEmpty}>\n            {renderTNodeJSX('empty', {\n              defaultNode: t(globalConfig.value.empty),\n            })}\n          </div>\n        ) : (\n          <TransitionGroup\n            name={CLASS_NAMES.value.treeNodeToggle}\n            tag=\"div\"\n            enter-active-class={CLASS_NAMES.value.treeNodeEnter}\n            leave-active-class={CLASS_NAMES.value.treeNodeLeave}\n          >\n            {treeNodeViews.value}\n          </TransitionGroup>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","expose","slots","useConfig","globalConfig","t","CLASS_NAMES","useCLASSNAMES","renderTNodeJSX","useTNodeDefault","statusContext","computed","checkProps","empty","icon","label","line","disableCheck","operations","scopedSlots","provide","injectKey","useTree","treeStore","treeNodeViews","useExposeFunc","classList","value","tree","_defineProperty","disabled","treeHoverAble","hover","treeCheckable","checkable","treeTransition","transition","treeBlockNode","expandOnClickNode","_createVNode","length","treeEmpty","defaultNode","TransitionGroup","treeNodeToggle","treeNodeEnter","treeNodeLeave"],"mappings":"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"}