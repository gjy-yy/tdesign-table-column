{"version":3,"file":"single-panel.js","sources":["../../../src/time-picker/panel/single-panel.tsx"],"sourcesContent":["import { computed, defineComponent, ref, watch, toRefs, onMounted, reactive, nextTick } from 'vue';\nimport debounce from 'lodash/debounce';\nimport range from 'lodash/range';\nimport padStart from 'lodash/padStart';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\n\nimport { panelColProps } from './props';\nimport {\n  EPickerCols,\n  TWELVE_HOUR_FORMAT,\n  TIME_FORMAT,\n  AM,\n  PM,\n  MERIDIEM_LIST,\n} from '../../_common/js/time-picker/const';\nimport { closestLookup } from '../../_common/js/time-picker/utils';\nimport { useConfig } from '../../hooks/useConfig';\n\ndayjs.extend(customParseFormat);\n\nconst timeArr = [EPickerCols.hour, EPickerCols.minute, EPickerCols.second, EPickerCols.milliSecond];\n\nconst panelOffset = {\n  top: 15,\n  bottom: 21,\n};\n\nexport default defineComponent({\n  name: 'TTimePickerPanelCol',\n  props: {\n    ...panelColProps(),\n    position: String,\n    triggerScroll: Boolean,\n    onChange: Function,\n    resetTriggerScroll: Function,\n  },\n\n  setup(props) {\n    const { steps, value, format, position, triggerScroll } = toRefs(props);\n\n    const { globalConfig } = useConfig('timePicker');\n\n    const { classPrefix } = useConfig();\n\n    const cols = ref<Array<EPickerCols>>([]);\n    const bodyRef = ref();\n    const maskRef = ref(null);\n    // 每个滚动列的ref 顺序不定 所以只要有5列标识即可\n    const colsRef = reactive({ 0: null, 1: null, 2: null, 3: null, 4: null, 5: null });\n\n    const dayjsValue = computed(() => {\n      const isStepsSet = !!steps.value.filter((v) => v > 1).length;\n\n      if (value.value) return dayjs(value.value, format.value);\n\n      if (isStepsSet) return dayjs().hour(0).minute(0).second(0);\n\n      return dayjs();\n    });\n\n    const panelClassName = computed(() => `${classPrefix.value}-time-picker__panel`);\n\n    // 面板打开时 触发滚动 初始化面板\n    watch(\n      () => dayjsValue.value,\n      () => {\n        if (dayjsValue.value) updateTimeScrollPos(true);\n      },\n    );\n\n    // 时间通过外部触发时 同样触发滚动\n    watch(\n      () => triggerScroll.value,\n      () => {\n        if (triggerScroll.value) {\n          updateTimeScrollPos(true);\n        }\n      },\n    );\n\n    onMounted(() => {\n      const match = format.value.match(TIME_FORMAT);\n\n      const [, startCol, hourCol, minuteCol, secondCol, milliSecondCol, endCol] = match;\n      const { meridiem, hour, minute, second, milliSecond } = EPickerCols;\n\n      const renderCol = [\n        startCol && meridiem,\n        hourCol && hour,\n        minuteCol && minute,\n        secondCol && second,\n        milliSecondCol && milliSecond,\n        endCol && meridiem,\n      ].filter((v) => !!v);\n\n      cols.value = renderCol;\n    });\n\n    // 获取每个时间的高度\n    const getItemHeight = () => {\n      const maskDom = maskRef.value?.querySelector('div');\n      if (!maskDom) {\n        return {\n          offsetHeight: 0,\n          margin: 0,\n        };\n      }\n      return {\n        offsetHeight: maskDom.offsetHeight,\n        margin: parseInt(getComputedStyle(maskDom).marginTop, 10),\n      };\n    };\n\n    const timeItemCanUsed = (col: EPickerCols, el: string | number) => {\n      const colIdx = timeArr.indexOf(col);\n      if (colIdx !== -1) {\n        const params: [number, number, number] = [\n          dayjsValue.value.hour(),\n          dayjsValue.value.minute(),\n          dayjsValue.value.second(),\n        ];\n        params[colIdx] = Number(el);\n        return !props.disableTime?.(...params, { partial: position.value || 'start' })?.[col]?.includes(Number(el));\n      }\n      return true;\n    };\n\n    // 获取需要渲染的column\n    const getColList = (col: EPickerCols) => {\n      let count = 0;\n\n      if (timeArr.includes(col)) {\n        // hour、minute and second columns\n        const colIdx = timeArr.indexOf(col);\n        const colStep = steps.value[colIdx] || 1;\n\n        if (col === EPickerCols.hour)\n          count = TWELVE_HOUR_FORMAT.test(format.value) ? 11 : 23; // 小时最大为23 12小时制最大为11\n        else if (col === EPickerCols.milliSecond) count = 999; // 毫秒最大为999\n        else count = 59;\n\n        const colList = range(0, count + 1, Number(colStep)).map((v) => padStart(String(v), 2, '0')) || [];\n        return props.hideDisabledTime && !!props.disableTime\n          ? colList.filter((t) => {\n              const params: [number, number, number] = [\n                dayjsValue.value.hour(),\n                dayjsValue.value.minute(),\n                dayjsValue.value.second(),\n              ];\n              params[colIdx] = Number(t);\n              return !props\n                .disableTime?.(...params, { partial: position.value || 'start' })\n                ?.[col]?.includes(Number(t));\n            })\n          : colList;\n      }\n      // meridiem column\n      return MERIDIEM_LIST;\n    };\n\n    const getScrollDistance = (col: EPickerCols, time: number | string) => {\n      if (col === EPickerCols.hour && /[h]{1}/.test(format.value))\n        // eslint-disable-next-line no-param-reassign\n        (time as number) %= 12; // 一定是数字，直接cast\n\n      const itemIdx = getColList(col).indexOf(padStart(String(time), 2, '0'));\n      const { offsetHeight, margin } = getItemHeight();\n      const timeItemTotalHeight = offsetHeight + margin;\n      const distance = Math.abs(Math.max(0, itemIdx) * timeItemTotalHeight);\n      return distance;\n    };\n\n    const handleScroll = (col: EPickerCols, idx: number) => {\n      let val: number | string;\n      let formattedVal: string;\n      const scrollTop = colsRef[idx]?.scrollTop;\n      const { offsetHeight, margin } = getItemHeight();\n      const timeItemTotalHeight = offsetHeight + margin;\n      let colStep = Math.abs(Math.round(scrollTop / timeItemTotalHeight + 0.5));\n\n      const meridiem = MERIDIEM_LIST[Math.min(colStep - 1, 1)].toLowerCase(); // 处理PM、AM与am、pm\n\n      if (Number.isNaN(colStep)) colStep = 1;\n      if (timeArr.includes(col)) {\n        // hour、minute、 second and milliSecond\n        let max = 59;\n        if (col === EPickerCols.hour) max = /[h]{1}/.test(format.value) ? 11 : 23; // 小时最大为23 12小时制最大为11\n        else if (col === EPickerCols.milliSecond) max = 999; // 毫秒最大为999\n\n        const colIdx = timeArr.indexOf(col);\n        const availableArr = range(0, max + 1, Number(steps.value[colIdx]) || 1);\n        val = closestLookup(\n          availableArr,\n          Number(getColList(col)[Math.min(colStep - 1, max + 1, availableArr.length - 1)]),\n          Number(steps.value[colIdx]) || 1,\n        );\n        if (Number.isNaN(val)) val = availableArr[availableArr.length - 1];\n        if (col === EPickerCols.hour && cols.value.includes(EPickerCols.meridiem) && dayjsValue.value.hour() >= 12) {\n          // 如果是十二小时制需要再判断\n          val = Number(val) + 12;\n        }\n      }\n      // meridiem columns\n      else val = meridiem;\n\n      const distance = getScrollDistance(col, val);\n      if (!dayjs(dayjsValue.value).isValid() || (value.value && !dayjs(value.value, format.value, true).isValid()))\n        return;\n\n      if (timeArr.includes(col)) {\n        if (timeItemCanUsed(col, val)) formattedVal = dayjsValue.value[col]?.(val).format(format.value);\n      } else {\n        const currentHour = dayjsValue.value.hour();\n        if (meridiem === AM && currentHour >= 12) {\n          formattedVal = dayjsValue.value.hour(currentHour - 12).format(format.value);\n        } else if (meridiem === PM && currentHour < 12) {\n          formattedVal = dayjsValue.value.hour(currentHour + 12).format(format.value);\n        } else {\n          formattedVal = dayjsValue.value.format(format.value);\n        }\n      }\n      if (formattedVal !== value.value) props.onChange?.(formattedVal);\n      if (distance !== scrollTop) {\n        const scrollCtrl = colsRef[cols.value.indexOf(col)];\n\n        if (!scrollCtrl || scrollCtrl.scrollTop === distance) return;\n\n        scrollCtrl.scrollTo?.({\n          top: distance,\n          behavior: 'smooth',\n        });\n      }\n    };\n\n    const scrollToTime = (\n      col: EPickerCols,\n      time: number | string,\n      idx: number,\n      behavior: 'auto' | 'smooth' = 'auto',\n    ) => {\n      const distance = getScrollDistance(col, time);\n      const scrollCtrl = colsRef[idx];\n      if (!scrollCtrl || scrollCtrl.scrollTop === distance || !timeItemCanUsed(col, time)) return;\n\n      scrollCtrl.scrollTo?.({\n        top: distance,\n        behavior,\n      });\n    };\n\n    const handleTimeItemClick = (col: EPickerCols, el: string | number, idx: number) => {\n      if (!timeItemCanUsed(col, el)) return;\n      if (timeArr.includes(col)) {\n        if (\n          col === EPickerCols.hour &&\n          dayjsValue.value.format('a') === PM &&\n          cols.value.includes(EPickerCols.meridiem)\n        ) {\n          // eslint-disable-next-line no-param-reassign\n          el = Number(el) + 12;\n        }\n        scrollToTime(col, el, idx, 'smooth');\n      } else {\n        const currentHour = dayjsValue.value.hour();\n        if (el === AM && currentHour >= 12) {\n          props.onChange(dayjsValue.value.hour(currentHour - 12).format(format.value));\n        } else if (el === PM && currentHour < 12) {\n          props.onChange(dayjsValue.value.hour(currentHour + 12).format(format.value));\n        }\n      }\n    };\n\n    // update each columns scroll distance\n    const updateTimeScrollPos = (isAutoScroll = false) => {\n      const behavior = value.value && !isAutoScroll ? 'smooth' : 'auto';\n      const isStepsSet = !!steps.value.filter((v) => v > 1).length;\n      nextTick(() => {\n        cols.value.forEach((col: EPickerCols, idx: number) => {\n          if (!isStepsSet || (isStepsSet && value.value)) {\n            // 如果没有设置大于1的steps或设置了大于1的step 正常处理滚动\n            scrollToTime(\n              col,\n              timeArr.includes(col) ? dayjsValue.value[col]?.() : dayjsValue.value.format('a'),\n              idx,\n              behavior,\n            );\n          } else {\n            // 否则初始化到每列第一个选项\n            scrollToTime(col, getColList(col)?.[0], idx, behavior);\n          }\n        });\n      });\n\n      props.resetTriggerScroll();\n    };\n\n    const isCurrent = (col: EPickerCols, colItem: string | number) => {\n      let colVal: number;\n      if (col === EPickerCols.meridiem) {\n        const currentMeridiem = dayjsValue.value.format('a');\n        return currentMeridiem === colItem;\n      }\n      colVal = dayjsValue.value[col]?.();\n      if (col === EPickerCols.hour && /[h]{1}/.test(format.value)) {\n        colVal %= 12;\n      }\n      return colVal === Number(colItem);\n    };\n\n    return () => (\n      <div class={`${panelClassName.value}-body`} ref={bodyRef}>\n        <div class={`${panelClassName.value}-body-active-mask`} ref={maskRef}>\n          {/* 渲染遮罩层 */}\n          {cols.value.map?.((col, idx) => (\n            <div key={`${col}_${idx}`} />\n          ))}\n        </div>\n        {/* 渲染实际滚动列 */}\n        {cols.value.map?.((col, idx) => (\n          <ul\n            key={`${col}_${idx}`}\n            ref={(el) => (colsRef[idx] = el)}\n            class={`${panelClassName.value}-body-scroll`}\n            onScroll={debounce(() => handleScroll(col, idx), 50)}\n            style={{\n              '--timePickerPanelOffsetTop': panelOffset.top,\n              '--timePickerPanelOffsetBottom': panelOffset.bottom,\n            }}\n          >\n            {getColList(col).map((el) => (\n              <li\n                key={el}\n                class={[\n                  `${panelClassName.value}-body-scroll-item`,\n                  {\n                    [`${classPrefix.value}-is-disabled`]: !timeItemCanUsed(col, el),\n                    [`${classPrefix.value}-is-current`]: isCurrent(col, el),\n                  },\n                ]}\n                onClick={() => handleTimeItemClick(col, el, idx)}\n              >\n                {/* eslint-disable-next-line no-nested-ternary */}\n                {timeArr.includes(col)\n                  ? TWELVE_HOUR_FORMAT.test(format.value) && el === '00'\n                    ? '12'\n                    : el\n                  : globalConfig.value[el === AM ? 'anteMeridiem' : 'postMeridiem']}\n              </li>\n            ))}\n          </ul>\n        ))}\n      </div>\n    );\n  },\n});\n"],"names":["dayjs","extend","customParseFormat","timeArr","EPickerCols","hour","minute","second","milliSecond","panelOffset","top","bottom","defineComponent","name","props","panelColProps","position","String","triggerScroll","Boolean","onChange","Function","resetTriggerScroll","setup","toRefs","steps","value","format","useConfig","globalConfig","classPrefix","cols","ref","bodyRef","maskRef","colsRef","reactive","dayjsValue","computed","isStepsSet","filter","v","length","panelClassName","watch","updateTimeScrollPos","onMounted","match","TIME_FORMAT","_slicedToArray","startCol","hourCol","minuteCol","secondCol","milliSecondCol","endCol","meridiem","renderCol","getItemHeight","maskDom","querySelector","offsetHeight","margin","parseInt","getComputedStyle","marginTop","timeItemCanUsed","col","el","colIdx","indexOf","params","Number","disableTime","partial","includes","getColList","count","colStep","TWELVE_HOUR_FORMAT","test","colList","range","map","padStart","hideDisabledTime","t","MERIDIEM_LIST","getScrollDistance","time","itemIdx","timeItemTotalHeight","distance","Math","abs","max","handleScroll","idx","val","formattedVal","scrollTop","round","min","toLowerCase","isNaN","availableArr","closestLookup","isValid","currentHour","AM","PM","scrollCtrl","scrollTo","behavior","scrollToTime","handleTimeItemClick","isAutoScroll","nextTick","forEach","isCurrent","colItem","colVal","currentMeridiem","_createVNode","debounce","_defineProperty"],"mappings":"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"}