{"version":3,"file":"transfer.js","sources":["../../src/transfer/transfer.tsx"],"sourcesContent":["import { defineComponent, computed, toRefs } from 'vue';\nimport pick from 'lodash/pick';\nimport TransferList from './components/transfer-list';\nimport TransferOperations from './components/transfer-operations';\nimport { TransferListType, CheckedOptions, TransferValue, EmptyType, TargetParams, SearchEvent } from './interface';\n\nimport { getTransferListOption, getDataValues, getTransferData, filterTransferData, TRANSFER_NAME } from './utils';\nimport { PageInfo, TdPaginationProps } from '../pagination/type';\nimport props from './props';\nimport { TNode } from '../common';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass } from '../hooks/useConfig';\n\nconst SOURCE = 'source';\nconst TARGET = 'target';\n\nexport default defineComponent({\n  name: TRANSFER_NAME,\n  props: { ...props },\n\n  setup(props, { slots }) {\n    const disabled = useFormDisabled();\n    const classPrefix = usePrefixClass();\n    const { value, modelValue, checked } = toRefs(props);\n    const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const [innerChecked] = useDefaultValue(checked, props.defaultChecked, props.onCheckedChange, 'checked');\n    const valueList = computed(() => innerValue.value);\n\n    const isTreeMode = computed(() => {\n      const treeSlot = slots.tree;\n      return typeof treeSlot === 'function';\n    });\n\n    const leftButtonDisabled = computed(() => props.direction === 'right');\n    const rightButtonDisabled = computed(() => props.direction === 'left');\n    // props 传入的 data 格式化后的数据\n    const transferData = computed(() => {\n      return getTransferData(props.data, props.keys, isTreeMode.value);\n    });\n    const sourceList = computed(() => {\n      return filterTransferData(transferData.value, valueList.value as TransferValue[], false, isTreeMode.value);\n    });\n    const targetList = computed(() => {\n      return filterTransferData(transferData.value, valueList.value as TransferValue[], true, isTreeMode.value);\n    });\n    // 被选中的value\n    const checkedValue = computed(() => {\n      return {\n        [SOURCE]: getDataValues(sourceList.value, innerChecked.value, { isTreeMode: isTreeMode.value }),\n        [TARGET]: getDataValues(targetList.value, innerChecked.value, { isTreeMode: isTreeMode.value }),\n      };\n    });\n    const hasFooter = computed(() => {\n      return !!slots.footer || !!props.footer;\n    });\n    const showPagination = computed(() => {\n      // 翻页在自定义列表无效\n      return !!props.pagination && !slots.content;\n    });\n    const showSearch = computed(() => {\n      // 翻页在自定义列表无效\n      return !!props.search;\n    });\n    const footerOption = computed(() => {\n      const footer = props.footer || '';\n      return getTransferListOption<string | Function>(footer);\n    });\n    const emptyOption = computed(() => {\n      return getTransferListOption<EmptyType>(props.empty);\n    });\n    const searchOption = computed(() => {\n      return getTransferListOption<boolean>(props.search);\n    });\n    const checkAllOption = computed(() => {\n      return getTransferListOption<boolean>(props.showCheckAll);\n    });\n    const disabledOption = computed(() => {\n      return getTransferListOption<boolean>(disabled.value);\n    });\n    const titleOption = computed(() => {\n      return getTransferListOption<string | TNode<{ type: TransferListType }>>(props.title);\n    });\n    const paginationOption = computed(() => {\n      return getTransferListOption<TdPaginationProps>(props.pagination);\n    });\n\n    const handleCheckedChange = (val: Array<TransferValue>, listType: TransferListType) => {\n      const sourceChecked = listType === SOURCE ? val : checkedValue.value[SOURCE];\n      const targetChecked = listType === TARGET ? val : checkedValue.value[TARGET];\n      const checked = [...sourceChecked, ...targetChecked];\n      const event: CheckedOptions = {\n        checked,\n        sourceChecked,\n        targetChecked,\n        type: listType,\n      };\n      // TODO onCheckedChange 参数有点不合理\n      innerChecked.value = checked;\n      props.onCheckedChange?.(event);\n    };\n\n    const transferTo = (toDirection: TransferListType) => {\n      const oldTargetValue: Array<TransferValue> = JSON.parse(JSON.stringify(valueList.value));\n      let newTargetValue: Array<TransferValue>;\n      const selfCheckedValue = toDirection === TARGET ? checkedValue.value[SOURCE] : checkedValue.value[TARGET];\n      // target->source\n      if (toDirection === SOURCE) {\n        newTargetValue = oldTargetValue.filter((v) => !selfCheckedValue.includes(v));\n      } else if (props.targetSort === 'original') {\n        // 按照原始顺序\n        newTargetValue = getDataValues(transferData.value, oldTargetValue.concat(selfCheckedValue), {\n          isTreeMode: isTreeMode.value,\n        });\n      } else if (props.targetSort === 'unshift') {\n        newTargetValue = selfCheckedValue.concat(oldTargetValue);\n      } else {\n        newTargetValue = oldTargetValue.concat(selfCheckedValue);\n      }\n\n      // 清空checked。与toDirection相反\n      handleCheckedChange([], toDirection === SOURCE ? TARGET : SOURCE);\n\n      const params: TargetParams = {\n        type: toDirection,\n        movedValue: selfCheckedValue,\n      };\n      setInnerValue(newTargetValue, params);\n    };\n\n    // 点击移到右边按钮触发的函数\n    const transferToRight = () => {\n      transferTo(TARGET);\n    };\n    // 点击移到左边按钮触发的函数\n    const transferToLeft = () => {\n      transferTo(SOURCE);\n    };\n\n    const handleScroll = (e: Event, listType: TransferListType) => {\n      const target = e.target as HTMLElement;\n      const bottomDistance = target.scrollHeight - target.scrollTop - target.clientHeight;\n      const event: { e: Event; bottomDistance: number; type: TransferListType } = {\n        e,\n        bottomDistance,\n        type: listType,\n      };\n      props.onScroll?.(event);\n    };\n    const handleSearch = (e: SearchEvent) => {\n      props.onSearch?.(e);\n    };\n    const handlePageChange = (pageInfo: PageInfo, listType: TransferListType) => {\n      props.onPageChange?.(pageInfo, { type: listType });\n    };\n    const renderTransferList = (listType: TransferListType) => {\n      const scopedSlots = pick(slots, ['title', 'empty', 'footer', 'operation', 'transferItem', 'default', 'tree']);\n      return (\n        <TransferList\n          checkboxProps={props.checkboxProps}\n          transferItem={props.transferItem}\n          list-type={listType}\n          title={titleOption.value[listType]}\n          data-source={listType === SOURCE ? sourceList.value : targetList.value}\n          checked-value={checkedValue.value[listType]}\n          disabled={disabledOption.value[listType]}\n          search={searchOption.value[listType]}\n          pagination={paginationOption.value[listType]}\n          check-all={checkAllOption.value[listType]}\n          footer={footerOption.value[listType]}\n          empty={emptyOption.value[listType]}\n          onCheckedChange={($event: any) => handleCheckedChange($event, listType)}\n          onScroll={($event: any) => handleScroll($event, listType)}\n          onSearch={handleSearch}\n          onPageChange={($event: any) => handlePageChange($event, listType)}\n          isTreeMode={isTreeMode.value}\n        >\n          {scopedSlots}\n        </TransferList>\n      );\n    };\n\n    return () => (\n      <div\n        class={[\n          `${classPrefix.value}-transfer`,\n          showSearch.value ? `${classPrefix.value}-transfer__search` : '',\n          hasFooter.value ? `${classPrefix.value}-transfer__footer` : '',\n          showPagination.value ? `${classPrefix.value}-transfer__pagination` : '',\n          isTreeMode.value ? `${classPrefix.value}-transfer--with-tree` : '',\n        ]}\n      >\n        {renderTransferList(SOURCE)}\n        <TransferOperations\n          leftDisabled={\n            disabledOption.value[TARGET] || leftButtonDisabled.value || checkedValue.value[TARGET].length === 0\n          }\n          rightDisabled={\n            disabledOption.value[SOURCE] || rightButtonDisabled.value || checkedValue.value[SOURCE].length === 0\n          }\n          operation={props.operation}\n          onMoveToRight={transferToRight}\n          onMoveToLeft={transferToLeft}\n          v-slots={{ operation: slots.operation }}\n        />\n        {renderTransferList(TARGET)}\n      </div>\n    );\n  },\n});\n"],"names":["SOURCE","TARGET","defineComponent","name","TRANSFER_NAME","props","setup","slots","disabled","useFormDisabled","classPrefix","usePrefixClass","toRefs","value","modelValue","checked","useVModel","defaultValue","onChange","_slicedToArray","innerValue","setInnerValue","useDefaultValue","defaultChecked","onCheckedChange","innerChecked","valueList","computed","isTreeMode","treeSlot","tree","leftButtonDisabled","direction","rightButtonDisabled","transferData","getTransferData","data","keys","sourceList","filterTransferData","targetList","checkedValue","getDataValues","_defineProperty","hasFooter","footer","showPagination","pagination","content","showSearch","search","footerOption","getTransferListOption","emptyOption","empty","searchOption","checkAllOption","showCheckAll","disabledOption","titleOption","title","paginationOption","handleCheckedChange","val","listType","sourceChecked","targetChecked","_toConsumableArray","event","type","transferTo","toDirection","oldTargetValue","JSON","parse","stringify","newTargetValue","selfCheckedValue","filter","v","includes","targetSort","concat","params","movedValue","transferToRight","transferToLeft","handleScroll","e","target","bottomDistance","scrollHeight","scrollTop","clientHeight","onScroll","handleSearch","onSearch","handlePageChange","pageInfo","onPageChange","renderTransferList","scopedSlots","pick","_createVNode","TransferList","checkboxProps","transferItem","$event","TransferOperations","length","operation"],"mappings":"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"}