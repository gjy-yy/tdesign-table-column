{"version":3,"file":"transfer-operations.js","sources":["../../../src/transfer/components/transfer-operations.tsx"],"sourcesContent":["import { defineComponent, createElementVNode, PropType, h } from 'vue';\nimport { ChevronRightIcon as TdChevronRightIcon, ChevronLeftIcon as TdChevronLeftIcon } from 'tdesign-icons-vue-next';\n\nimport Button from '../../button';\nimport { TNode } from '../../common';\nimport { usePrefixClass } from '../../hooks/useConfig';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\nimport props from '../props';\n\nexport default defineComponent({\n  name: 'TTransferOperations',\n  props: {\n    // 控制左按钮的禁用与否\n    leftDisabled: {\n      type: Boolean as PropType<boolean>,\n      required: true,\n    },\n    // 控制右按钮的禁用与否\n    rightDisabled: {\n      type: Boolean as PropType<boolean>,\n      required: true,\n    },\n    operation: props.operation,\n  },\n  emits: ['moveToRight', 'moveToLeft'],\n  setup(props, { slots, emit }) {\n    const classPrefix = usePrefixClass();\n    const { ChevronRightIcon, ChevronLeftIcon } = useGlobalIcon({\n      ChevronRightIcon: TdChevronRightIcon,\n      ChevronLeftIcon: TdChevronLeftIcon,\n    });\n    const moveToRight = () => {\n      emit('moveToRight');\n    };\n    const moveToLeft = () => {\n      emit('moveToLeft');\n    };\n    const getIconRight = () => {\n      return <ChevronRightIcon />;\n    };\n    const getIconLeft = () => {\n      return <ChevronLeftIcon />;\n    };\n    const getIcon = (direction: 'left' | 'right') => {\n      if (typeof props.operation === 'function') {\n        return null;\n      }\n      if (direction === 'right' && props.operation && typeof props.operation[0] === 'function') {\n        return null;\n      }\n      if (direction === 'left' && props.operation && typeof props.operation[1] === 'function') {\n        return null;\n      }\n\n      if (slots.operation) {\n        return null;\n      }\n\n      return direction === 'left' ? getIconLeft : getIconRight;\n    };\n    // right:去右边，left:去左边\n    const renderButton = (h: typeof createElementVNode, direction: 'left' | 'right') => {\n      if (typeof slots.operation === 'function') {\n        return slots.operation({\n          direction,\n        });\n      }\n      if (typeof props.operation === 'function') {\n        const renderContent = props.operation;\n        return renderContent(h as any, { direction });\n      }\n      let renderContent: string | TNode;\n      if (Array.isArray(props.operation)) {\n        const [left, right] = props.operation;\n        renderContent = direction === 'right' ? right : left;\n      } else {\n        renderContent = '';\n      }\n      return renderContent;\n    };\n\n    return () => (\n      <div class={`${classPrefix.value}-transfer__operations`}>\n        <Button\n          variant=\"outline\"\n          key={props.rightDisabled ? 'right-outline' : 'right-base'}\n          disabled={props.rightDisabled}\n          onClick={moveToRight}\n          icon={getIcon('right')}\n        >\n          {renderButton(h, 'right')}\n        </Button>\n        <Button\n          variant=\"outline\"\n          key={props.rightDisabled ? 'left-outline' : 'left-base'}\n          disabled={props.leftDisabled}\n          onClick={moveToLeft}\n          icon={getIcon('left')}\n        >\n          {renderButton(h, 'left')}\n        </Button>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","leftDisabled","type","Boolean","required","rightDisabled","operation","emits","setup","slots","emit","classPrefix","usePrefixClass","useGlobalIcon","ChevronRightIcon","TdChevronRightIcon","ChevronLeftIcon","TdChevronLeftIcon","moveToRight","moveToLeft","getIconRight","_createVNode","getIconLeft","getIcon","direction","renderButton","h","renderContent","Array","isArray","left","right","value","Button"],"mappings":"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"}