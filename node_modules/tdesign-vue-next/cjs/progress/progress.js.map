{"version":3,"file":"progress.js","sources":["../../src/progress/progress.tsx"],"sourcesContent":["import { defineComponent, VNode, computed, CSSProperties } from 'vue';\nimport {\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n  CloseIcon as TdCloseIcon,\n  CheckIcon as TdCheckIcon,\n  ErrorIcon as TdErrorIcon,\n} from 'tdesign-icons-vue-next';\n\nimport { getBackgroundColor } from '../utils/helper';\nimport { PRO_THEME, CIRCLE_SIZE, CIRCLE_SIZE_PX, STATUS_ICON, CIRCLE_FONT_SIZE_RATIO } from './constants';\nimport props from './props';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useTNodeJSX } from '../hooks/tnode';\n\nexport default defineComponent({\n  name: 'TProgress',\n  props,\n  setup(props) {\n    const renderTNodeJSX = useTNodeJSX();\n    const COMPONENT_NAME = usePrefixClass('progress');\n    const { CloseCircleFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseIcon, CheckIcon, ErrorIcon } =\n      useGlobalIcon({\n        CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n        CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n        ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n        CloseIcon: TdCloseIcon,\n        CheckIcon: TdCheckIcon,\n        ErrorIcon: TdErrorIcon,\n      });\n\n    const statusStyle = computed(() => {\n      if (props.percentage >= 100) {\n        return 'success';\n      }\n      return props.status || 'default';\n    });\n\n    const trackBgStyle = computed(() => {\n      const style: CSSProperties = {};\n      if (props.strokeWidth) {\n        const height = typeof props.strokeWidth === 'string' ? props.strokeWidth : `${props.strokeWidth}px`;\n        style.height = height;\n        style.borderRadius = height;\n      }\n      if (props.trackColor) {\n        style.backgroundColor = props.trackColor;\n      }\n      return style;\n    });\n\n    const barStyle = computed(() => {\n      return {\n        width: `${props.percentage}%`,\n        background: props.color && getBackgroundColor(props.color),\n      };\n    });\n\n    const circlePathStyle = computed(() => {\n      const strokeColor = typeof props.color === 'object' ? '' : props.color;\n      return {\n        stroke: strokeColor,\n      };\n    });\n\n    // theme=circle 获取直径\n    const diameter = computed(() => {\n      let diameter = CIRCLE_SIZE_PX.MEDIUM;\n      if (!props.size) {\n        return diameter;\n      }\n      const { SMALL, LARGE, MEDIUM } = CIRCLE_SIZE;\n      switch (props.size) {\n        case SMALL:\n          diameter = CIRCLE_SIZE_PX.SMALL;\n          break;\n        case MEDIUM:\n          diameter = CIRCLE_SIZE_PX.MEDIUM;\n          break;\n        case LARGE:\n          diameter = CIRCLE_SIZE_PX.LARGE;\n          break;\n        default:\n          diameter = Number(props.size);\n          break;\n      }\n      return diameter;\n    });\n\n    const rPoints = computed(() => {\n      return diameter.value / 2;\n    });\n\n    const radius = computed(() => {\n      return rPoints.value - circleStrokeWidth.value / 2;\n    });\n\n    const circleStyle = computed(() => {\n      if (props.theme !== PRO_THEME.CIRCLE) {\n        return {};\n      }\n\n      let fontSize = diameter.value * CIRCLE_FONT_SIZE_RATIO.MEDIUM;\n      if (diameter.value <= CIRCLE_SIZE_PX.SMALL) {\n        fontSize = diameter.value * CIRCLE_FONT_SIZE_RATIO.SMALL;\n      } else if (diameter.value >= CIRCLE_SIZE_PX.LARGE) {\n        fontSize = diameter.value * CIRCLE_FONT_SIZE_RATIO.LARGE;\n      }\n\n      return {\n        width: `${diameter.value}px`,\n        height: `${diameter.value}px`,\n        fontSize: `${fontSize}px`,\n      };\n    });\n\n    const circleStrokeWidth = computed(() => {\n      const defaultWidth = props.size === CIRCLE_SIZE.SMALL ? 4 : 6;\n      return props.strokeWidth ? Number(props.strokeWidth) : defaultWidth;\n    });\n\n    const strokeDashArr = computed(() => {\n      const radius = (diameter.value - circleStrokeWidth.value) / 2;\n      const perimeter = Math.PI * 2 * radius;\n      const percent = props.percentage / 100;\n      return `${perimeter * percent}  ${perimeter * (1 - percent)}`;\n    });\n\n    const getIconMap = () => {\n      const CIRCLE_ICONS = {\n        success: CheckIcon,\n        warning: ErrorIcon,\n        error: CloseIcon,\n      };\n      const NORMAL_ICONS = {\n        success: CheckCircleFilledIcon,\n        warning: ErrorCircleFilledIcon,\n        error: CloseCircleFilledIcon,\n      };\n      return props.theme === PRO_THEME.CIRCLE ? CIRCLE_ICONS : NORMAL_ICONS;\n    };\n    const getLabelContent = () => {\n      let labelContent: string | VNode = `${props.percentage}%`;\n      const status = props.status || '';\n      if (STATUS_ICON.includes(status) && props.theme !== PRO_THEME.PLUMP) {\n        const components = getIconMap();\n        const component = components[status];\n        if (component) {\n          labelContent = <component class={[`${COMPONENT_NAME.value}__icon`]}></component>;\n        }\n      }\n      return labelContent;\n    };\n\n    return () => {\n      const labelContent = (\n        <div class={`${COMPONENT_NAME.value}__info`}>{renderTNodeJSX('label', getLabelContent())}</div>\n      );\n      // 进度大于 10 ，进度百分比显示在内部；进度百分比小于 10 进度显示在外部\n      const PLUMP_SEPARATE = 10;\n      const separateClasses =\n        props.percentage > PLUMP_SEPARATE ? `${COMPONENT_NAME.value}--over-ten` : `${COMPONENT_NAME.value}--under-ten`;\n      return (\n        <div class={COMPONENT_NAME.value}>\n          {props.theme === PRO_THEME.LINE && (\n            <div class={`${COMPONENT_NAME.value}--thin ${COMPONENT_NAME.value}--status--${statusStyle.value}`}>\n              <div class={`${COMPONENT_NAME.value}__bar`} style={trackBgStyle.value}>\n                <div class={`${COMPONENT_NAME.value}__inner`} style={barStyle.value}></div>\n              </div>\n              {labelContent}\n            </div>\n          )}\n\n          {props.theme === PRO_THEME.PLUMP && (\n            <div\n              class={[\n                `${COMPONENT_NAME.value}__bar ${COMPONENT_NAME.value}--plump ${separateClasses}`,\n                { [`${COMPONENT_NAME.value}--status--${statusStyle.value}`]: statusStyle.value },\n              ]}\n              style={trackBgStyle.value}\n            >\n              <div class={`${COMPONENT_NAME.value}__inner`} style={barStyle.value}>\n                {props.percentage > PLUMP_SEPARATE && labelContent}\n              </div>\n              {props.percentage <= PLUMP_SEPARATE && labelContent}\n            </div>\n          )}\n\n          {props.theme === PRO_THEME.CIRCLE && (\n            <div\n              class={`${COMPONENT_NAME.value}--circle ${COMPONENT_NAME.value}--status--${statusStyle.value}`}\n              style={circleStyle.value}\n            >\n              {labelContent}\n              <svg width={diameter.value} height={diameter.value} viewBox={`0 0 ${diameter.value} ${diameter.value}`}>\n                <circle\n                  cx={rPoints.value}\n                  cy={rPoints.value}\n                  r={radius.value}\n                  stroke-width={circleStrokeWidth.value}\n                  stroke={props.trackColor}\n                  fill=\"none\"\n                  class={[`${COMPONENT_NAME.value}__circle-outer`]}\n                />\n                {props.percentage > 0 && (\n                  <circle\n                    cx={rPoints.value}\n                    cy={rPoints.value}\n                    r={radius.value}\n                    stroke-width={circleStrokeWidth.value}\n                    fill=\"none\"\n                    stroke-linecap=\"round\"\n                    class={[`${COMPONENT_NAME.value}__circle-inner`]}\n                    transform={`matrix(0,-1,1,0,0,${diameter.value})`}\n                    stroke-dasharray={strokeDashArr.value}\n                    style={circlePathStyle.value}\n                  />\n                )}\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","renderTNodeJSX","useTNodeJSX","COMPONENT_NAME","usePrefixClass","useGlobalIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","CloseIcon","TdCloseIcon","CheckIcon","TdCheckIcon","ErrorIcon","TdErrorIcon","statusStyle","computed","percentage","status","trackBgStyle","style","strokeWidth","height","borderRadius","trackColor","backgroundColor","barStyle","width","background","color","getBackgroundColor","circlePathStyle","strokeColor","_typeof","stroke","diameter","CIRCLE_SIZE_PX","MEDIUM","size","SMALL","CIRCLE_SIZE","LARGE","Number","rPoints","value","radius","circleStrokeWidth","circleStyle","theme","PRO_THEME","CIRCLE","fontSize","CIRCLE_FONT_SIZE_RATIO","defaultWidth","strokeDashArr","perimeter","Math","PI","percent","getIconMap","CIRCLE_ICONS","success","warning","error","NORMAL_ICONS","getLabelContent","labelContent","STATUS_ICON","includes","PLUMP","components","component","_createVNode","PLUMP_SEPARATE","separateClasses","LINE","_defineProperty"],"mappings":"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"}