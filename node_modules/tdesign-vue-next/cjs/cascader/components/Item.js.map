{"version":3,"file":"Item.js","sources":["../../../src/cascader/components/Item.tsx"],"sourcesContent":["import { defineComponent, PropType, computed, ref } from 'vue';\nimport { ChevronRightIcon as TdChevronRightIcon } from 'tdesign-icons-vue-next';\n\nimport { getFullPathLabel } from '../core/helper';\nimport { getCascaderItemClass, getCascaderItemIconClass } from '../core/className';\n\nimport Checkbox from '../../checkbox/index';\nimport TLoading from '../../loading';\n\nimport { CascaderContextType, TreeNodeValue, TreeNode } from '../interface';\nimport { usePrefixClass, useCommonClassName } from '../../hooks/useConfig';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\nimport useRipple from '../../hooks/useRipple';\n\nconst props = {\n  node: {\n    type: Object as PropType<TreeNode>,\n    default() {\n      return {};\n    },\n  },\n  cascaderContext: {\n    type: Object as PropType<CascaderContextType>,\n  },\n  onChange: Function as PropType<() => void>,\n  onClick: Function as PropType<() => void>,\n  onMouseenter: Function as PropType<() => void>,\n};\n\nexport default defineComponent({\n  name: 'TCascaderItem',\n  props,\n  setup(props) {\n    const liRef = ref<HTMLElement>();\n    useRipple(liRef);\n\n    const COMPONENT_NAME = usePrefixClass('cascader__item');\n    const classPrefix = usePrefixClass();\n    const { ChevronRightIcon } = useGlobalIcon({ ChevronRightIcon: TdChevronRightIcon });\n    const { STATUS, SIZE } = useCommonClassName();\n\n    const itemClass = computed(() => {\n      return getCascaderItemClass(classPrefix.value, props.node, SIZE.value, STATUS.value, props.cascaderContext);\n    });\n\n    const iconClass = computed(() => {\n      return getCascaderItemIconClass(classPrefix.value, props.node, STATUS.value, props.cascaderContext);\n    });\n\n    function RenderLabelInner(node: TreeNode, cascaderContext: CascaderContextType) {\n      const { inputVal } = cascaderContext;\n      const labelText = inputVal ? getFullPathLabel(node) : node.label;\n      if (inputVal) {\n        const texts = labelText.split(inputVal as string);\n        const doms = [];\n        for (let index = 0; index < texts.length; index++) {\n          doms.push(<span key={index}>{texts[index]}</span>);\n          if (index === texts.length - 1) break;\n          doms.push(\n            <span key={`${index}filter`} class={`${COMPONENT_NAME.value}-label--filter`}>\n              {inputVal}\n            </span>,\n          );\n        }\n        return doms;\n      }\n      return labelText;\n    }\n\n    function RenderLabelContent(node: TreeNode, cascaderContext: CascaderContextType) {\n      const label = RenderLabelInner(node, cascaderContext);\n\n      const labelCont = (\n        <span\n          title={cascaderContext.inputVal ? getFullPathLabel(node) : node.label}\n          class={[`${COMPONENT_NAME.value}-label`, `${COMPONENT_NAME.value}-label--ellipsis`]}\n          role=\"label\"\n        >\n          {label}\n        </span>\n      );\n\n      return labelCont;\n    }\n\n    function RenderCheckBox(node: TreeNode, cascaderContext: CascaderContextType) {\n      const { checkProps, value, max, inputVal } = cascaderContext;\n      const label = RenderLabelInner(node, cascaderContext);\n      return (\n        <Checkbox\n          checked={node.checked}\n          indeterminate={node.indeterminate}\n          disabled={node.isDisabled() || ((value as TreeNodeValue[]).length >= max && max !== 0)}\n          // node.value maybe string or number\n          name={String(node.value)}\n          stopLabelTrigger={true}\n          title={inputVal ? getFullPathLabel(node) : node.label}\n          onChange={() => {\n            props.onChange();\n          }}\n          {...checkProps}\n        >\n          {label}\n        </Checkbox>\n      );\n    }\n\n    return () => {\n      const { cascaderContext, node } = props;\n      return (\n        <li\n          ref={liRef}\n          class={itemClass.value}\n          onClick={(e: Event) => {\n            e.stopPropagation();\n            props.onClick();\n          }}\n          onMouseenter={(e: Event) => {\n            e.stopPropagation();\n            props.onMouseenter();\n          }}\n        >\n          {cascaderContext.multiple ? RenderCheckBox(node, cascaderContext) : RenderLabelContent(node, cascaderContext)}\n          {node.children &&\n            (node.loading ? (\n              <TLoading class={iconClass.value} size=\"small\" />\n            ) : (\n              <ChevronRightIcon class={iconClass.value} />\n            ))}\n        </li>\n      );\n    };\n  },\n});\n"],"names":["props","node","type","Object","cascaderContext","onChange","Function","onClick","onMouseenter","defineComponent","name","setup","liRef","ref","useRipple","COMPONENT_NAME","usePrefixClass","classPrefix","useGlobalIcon","ChevronRightIcon","TdChevronRightIcon","useCommonClassName","STATUS","SIZE","itemClass","computed","getCascaderItemClass","value","iconClass","getCascaderItemIconClass","RenderLabelInner","inputVal","labelText","getFullPathLabel","label","texts","split","doms","index","length","push","_createVNode","RenderLabelContent","labelCont","RenderCheckBox","checkProps","max","Checkbox","_mergeProps","checked","indeterminate","isDisabled","String","e","stopPropagation","multiple","children","loading","TLoading"],"mappings":"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"}