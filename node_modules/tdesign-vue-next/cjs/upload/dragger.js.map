{"version":3,"file":"dragger.js","sources":["../../src/upload/dragger.tsx"],"sourcesContent":["import { defineComponent, PropType, computed, ref } from 'vue';\nimport {\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport TButton from '../button';\nimport TLoading from '../loading';\n\nimport { UploadFile } from './type';\nimport props from './props';\nimport { returnFileSize, getCurrentDate, abridgeName } from './util';\nimport { UploadConfig } from '../config-provider/type';\n\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useConfig, usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\n\nexport default defineComponent({\n  name: 'TUploadDragger',\n\n  props: {\n    file: {\n      type: Object as PropType<UploadFile>,\n      default: () => {\n        return null as UploadFile;\n      },\n    },\n    loadingFile: {\n      type: Object as PropType<UploadFile>,\n      default: () => {\n        return null as UploadFile;\n      },\n    },\n    percent: {\n      type: Number,\n    },\n    locale: {\n      type: Object as PropType<UploadConfig>,\n      default: () => {\n        return null as UploadConfig;\n      },\n    },\n    autoUpload: props.autoUpload,\n    theme: props.theme,\n    onCancel: Function as PropType<(e: MouseEvent) => void>,\n    onClick: Function as PropType<(e: MouseEvent) => void>,\n    onRemove: Function as PropType<(e: MouseEvent) => void>,\n    onUpload: Function as PropType<(file: UploadFile, e: MouseEvent) => void>,\n    onChange: Function as PropType<(files: FileList) => void>,\n    onDragleave: Function as PropType<(e: DragEvent) => void>,\n    onDragenter: Function as PropType<(e: DragEvent) => void>,\n  },\n\n  setup(props) {\n    const renderTNodeJSX = useTNodeJSX();\n    const target = ref(null);\n    const dragActive = ref(false);\n    const { globalConfig } = useConfig('upload');\n    const UPLOAD_NAME = usePrefixClass('upload');\n    const { CheckCircleFilledIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n      CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n      ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n    });\n    const { SIZE } = useCommonClassName();\n\n    // status\n    const imageUrl = computed(() => {\n      return (props.loadingFile && props.loadingFile.url) || (props.file && props.file.url);\n    });\n    const inputName = computed(() => {\n      return (props.loadingFile && props.loadingFile.name) || (props.file && props.file.name) || '';\n    });\n    const classes = computed(() => [\n      `${UPLOAD_NAME.value}__dragger`,\n      { [`${UPLOAD_NAME.value}__dragger-center`]: !props.loadingFile && !props.file },\n      { [`${UPLOAD_NAME.value}__dragger-error`]: props.loadingFile && props.loadingFile.status === 'fail' },\n    ]);\n    const size = computed(() => (props.loadingFile && props.loadingFile.size) || (props.file && props.file.size));\n    const showResultOperate = computed(\n      () => Boolean(!props.loadingFile && props.file?.name) || ['success', 'fail'].includes(props.loadingFile?.status),\n    );\n\n    // methods\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault();\n      props.onChange?.(event.dataTransfer.files);\n      props.onDragleave?.(event);\n      dragActive.value = false;\n    };\n    const handleDragenter = (event: DragEvent) => {\n      event.preventDefault();\n      target.value = event.target;\n      props.onDragenter?.(event);\n      dragActive.value = true;\n    };\n    const handleDragleave = (event: DragEvent) => {\n      if (target.value !== event.target) return;\n      event.preventDefault();\n      props.onDragleave?.(event);\n      dragActive.value = false;\n    };\n\n    // render functions\n    const renderImage = () => (\n      <div class={`${UPLOAD_NAME.value}__dragger-img-wrap`}>{imageUrl.value && <img src={imageUrl.value} />}</div>\n    );\n    const renderUploading = () => {\n      if (props.loadingFile.status === 'fail') return <ErrorCircleFilledIcon />;\n      if (props.loadingFile.status === 'progress') {\n        return (\n          <div class={`${UPLOAD_NAME.value}__single-progress`}>\n            <TLoading />\n            <span class={`${UPLOAD_NAME.value}__single-percent`}>{Math.min(props.percent, 99)}%</span>\n          </div>\n        );\n      }\n    };\n    const renderProgress = () => (\n      <div class={`${UPLOAD_NAME.value}__dragger-progress`}>\n        {props.theme === 'image' && renderImage()}\n        <div class={`${UPLOAD_NAME.value}__dragger-progress-info`}>\n          <div class={`${UPLOAD_NAME.value}__dragger-text`}>\n            <span class={`${UPLOAD_NAME.value}__single-name`}>{abridgeName(inputName.value)}</span>\n            {props.loadingFile && renderUploading()}\n            {!props.loadingFile && !!props.file && <CheckCircleFilledIcon />}\n          </div>\n          <small class={`${SIZE.value.small}`}>\n            {globalConfig.value.file.fileSizeText}：{returnFileSize(size.value)}\n          </small>\n          <small class={`${SIZE.value.small}`}>\n            {globalConfig.value.file.fileOperationDateText}：{getCurrentDate()}\n          </small>\n          <div class={`${UPLOAD_NAME.value}__dragger-btns`}>\n            {['progress', 'waiting'].includes(props.loadingFile?.status) && (\n              <TButton\n                theme=\"primary\"\n                variant=\"text\"\n                class={`${UPLOAD_NAME.value}__dragger-progress-cancel`}\n                onClick={props.onCancel}\n              >\n                {props.locale?.cancelUploadText || globalConfig.value.cancelUploadText}\n              </TButton>\n            )}\n            {!props.autoUpload && props.loadingFile?.status === 'waiting' && (\n              <TButton\n                variant=\"text\"\n                theme=\"primary\"\n                onClick={(e: MouseEvent) => props.onUpload({ ...props.loadingFile }, e)}\n              >\n                {props.locale?.triggerUploadText?.normal || globalConfig.value.triggerUploadText.normal}\n              </TButton>\n            )}\n          </div>\n          {showResultOperate.value && (\n            <div class={`${UPLOAD_NAME.value}__dragger-btns`}>\n              <TButton\n                theme=\"primary\"\n                variant=\"text\"\n                class={`${UPLOAD_NAME.value}__dragger-progress-cancel`}\n                onClick={(e: MouseEvent) => {\n                  props.onRemove(e);\n                  props.onClick(e);\n                }}\n              >\n                {props.locale?.triggerUploadText?.reupload || globalConfig.value.triggerUploadText.reupload}\n              </TButton>\n              <TButton theme=\"danger\" variant=\"text\" onClick={props.onRemove}>\n                {props.locale?.triggerUploadText?.delete || globalConfig.value.triggerUploadText.delete}\n              </TButton>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n\n    const renderDefaultDragElement = () => {\n      const unActiveElement = (\n        <div>\n          <span class={`${UPLOAD_NAME.value}--highlight`}>\n            {props.locale?.triggerUploadText?.normal || globalConfig.value.triggerUploadText.normal}\n          </span>\n          <span>&nbsp;&nbsp;/&nbsp;&nbsp;{globalConfig.value.dragger.draggingText}</span>\n        </div>\n      );\n      const activeElement = <div>{globalConfig.value.dragger.dragDropText}</div>;\n      return dragActive.value ? activeElement : unActiveElement;\n    };\n\n    return () => {\n      let content = null;\n      if ((props.loadingFile || props.file) && props.theme !== 'custom') {\n        content = renderProgress();\n      } else {\n        content = (\n          <div class={`${UPLOAD_NAME.value}__trigger`} onClick={props.onClick}>\n            {renderTNodeJSX('default') || renderDefaultDragElement()}\n          </div>\n        );\n      }\n      return (\n        <div\n          class={classes.value}\n          onDrop={handleDrop}\n          onDragenter={handleDragenter}\n          onDragleave={handleDragleave}\n          onDragover={(event: DragEvent) => {\n            event.preventDefault();\n          }}\n        >\n          {content}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","file","type","Object","loadingFile","percent","Number","locale","autoUpload","theme","onCancel","Function","onClick","onRemove","onUpload","onChange","onDragleave","onDragenter","setup","renderTNodeJSX","useTNodeJSX","target","ref","dragActive","useConfig","globalConfig","UPLOAD_NAME","usePrefixClass","useGlobalIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","useCommonClassName","SIZE","imageUrl","computed","url","inputName","classes","value","_defineProperty","status","size","showResultOperate","Boolean","includes","handleDrop","event","preventDefault","dataTransfer","files","handleDragenter","handleDragleave","renderImage","_createVNode","renderUploading","TLoading","Math","min","renderProgress","abridgeName","small","fileSizeText","returnFileSize","fileOperationDateText","getCurrentDate","TButton","cancelUploadText","e","triggerUploadText","normal","reupload","renderDefaultDragElement","unActiveElement","dragger","draggingText","activeElement","dragDropText","content"],"mappings":"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"}