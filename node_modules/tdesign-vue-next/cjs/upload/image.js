/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var loading_index = require('../loading/index.js');
var upload_props = require('./props.js');
var form_hooks = require('../form/hooks.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var configProvider_useConfig = require('../config-provider/useConfig.js');
require('../loading/directive.js');
require('../loading/plugin.js');
require('../loading/loading.js');
require('@babel/runtime/helpers/slicedToArray');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../utils/dom.js');
require('../_chunks/dep-68610cdc.js');
require('lodash/isString');
require('../utils/easing.js');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isFunction');
require('lodash/isObject');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/transfer-dom.js');
require('../loading/props.js');
require('../utils/withInstall.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var ImageCard = vue.defineComponent({
  name: "TImageUpload",
  props: {
    files: upload_props["default"].files,
    loadingFile: {
      type: Object,
      "default": function _default() {
        return null;
      }
    },
    locale: {
      type: Object,
      "default": function _default() {
        return null;
      }
    },
    percent: Number,
    showUploadProgress: upload_props["default"].showUploadProgress,
    placeholder: upload_props["default"].placeholder,
    multiple: upload_props["default"].multiple,
    max: upload_props["default"].max,
    disabled: upload_props["default"].disabled,
    onClick: Function,
    onRemove: Function,
    onImgPreview: Function
  },
  setup: function setup(props2) {
    var disabled = form_hooks.useFormDisabled();

    var _useConfig = configProvider_useConfig.useConfig("upload"),
        prefix = _useConfig.classPrefix,
        globalConfig = _useConfig.globalConfig;

    var UPLOAD_NAME = hooks_useConfig.usePrefixClass("upload");

    var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
      AddIcon: tdesignIconsVueNext.AddIcon,
      DeleteIcon: tdesignIconsVueNext.DeleteIcon,
      BrowseIcon: tdesignIconsVueNext.BrowseIcon
    }),
        AddIcon = _useGlobalIcon.AddIcon,
        DeleteIcon = _useGlobalIcon.DeleteIcon,
        BrowseIcon = _useGlobalIcon.BrowseIcon;

    var _useCommonClassName = hooks_useConfig.useCommonClassName(),
        STATUS = _useCommonClassName.STATUS;

    var showTrigger = vue.computed(function () {
      var multiple = props2.multiple,
          max = props2.max,
          files = props2.files;

      if (multiple) {
        return !max || files && files.length < max;
      }

      return !(files && files[0]);
    });

    var onMaskClick = function onMaskClick(e) {
      !showTrigger.value && props2.onClick(e);
    };

    var renderCardItem = function renderCardItem(file, index) {
      return vue.createVNode("li", {
        "class": "".concat(UPLOAD_NAME.value, "__card-item ").concat(prefix.value, "-is--background")
      }, [vue.createVNode("div", {
        "class": "".concat(UPLOAD_NAME.value, "__card-content ").concat(UPLOAD_NAME.value, "__card-box")
      }, [vue.createVNode("img", {
        "class": "".concat(UPLOAD_NAME.value, "__card-image"),
        "src": file.url
      }, null), vue.createVNode("div", {
        "class": "".concat(UPLOAD_NAME.value, "__card-mask"),
        "onClick": onMaskClick
      }, [vue.createVNode("span", {
        "class": "".concat(UPLOAD_NAME.value, "__card-mask-item")
      }, [vue.createVNode(BrowseIcon, {
        "onClick": function onClick(_ref) {
          var e = _ref.e;
          e.stopPropagation();
          props2.onImgPreview(e, file);
        }
      }, null)]), !disabled.value && [vue.createVNode("span", {
        "class": "".concat(UPLOAD_NAME.value, "__card-mask-item-divider"),
        "key": "divider"
      }, null), vue.createVNode("span", {
        "class": "".concat(UPLOAD_NAME.value, "__card-mask-item"),
        "key": "delete-icon"
      }, [vue.createVNode(DeleteIcon, {
        "onClick": function onClick(_ref2) {
          var e = _ref2.e;
          e.stopPropagation();
          props2.onRemove({
            e: e,
            file: file,
            index: index
          });
        }
      }, null)])]])])]);
    };

    var renderTrigger = function renderTrigger() {
      var _props2$locale, _props2$locale$progre, _props2$locale2, _props2$locale2$trigg;

      return vue.createVNode("li", {
        "class": ["".concat(UPLOAD_NAME.value, "__card-item ").concat(prefix.value, "-is--background"), _defineProperty__default["default"]({}, STATUS.value.disabled, disabled.value)],
        "onClick": props2.onClick
      }, [props2.showUploadProgress && props2.loadingFile && props2.loadingFile.status === "progress" ? vue.createVNode("div", {
        "class": "".concat(UPLOAD_NAME.value, "__card-container ").concat(UPLOAD_NAME.value, "__card-box")
      }, [vue.createVNode(loading_index.Loading, null, null), vue.createVNode("p", null, [((_props2$locale = props2.locale) === null || _props2$locale === void 0 ? void 0 : (_props2$locale$progre = _props2$locale.progress) === null || _props2$locale$progre === void 0 ? void 0 : _props2$locale$progre.uploadingText) || globalConfig.value.progress.uploadingText, " ", Math.min(props2.percent, 99), "%"])]) : vue.createVNode("div", {
        "class": "".concat(UPLOAD_NAME.value, "__card-container ").concat(UPLOAD_NAME.value, "__card-box")
      }, [vue.createVNode(AddIcon, null, null), vue.createVNode("p", {
        "class": "".concat(prefix.value, "-size-s")
      }, [props2.placeholder || ((_props2$locale2 = props2.locale) === null || _props2$locale2 === void 0 ? void 0 : (_props2$locale2$trigg = _props2$locale2.triggerUploadText) === null || _props2$locale2$trigg === void 0 ? void 0 : _props2$locale2$trigg.image) || globalConfig.value.triggerUploadText.image])])]);
    };

    return function () {
      return vue.createVNode("ul", {
        "class": "".concat(UPLOAD_NAME.value, "__card")
      }, [props2.files && props2.files.map(function (file, index) {
        return renderCardItem(file, index);
      }), showTrigger.value && renderTrigger()]);
    };
  }
});

exports["default"] = ImageCard;
//# sourceMappingURL=image.js.map
