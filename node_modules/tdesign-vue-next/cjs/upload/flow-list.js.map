{"version":3,"file":"flow-list.js","sources":["../../src/upload/flow-list.tsx"],"sourcesContent":["import { defineComponent, ref, PropType, computed } from 'vue';\nimport {\n  TimeFilledIcon as TdTimeFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n  DeleteIcon as TdDeleteIcon,\n  BrowseIcon as TdBrowseIcon,\n} from 'tdesign-icons-vue-next';\n\nimport TButton from '../button';\nimport TLoading from '../loading';\n\nimport { UploadFile } from './type';\nimport { FlowRemoveContext } from './interface';\nimport props from './props';\nimport { returnFileSize, abridgeName } from './util';\nimport { UploadConfig } from '../config-provider/type';\n\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useFormDisabled } from '../form/hooks';\nimport { useConfig, usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\n\nexport default defineComponent({\n  name: 'TUploadFlowList',\n  props: {\n    showUploadProgress: props.showUploadProgress,\n    // 是否过滤重复文件\n    allowUploadDuplicateFile: props.allowUploadDuplicateFile,\n    placeholder: props.placeholder,\n    autoUpload: props.autoUpload,\n    disabled: props.disabled,\n    theme: props.theme,\n    batchUpload: props.isBatchUpload,\n    // 已上传完成的文件\n    files: props.files,\n    // 上传队列中的文件（可能存在已经上传过的文件）\n    toUploadFiles: Array as PropType<Array<UploadFile>>,\n    onRemove: Function as PropType<(ctx: FlowRemoveContext) => void>,\n    onUpload: Function as PropType<(files: Array<UploadFile>, e: MouseEvent) => void>,\n    onCancel: Function as PropType<(e: MouseEvent) => void>,\n    onChange: Function as PropType<(files: FileList) => void>,\n    onDragleave: Function as PropType<(e: DragEvent) => void>,\n    onDragenter: Function as PropType<(e: DragEvent) => void>,\n    onImgPreview: Function as PropType<(options: MouseEvent, file: UploadFile) => void>,\n    locale: {\n      type: Object as PropType<UploadConfig>,\n      default: () => {\n        return null as UploadConfig;\n      },\n    },\n  },\n  setup(props) {\n    const target = ref(null);\n    const dragActive = ref(false);\n\n    const renderTNodeJSX = useTNodeJSX();\n    const disabled = useFormDisabled();\n    const { classPrefix: prefix, globalConfig } = useConfig('upload');\n    const { TimeFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon, DeleteIcon, BrowseIcon } = useGlobalIcon({\n      TimeFilledIcon: TdTimeFilledIcon,\n      CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n      ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n      DeleteIcon: TdDeleteIcon,\n      BrowseIcon: TdBrowseIcon,\n    });\n    const UPLOAD_NAME = usePrefixClass('upload');\n    const { SIZE } = useCommonClassName();\n\n    const waitingUploadFiles = computed(() => {\n      const list: Array<UploadFile> = [];\n      props.toUploadFiles.forEach((item: UploadFile) => {\n        if (!props.allowUploadDuplicateFile) {\n          const r = props.files.filter((t: UploadFile) => t.name === item.name);\n          if (!r.length) {\n            list.push(item);\n          }\n        } else {\n          list.push(item);\n        }\n      });\n      return list;\n    });\n\n    const showInitial = computed(() => {\n      const isWaitingEmpty = !waitingUploadFiles.value || !waitingUploadFiles.value.length;\n      return (!props.files || !props.files.length) && isWaitingEmpty;\n    });\n\n    const listFiles = computed(() => {\n      if (!props.files || !props.files.length) return props.toUploadFiles;\n      return props.files.concat(waitingUploadFiles.value);\n    });\n\n    const failedList = computed(() => {\n      return props.toUploadFiles.filter((file: UploadFile) => file.status === 'fail');\n    });\n\n    const processList = computed(() => props.toUploadFiles.filter((file: UploadFile) => file.status === 'progress'));\n\n    const isUploading = computed(() => !!processList.value.length);\n\n    const allowUpload = computed(\n      () => Boolean(waitingUploadFiles.value && waitingUploadFiles.value.length) && !isUploading.value,\n    );\n\n    const uploadText = computed(() => {\n      const localeFromProps = props.locale;\n      if (isUploading.value) return `${globalConfig.value.progress.uploadingText}...`;\n      return failedList.value && failedList.value.length\n        ? localeFromProps?.triggerUploadText?.reupload || globalConfig.value.triggerUploadText.reupload\n        : localeFromProps?.triggerUploadText?.normal || globalConfig.value.triggerUploadText.normal;\n    });\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault();\n      props.onChange(event.dataTransfer.files);\n      props.onDragleave(event);\n      dragActive.value = false;\n    };\n\n    const handleDragenter = (event: DragEvent) => {\n      target.value = event.target;\n      event.preventDefault();\n      props.onDragenter(event);\n      dragActive.value = true;\n    };\n\n    const handleDragleave = (event: DragEvent) => {\n      if (target.value !== event.target) return;\n      event.preventDefault();\n      props.onDragleave(event);\n      dragActive.value = false;\n    };\n\n    const handleDragover = (event: DragEvent) => {\n      event.preventDefault();\n    };\n\n    const renderDragger = () => {\n      return (\n        <div\n          class={`${UPLOAD_NAME.value}__flow-empty`}\n          onDrop={handleDrop}\n          onDragenter={handleDragenter}\n          onDragover={handleDragover}\n          onDragleave={handleDragleave}\n        >\n          {dragActive.value ? globalConfig.value.dragger.dragDropText : globalConfig.value.dragger.clickAndDragText}\n        </div>\n      );\n    };\n\n    const getStatusMap = (file: UploadFile) => {\n      const localeProgressFromProps = props.locale?.progress;\n\n      const iconMap = {\n        success: <CheckCircleFilledIcon />,\n        fail: <ErrorCircleFilledIcon />,\n        progress: <TLoading />,\n        waiting: <TimeFilledIcon />,\n      };\n      const textMap = {\n        success: localeProgressFromProps?.successText || globalConfig.value.progress.successText,\n        fail: localeProgressFromProps?.failText || globalConfig.value.progress.failText,\n        progress: `${localeProgressFromProps?.uploadingText || globalConfig.value.progress.uploadingText} ${Math.min(\n          file.percent,\n          99,\n        )}%`,\n        waiting: localeProgressFromProps?.waitingText || globalConfig.value.progress.waitingText,\n      };\n      return {\n        iconMap,\n        textMap,\n      };\n    };\n\n    const renderStatus = (file: UploadFile) => {\n      if (!props.showUploadProgress) return;\n      const { iconMap, textMap } = getStatusMap(file);\n      return (\n        <div class={`${UPLOAD_NAME.value}__flow-status`}>\n          {iconMap[file.status]}\n          <span>{textMap[file.status]}</span>\n        </div>\n      );\n    };\n\n    const renderNormalActionCol = (file: UploadFile, index: number) => {\n      return (\n        <td>\n          <span\n            class={`${UPLOAD_NAME.value}__flow-button`}\n            onClick={(e: MouseEvent) => props.onRemove({ e, index, file })}\n          >\n            {props.locale?.triggerUploadText?.delete || globalConfig.value.triggerUploadText.delete}\n          </span>\n        </td>\n      );\n    };\n\n    // batchUpload action col\n    const renderBatchActionCol = (index: number) => {\n      // 第一行数据才需要合并单元格\n      return index === 0 ? (\n        <td rowspan={listFiles.value.length} class={`${UPLOAD_NAME.value}__flow-table__batch-row`}>\n          <span\n            class={`${UPLOAD_NAME.value}__flow-button`}\n            onClick={(e: MouseEvent) => props.onRemove({ e, index: -1, file: null })}\n          >\n            {props.locale?.triggerUploadText?.delete || globalConfig.value.triggerUploadText.delete}\n          </span>\n        </td>\n      ) : (\n        ''\n      );\n    };\n\n    const renderFileList = () =>\n      props.theme === 'file-flow' && (\n        <table class={`${UPLOAD_NAME.value}__flow-table`}>\n          <tr>\n            <th>{props.locale?.file?.fileNameText || globalConfig.value.file.fileNameText}</th>\n            <th>{props.locale?.file?.fileSizeText || globalConfig.value.file.fileSizeText}</th>\n            <th>{props.locale?.file?.fileStatusText || globalConfig.value.file.fileStatusText}</th>\n            <th>{props.locale?.file?.fileOperationText || globalConfig.value.file.fileOperationText}</th>\n          </tr>\n          {showInitial.value && (\n            <tr>\n              <td colspan={4}>{renderDragger()}</td>\n            </tr>\n          )}\n          {listFiles.value.map((file, index) => {\n            // 合并操作出现条件为：当前为合并上传模式且列表内没有待上传文件\n            const showBatchUploadAction = props.batchUpload && props.toUploadFiles.length === 0;\n            return (\n              <tr>\n                <td>{abridgeName(file.name, 7, 10)}</td>\n                <td>{returnFileSize(file.size)}</td>\n                <td>{renderStatus(file)}</td>\n                {showBatchUploadAction ? renderBatchActionCol(index) : renderNormalActionCol(file, index)}\n              </tr>\n            );\n          })}\n        </table>\n      );\n\n    const renderImgItem = (file: UploadFile, index: number) => {\n      const { iconMap, textMap } = getStatusMap(file);\n      return (\n        <li class={`${UPLOAD_NAME.value}__card-item`}>\n          <div\n            class={[\n              `${UPLOAD_NAME.value}__card-content`,\n              { [`${prefix.value}-is-bordered`]: file.status !== 'waiting' },\n            ]}\n          >\n            {['fail', 'progress'].includes(file.status) && (\n              <div class={`${UPLOAD_NAME.value}__card-status-wrap`}>\n                {iconMap[file.status as 'fail' | 'progress']}\n                <p>{textMap[file.status as 'fail' | 'progress']}</p>\n              </div>\n            )}\n            {(['waiting', 'success'].includes(file.status) || (!file.status && file.url)) && (\n              <img\n                class={`${UPLOAD_NAME.value}__card-image`}\n                src={file.url || '//tdesign.gtimg.com/tdesign-default-img.png'}\n              />\n            )}\n            <div class={`${UPLOAD_NAME.value}__card-mask`}>\n              {file.url && (\n                <span class={`${UPLOAD_NAME.value}__card-mask-item`}>\n                  <BrowseIcon onClick={({ e }: { e: MouseEvent }) => props.onImgPreview(e, file)} />\n                  <span class={`${UPLOAD_NAME.value}__card-mask-item-divider`}></span>\n                </span>\n              )}\n              {!disabled.value && (\n                <span\n                  class={`${UPLOAD_NAME.value}__card-mask-item`}\n                  onClick={(e: MouseEvent) => props.onRemove({ e, index, file })}\n                >\n                  <DeleteIcon />\n                </span>\n              )}\n            </div>\n          </div>\n          <p class={`${UPLOAD_NAME.value}__card-name`}>{abridgeName(file.name)}</p>\n        </li>\n      );\n    };\n\n    const renderImgList = () =>\n      props.theme === 'image-flow' && (\n        <div\n          class={`${UPLOAD_NAME.value}__flow-card-area`}\n          onDrop={handleDrop}\n          onDragenter={handleDragenter}\n          onDragover={handleDragover}\n          onDragleave={handleDragleave}\n        >\n          {showInitial.value && renderDragger()}\n          {!!listFiles.value.length && (\n            <ul class={`${UPLOAD_NAME.value}__card clearfix`}>\n              {listFiles.value.map((file, index) => renderImgItem(file, index))}\n            </ul>\n          )}\n        </div>\n      );\n\n    const renderFooter = () =>\n      !props.autoUpload && (\n        <div class={`${UPLOAD_NAME.value}__flow-bottom`}>\n          <TButton theme=\"default\" onClick={props.onCancel} disabled={!allowUpload.value}>\n            {props.locale?.cancelUploadText || globalConfig.value.cancelUploadText}\n          </TButton>\n          <TButton\n            disabled={!allowUpload.value}\n            theme=\"primary\"\n            onClick={(e: MouseEvent) => props.onUpload(waitingUploadFiles.value, e)}\n          >\n            {uploadText.value}\n          </TButton>\n        </div>\n      );\n\n    return () => (\n      <div class={[`${UPLOAD_NAME.value}__flow`, `${UPLOAD_NAME.value}__flow-${props.theme}`]}>\n        <div class={`${UPLOAD_NAME.value}__flow-op`}>\n          {renderTNodeJSX('default')}\n          <small class={`${SIZE.value.small} ${UPLOAD_NAME.value}__flow-placeholder`}>{props.placeholder}</small>\n        </div>\n        {renderFileList()}\n        {renderImgList()}\n        {renderFooter()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","showUploadProgress","allowUploadDuplicateFile","placeholder","autoUpload","disabled","theme","batchUpload","isBatchUpload","files","toUploadFiles","Array","onRemove","Function","onUpload","onCancel","onChange","onDragleave","onDragenter","onImgPreview","locale","type","Object","setup","target","ref","dragActive","renderTNodeJSX","useTNodeJSX","useFormDisabled","useConfig","prefix","classPrefix","globalConfig","useGlobalIcon","TimeFilledIcon","TdTimeFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","DeleteIcon","TdDeleteIcon","BrowseIcon","TdBrowseIcon","UPLOAD_NAME","usePrefixClass","useCommonClassName","SIZE","waitingUploadFiles","computed","list","forEach","item","r","filter","t","length","push","showInitial","isWaitingEmpty","value","listFiles","concat","failedList","file","status","processList","isUploading","allowUpload","Boolean","uploadText","localeFromProps","progress","uploadingText","triggerUploadText","reupload","normal","handleDrop","event","preventDefault","dataTransfer","handleDragenter","handleDragleave","handleDragover","renderDragger","_createVNode","dragger","dragDropText","clickAndDragText","getStatusMap","localeProgressFromProps","iconMap","success","fail","TLoading","waiting","textMap","successText","failText","Math","min","percent","waitingText","renderStatus","renderNormalActionCol","index","e","renderBatchActionCol","renderFileList","fileNameText","fileSizeText","fileStatusText","fileOperationText","map","showBatchUploadAction","abridgeName","returnFileSize","size","renderImgItem","includes","url","renderImgList","renderFooter","TButton","cancelUploadText","small"],"mappings":"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"}