{"version":3,"file":"input.js","sources":["../../src/input/input.tsx"],"sourcesContent":["import { defineComponent, h, computed } from 'vue';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  BrowseOffIcon as TdBrowseOffIcon,\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\n\nimport props from './props';\nimport { TdInputProps } from './type';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport { useConfig, usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useInput from './useInput';\nimport useInputEventHandler from './useInputEventHandler';\nimport useInputWidth from './useInputWidth';\n\nexport interface ExtendsTdInputProps extends TdInputProps {\n  showInput: boolean;\n  keepWrapperWidth: boolean;\n  allowTriggerBlur: boolean;\n}\n\nfunction getValidAttrs(obj: Record<string, unknown>): Record<string, unknown> {\n  const newObj = {};\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined') {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n}\n\nexport default defineComponent({\n  name: 'TInput',\n  props: {\n    ...props,\n    showInput: {\n      // 没有这个 API，请勿使用，即将删除。控制透传readonly同时是否展示input 默认保留 因为正常Input需要撑开宽度\n      type: Boolean,\n      default: true,\n    },\n    keepWrapperWidth: {\n      // 没有这个 API，请勿使用，即将删除。控制透传autoWidth之后是否容器宽度也自适应 多选等组件需要用到自适应但也需要保留宽度\n      type: Boolean,\n      default: false,\n    },\n    allowTriggerBlur: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  setup(props, { slots, expose }) {\n    const { globalConfig } = useConfig('input');\n    const { BrowseIcon, BrowseOffIcon, CloseCircleFilledIcon } = useGlobalIcon({\n      BrowseIcon: TdBrowseIcon,\n      BrowseOffIcon: TdBrowseOffIcon,\n      CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n    });\n    const disabled = useFormDisabled();\n    const COMPONENT_NAME = usePrefixClass('input');\n    const INPUT_WRAP_CLASS = usePrefixClass('input__wrap');\n    const INPUT_TIPS_CLASS = usePrefixClass('input__tips');\n    const { STATUS, SIZE } = useCommonClassName();\n    const classPrefix = usePrefixClass();\n    const renderTNodeJSX = useTNodeJSX();\n    const {\n      isHover,\n      tStatus,\n      inputRef,\n      inputPreRef,\n      renderType,\n      showClear,\n      focused,\n      inputValue,\n      innerValue,\n      limitNumber,\n      ...inputHandle\n    } = useInput(props, expose);\n    useInputWidth(props, inputPreRef, inputRef, innerValue);\n    const inputEventHandler = useInputEventHandler(props, isHover, innerValue);\n\n    const tPlaceholder = computed(() => props.placeholder ?? globalConfig.value.placeholder);\n    const inputAttrs = computed(() =>\n      getValidAttrs({\n        autofocus: props.autofocus,\n        disabled: disabled.value,\n        readonly: props.readonly,\n        placeholder: tPlaceholder.value,\n        maxlength: (!props.allowInputOverMax && props.maxlength) || undefined,\n        name: props.name || undefined,\n        type: renderType.value,\n        autocomplete: props.autocomplete ?? (globalConfig.value.autocomplete || undefined),\n        unselectable: props.readonly ? 'on' : undefined,\n      }),\n    );\n\n    return () => {\n      const prefixIcon = renderTNodeJSX('prefixIcon');\n      let suffixIcon = renderTNodeJSX('suffixIcon');\n      let passwordIcon = renderTNodeJSX('passwordIcon');\n      const label = renderTNodeJSX('label', { silent: true });\n      const suffix = renderTNodeJSX('suffix');\n      const limitNode =\n        limitNumber.value && props.showLimitNumber ? (\n          <div class={`${classPrefix.value}-input__limit-number`}>{limitNumber.value}</div>\n        ) : null;\n\n      const labelContent = label ? <div class={`${COMPONENT_NAME.value}__prefix`}>{label}</div> : null;\n      const suffixContent =\n        suffix || limitNode ? (\n          <div class={`${COMPONENT_NAME.value}__suffix`}>\n            {suffix}\n            {limitNode}\n          </div>\n        ) : null;\n\n      if (props.type === 'password') {\n        if (renderType.value === 'password') {\n          suffixIcon = (\n            <BrowseOffIcon class={`${COMPONENT_NAME.value}__suffix-clear`} onClick={inputHandle.emitPassword} />\n          );\n        } else if (renderType.value === 'text') {\n          suffixIcon = (\n            <BrowseIcon class={`${COMPONENT_NAME.value}__suffix-clear`} onClick={inputHandle.emitPassword} />\n          );\n        }\n      }\n\n      if (showClear.value) {\n        // 如果类型为 password 则使用 passwordIcon 显示 clear\n        if (props.type === 'password') {\n          passwordIcon = (\n            <CloseCircleFilledIcon\n              ref={inputHandle.clearIconRef}\n              class={`${COMPONENT_NAME.value}__suffix-clear`}\n              onClick={inputHandle.emitClear}\n              onMousedown={inputHandle.onClearIconMousedown}\n            />\n          );\n        } else {\n          suffixIcon = (\n            <CloseCircleFilledIcon\n              ref={inputHandle.clearIconRef}\n              class={`${COMPONENT_NAME.value}__suffix-clear`}\n              onClick={inputHandle.emitClear}\n              onMousedown={inputHandle.onClearIconMousedown}\n            />\n          );\n        }\n      }\n\n      const classes = [\n        COMPONENT_NAME.value,\n        props.inputClass,\n        {\n          [SIZE.value[props.size]]: props.size !== 'medium',\n          [STATUS.value.disabled]: disabled.value,\n          [STATUS.value.focused]: focused.value,\n          [`${classPrefix.value}-is-${tStatus.value}`]: tStatus.value,\n          [`${classPrefix.value}-align-${props.align}`]: props.align !== 'left',\n          [`${classPrefix.value}-is-readonly`]: props.readonly,\n          [`${COMPONENT_NAME.value}--prefix`]: prefixIcon || labelContent,\n          [`${COMPONENT_NAME.value}--suffix`]: suffixIcon || suffixContent,\n          [`${COMPONENT_NAME.value}--focused`]: focused.value,\n          [`${COMPONENT_NAME.value}--auto-width`]: props.autoWidth && !props.keepWrapperWidth,\n        },\n      ];\n\n      const inputEvents = getValidAttrs({\n        onFocus: (e: FocusEvent) => inputHandle.emitFocus(e),\n        onBlur: inputHandle.formatAndEmitBlur,\n        onKeydown: inputEventHandler.handleKeydown,\n        onKeyup: inputEventHandler.handleKeyUp,\n        onKeypress: inputEventHandler.handleKeypress,\n        onPaste: inputEventHandler.onHandlePaste,\n        onCompositionend: inputHandle.onHandleCompositionend,\n        onCompositionstart: inputHandle.onHandleCompositionstart,\n      });\n\n      const tips = renderTNodeJSX('tips');\n\n      return (\n        <div class={INPUT_WRAP_CLASS.value}>\n          <div\n            class={classes}\n            onClick={inputHandle.onRootClick}\n            onMouseenter={inputEventHandler.onInputMouseenter}\n            onMouseleave={inputEventHandler.onInputMouseleave}\n            onWheel={inputEventHandler.onHandleMousewheel}\n          >\n            {prefixIcon ? (\n              <span class={[`${COMPONENT_NAME.value}__prefix`, `${COMPONENT_NAME.value}__prefix-icon`]}>\n                {prefixIcon}\n              </span>\n            ) : null}\n            {labelContent}\n            {props.showInput && (\n              <input\n                class={`${COMPONENT_NAME.value}__inner`}\n                {...inputAttrs.value}\n                {...inputEvents}\n                ref={inputRef}\n                value={inputValue.value ?? ''}\n                onInput={(e: Event) => inputHandle.handleInput(e as InputEvent)}\n              />\n            )}\n            {props.autoWidth && (\n              <span ref={inputPreRef} class={`${classPrefix.value}-input__input-pre`}>\n                {innerValue.value || tPlaceholder.value}\n              </span>\n            )}\n            {suffixContent}\n            {passwordIcon ? (\n              <span\n                class={[\n                  `${COMPONENT_NAME.value}__suffix`,\n                  `${COMPONENT_NAME.value}__suffix-icon`,\n                  `${COMPONENT_NAME.value}__clear`,\n                ]}\n              >\n                {passwordIcon}\n              </span>\n            ) : null}\n            {suffixIcon ? (\n              <span\n                class={[\n                  `${COMPONENT_NAME.value}__suffix`,\n                  `${COMPONENT_NAME.value}__suffix-icon`,\n                  { [`${COMPONENT_NAME.value}__clear`]: showClear.value },\n                ]}\n              >\n                {suffixIcon}\n              </span>\n            ) : null}\n          </div>\n          {tips && (\n            <div class={`${INPUT_TIPS_CLASS.value} ${classPrefix.value}-input__tips--${props.status || 'normal'}`}>\n              {tips}\n            </div>\n          )}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["getValidAttrs","obj","newObj","Object","keys","forEach","key","defineComponent","name","props","showInput","type","Boolean","keepWrapperWidth","allowTriggerBlur","setup","slots","expose","useConfig","globalConfig","useGlobalIcon","BrowseIcon","TdBrowseIcon","BrowseOffIcon","TdBrowseOffIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","disabled","useFormDisabled","COMPONENT_NAME","usePrefixClass","INPUT_WRAP_CLASS","INPUT_TIPS_CLASS","useCommonClassName","STATUS","SIZE","classPrefix","renderTNodeJSX","useTNodeJSX","useInput","isHover","tStatus","inputRef","inputPreRef","renderType","showClear","focused","inputValue","innerValue","limitNumber","inputHandle","_objectWithoutProperties","inputEventHandler","useInputEventHandler","tPlaceholder","computed","placeholder","value","inputAttrs","autofocus","readonly","maxlength","allowInputOverMax","autocomplete","unselectable","prefixIcon","suffixIcon","passwordIcon","label","silent","suffix","limitNode","showLimitNumber","_createVNode","labelContent","suffixContent","emitPassword","clearIconRef","emitClear","onClearIconMousedown","classes","inputClass","_defineProperty","size","align","autoWidth","inputEvents","onFocus","e","emitFocus","onBlur","formatAndEmitBlur","onKeydown","handleKeydown","onKeyup","handleKeyUp","onKeypress","handleKeypress","onPaste","onHandlePaste","onCompositionend","onHandleCompositionend","onCompositionstart","onHandleCompositionstart","tips","onRootClick","onInputMouseenter","onInputMouseleave","onHandleMousewheel","handleInput","status"],"mappings":"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"}