{"version":3,"file":"image-viewer.js","sources":["../../src/image-viewer/image-viewer.tsx"],"sourcesContent":["import { computed, defineComponent, ref, toRefs, Teleport, onMounted, onBeforeUnmount } from 'vue';\nimport { ChevronLeftIcon, ChevronDownIcon, CloseIcon } from 'tdesign-icons-vue-next';\n\nimport props from './props';\nimport TImageViewerIcon from './base/ImageModalIcon';\nimport TImageViewerUtils from './base/ImageViewerUtils';\nimport TImageItem from './base/ImageItem';\nimport TImageViewerModal from './base/ImageViewerModal';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { TdImageViewerProps } from './type';\nimport { useMirror, useRotate, useScale } from './hooks';\nimport { formatImages, getOverlay } from './utils';\nimport { EVENT_CODE } from './const';\n\nexport default defineComponent({\n  name: 'TImageViewer',\n  props: { ...props },\n  setup(props) {\n    const classPrefix = usePrefixClass();\n    const COMPONENT_NAME = usePrefixClass('image-viewer');\n    const renderTNodeJSX = useTNodeJSX();\n    const isExpand = ref(false);\n    const showOverlayValue = computed(() => getOverlay(props));\n    const wrapClass = computed(() => [\n      `${COMPONENT_NAME.value}-preview-image`,\n      {\n        [`${classPrefix.value}-is-hide`]: !props.visible,\n      },\n    ]);\n    const headerClass = computed(() => [\n      `${classPrefix.value}-image-viewer__modal-header`,\n      {\n        [`${classPrefix.value}-is-show`]: isExpand.value,\n      },\n    ]);\n    const zIndexValue = computed(() => props.zIndex ?? 2000);\n    const toggleExpand = () => {\n      isExpand.value = !isExpand.value;\n    };\n\n    const { mirror, onMirror, resetMirror } = useMirror();\n    const { scale, onZoomIn, onZoomOut, resetScale } = useScale(props.imageScale);\n    const { rotate, onRotate, resetRotate } = useRotate();\n    const onRest = () => {\n      resetMirror();\n      resetScale();\n      resetRotate();\n    };\n\n    const images = computed(() => formatImages(props.images));\n    const { index, visible, modelValue } = toRefs(props);\n    const [indexValue, setIndexValue] = useDefaultValue(index, props.defaultIndex ?? 0, props.onIndexChange, 'index');\n    const currentImage = computed(() => images.value[indexValue.value] ?? { mainImage: '' });\n\n    const prevImage = () => {\n      const newIndex = indexValue.value - 1;\n      setIndexValue(newIndex < 0 ? 0 : newIndex, { trigger: 'prev' });\n    };\n\n    const nextImage = () => {\n      const newIndex = indexValue.value + 1;\n      setIndexValue(newIndex >= images.value.length ? indexValue.value : newIndex, { trigger: 'next' });\n    };\n\n    const onImgClick = (i: number) => {\n      setIndexValue(i);\n    };\n\n    const [visibleValue, setVisibleValue] = useVModel(visible, modelValue, props.defaultVisible, () => {}, 'visible');\n    const onClose: TdImageViewerProps['onClose'] = (ctx) => {\n      setVisibleValue(false, ctx);\n      props.onClose?.(ctx);\n    };\n    const closeBtnAction = (e: MouseEvent) => {\n      onClose({ e, trigger: 'close-btn' });\n    };\n    const clickOverlayHandler = (e: MouseEvent) => {\n      if (props.closeOnOverlay) {\n        onClose({ e, trigger: 'overlay' });\n      }\n    };\n\n    const keydownHandler = (e: KeyboardEvent) => {\n      switch (e.code) {\n        case EVENT_CODE.left:\n          prevImage();\n          break;\n        case EVENT_CODE.right:\n          nextImage();\n          break;\n        case EVENT_CODE.up:\n          onZoomIn();\n          break;\n        case EVENT_CODE.down:\n          onZoomOut();\n          break;\n        case EVENT_CODE.esc:\n          onClose({ e, trigger: 'esc' });\n          break;\n        default:\n          break;\n      }\n    };\n    onMounted(() => {\n      window.addEventListener('keydown', keydownHandler);\n    });\n\n    onBeforeUnmount(() => {\n      window.removeEventListener('keydown', keydownHandler);\n    });\n\n    const onWheel = (e: WheelEvent) => {\n      e.preventDefault();\n      const { deltaY, ctrlKey } = e;\n      // mac触摸板双指缩放时ctrlKey=true，deltaY>0为缩小  <0为放大\n      if (ctrlKey) {\n        return deltaY > 0 ? onZoomOut() : onZoomIn();\n      }\n      deltaY > 0 ? onZoomIn() : onZoomOut();\n    };\n\n    const transStyle = computed(() => ({ transform: `translateX(-${indexValue.value * 84}px)` }));\n\n    const renderHeader = () => (\n      <div class={headerClass.value}>\n        <TImageViewerIcon\n          icon={() => <ChevronDownIcon size=\"20px\" />}\n          class={`${COMPONENT_NAME.value}__header--pre__bt`}\n          onClick={toggleExpand}\n        />\n        <div class={`${COMPONENT_NAME.value}__header--prev`}>\n          <div class={`${COMPONENT_NAME.value}__bokeh--left`} />\n          <div class={`${COMPONENT_NAME.value}__bokeh--right`} />\n          <div class={`${COMPONENT_NAME.value}__header--trans`} style={transStyle.value}>\n            {images.value.map((image, index) => (\n              <div\n                key={index}\n                class={[\n                  `${COMPONENT_NAME.value}__header--box`,\n                  {\n                    [`${classPrefix.value}-is-active`]: index === indexValue.value,\n                  },\n                ]}\n              >\n                <img\n                  alt=\"\"\n                  src={image.thumbnail || image.mainImage}\n                  className={`${COMPONENT_NAME.value}__header--img`}\n                  onClick={() => onImgClick(index)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n    const renderNavigationArrow = (type: 'prev' | 'next') => {\n      const rotateDeg = type === 'prev' ? 0 : 180;\n      const icon = renderTNodeJSX(\n        'navigationArrow',\n        <ChevronLeftIcon style={{ transform: `rotate(${rotateDeg}deg)` }} size=\"24px\" />,\n      );\n\n      return (\n        <TImageViewerIcon\n          class={`${COMPONENT_NAME.value}__modal--${type}-bt`}\n          onClick={type === 'prev' ? prevImage : nextImage}\n          icon={() => icon}\n        />\n      );\n    };\n\n    return () => {\n      if (props.mode === 'modeless') {\n        return (\n          <>\n            {renderTNodeJSX('trigger')}\n            <TImageViewerModal\n              zIndex={zIndexValue.value}\n              visible={visibleValue.value}\n              index={indexValue.value}\n              images={images.value}\n              scale={scale.value}\n              rotate={rotate.value}\n              mirror={mirror.value}\n              currentImage={currentImage.value}\n              onRotate={onRotate}\n              onZoomIn={onZoomIn}\n              onZoomOut={onZoomOut}\n              onMirror={onMirror}\n              onReset={onRest}\n              onClose={onClose}\n              draggable={props.draggable}\n              showOverlay={showOverlayValue.value}\n              closeBtn={props.closeBtn}\n            />\n          </>\n        );\n      }\n\n      return (\n        <>\n          {renderTNodeJSX('trigger')}\n          <Teleport to=\"body\">\n            {visibleValue.value && (\n              <div class={wrapClass.value} style={{ zIndex: zIndexValue.value }} onWheel={onWheel}>\n                {!!showOverlayValue.value && (\n                  <div class={`${COMPONENT_NAME.value}__modal--mask`} onClick={clickOverlayHandler} />\n                )}\n                <TImageViewerModal />\n                {images.value.length > 1 && (\n                  <>\n                    {renderHeader()}\n                    <div class={`${COMPONENT_NAME.value}__modal--index`}>{`${indexValue.value + 1}/${\n                      images.value.length\n                    }`}</div>\n                    {renderNavigationArrow('prev')}\n                    {renderNavigationArrow('next')}\n                  </>\n                )}\n                <div\n                  class={[`${COMPONENT_NAME.value}__modal--icon`, `${COMPONENT_NAME.value}__modal--close-bt`]}\n                  onClick={closeBtnAction}\n                >\n                  {renderTNodeJSX('closeBtn', <CloseIcon size=\"24px\" />)}\n                </div>\n                <TImageViewerUtils\n                  onZoomIn={onZoomIn}\n                  onZoomOut={onZoomOut}\n                  onMirror={onMirror}\n                  onReset={onRest}\n                  onRotate={onRotate}\n                  scale={scale.value}\n                  currentImage={currentImage.value}\n                />\n                <TImageItem\n                  scale={scale.value}\n                  rotate={rotate.value}\n                  mirror={mirror.value}\n                  src={currentImage.value.mainImage}\n                  placementSrc={currentImage.value.thumbnail}\n                />\n              </div>\n            )}\n          </Teleport>\n        </>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","classPrefix","usePrefixClass","COMPONENT_NAME","renderTNodeJSX","useTNodeJSX","isExpand","ref","showOverlayValue","computed","getOverlay","wrapClass","value","visible","headerClass","zIndexValue","zIndex","toggleExpand","useMirror","mirror","onMirror","resetMirror","useScale","imageScale","scale","onZoomIn","onZoomOut","resetScale","useRotate","rotate","onRotate","resetRotate","onRest","images","formatImages","toRefs","index","modelValue","useDefaultValue","defaultIndex","onIndexChange","_slicedToArray","indexValue","setIndexValue","currentImage","mainImage","prevImage","newIndex","trigger","nextImage","length","onImgClick","i","useVModel","defaultVisible","visibleValue","setVisibleValue","onClose","ctx","closeBtnAction","e","clickOverlayHandler","closeOnOverlay","keydownHandler","code","EVENT_CODE","left","right","up","down","esc","onMounted","window","addEventListener","onBeforeUnmount","removeEventListener","onWheel","preventDefault","deltaY","ctrlKey","transStyle","transform","renderHeader","_createVNode","TImageViewerIcon","ChevronDownIcon","map","image","thumbnail","renderNavigationArrow","type","rotateDeg","icon","ChevronLeftIcon","mode","TImageViewerModal","draggable","closeBtn","Teleport","TImageViewerUtils","TImageItem"],"mappings":"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"}