{"version":3,"file":"useSelectOptions.js","sources":["../../../src/select/hooks/useSelectOptions.ts"],"sourcesContent":["import { computed, Slots, VNode, Ref } from 'vue';\nimport isArray from 'lodash/isArray';\nimport get from 'lodash/get';\n\nimport { useChildComponentSlots } from '../../hooks/slot';\nimport { TdSelectProps, TdOptionProps, SelectOptionGroup, SelectKeysType, SelectValue } from '../type';\n\ntype UniOption = (TdOptionProps | SelectOptionGroup) & {\n  index?: number;\n  slots?: Slots;\n};\n\nexport const useSelectOptions = (props: TdSelectProps, keys: Ref<SelectKeysType>) => {\n  const getChildComponentSlots = useChildComponentSlots();\n\n  const options = computed(() => {\n    let dynamicIndex = 0;\n\n    // 统一处理 keys,处理通用数据\n    const innerOptions: UniOption[] = props.options.map((option) => {\n      const getFormatOption = (option: TdOptionProps) => {\n        const { value, label } = keys.value;\n        const res = {\n          ...option,\n          index: dynamicIndex,\n          label: get(option, label),\n          value: get(option, value),\n        };\n        dynamicIndex++;\n        return res;\n      };\n      if ((option as SelectOptionGroup).group && (option as SelectOptionGroup).children) {\n        return {\n          ...option,\n          children: (option as SelectOptionGroup).children.map((child) => getFormatOption(child)),\n        };\n      }\n      return getFormatOption(option);\n    });\n\n    // 处理 slots\n    const optionsSlots = getChildComponentSlots('Option');\n    const groupSlots = getChildComponentSlots('OptionGroup');\n\n    if (isArray(groupSlots)) {\n      for (const group of groupSlots) {\n        const groupOption = {\n          group: group.props?.label,\n          ...group.props,\n          children: [] as TdOptionProps[],\n        };\n        const res = (group.children as Slots).default();\n        if (!(isArray(res) && !!res[0]?.children)) continue;\n        for (const child of res?.[0]?.children as VNode[]) {\n          groupOption.children.push({\n            ...child.props,\n            slots: child.children,\n            index: dynamicIndex,\n          } as TdOptionProps);\n          dynamicIndex++;\n        }\n\n        innerOptions.push(groupOption);\n      }\n    }\n    if (isArray(optionsSlots)) {\n      for (const child of optionsSlots) {\n        innerOptions.push({\n          ...child.props,\n          slots: child.children,\n          index: dynamicIndex,\n        } as TdOptionProps);\n        dynamicIndex++;\n      }\n    }\n\n    return innerOptions;\n  });\n\n  const optionsList = computed(() => {\n    const res: TdOptionProps[] = [];\n    const getOptionsList = (options: TdOptionProps[]) => {\n      for (const option of options) {\n        if ((option as SelectOptionGroup).group) {\n          getOptionsList((option as SelectOptionGroup).children);\n        } else {\n          res.push(option);\n        }\n      }\n    };\n    getOptionsList(options.value);\n    return res;\n  });\n\n  const optionsMap = computed(() => {\n    const res = new Map<SelectValue, TdOptionProps>();\n    optionsList.value.forEach((option: TdOptionProps) => {\n      res.set(option.value, option);\n    });\n    return res;\n  });\n\n  return {\n    options,\n    optionsMap,\n    optionsList,\n  };\n};\n"],"names":["useSelectOptions","props","keys","getChildComponentSlots","useChildComponentSlots","options","computed","dynamicIndex","innerOptions","map","option","getFormatOption","value","label","res","index","get","group","children","child","optionsSlots","groupSlots","isArray","groupOption","push","slots","optionsList","getOptionsList","optionsMap","Map","forEach","set"],"mappings":"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"}