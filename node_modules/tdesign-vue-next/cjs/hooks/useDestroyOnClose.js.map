{"version":3,"file":"useDestroyOnClose.js","sources":["../../src/hooks/useDestroyOnClose.ts"],"sourcesContent":["import { ref, provide, onUpdated } from 'vue';\n\nexport const TDisplayNoneElementRefresh = 't-display-none-element-refresh';\n\n// destroyOnClose=false 时，父元素为 display: none，此时的子元素无法获取到自身元素的任何宽度\n// 因此，需在父元素 display: none 发生变化时主动更新子元素\nexport default function useDestroyOnClose() {\n  const refresh = ref(0);\n  provide(TDisplayNoneElementRefresh, refresh);\n  onUpdated(() => {\n    refresh.value += 1;\n  });\n}\n"],"names":["TDisplayNoneElementRefresh","useDestroyOnClose","refresh","ref","provide","onUpdated","value"],"mappings":";;;;;;;;;;;;AAEO,IAAMA,0BAA6B,GAAA,iCAAnC;AAIP,SAAwBC,iBAAxB,GAA4C;AACpC,EAAA,IAAAC,OAAA,GAAUC,QAAI,EAAd,CAAA;AACNC,EAAAA,WAAA,CAAQJ,0BAAR,EAAoCE,OAApC,CAAA,CAAA;AACAG,EAAAA,aAAA,CAAU,YAAM;IACdH,OAAA,CAAQI,KAAR,IAAiB,CAAjB,CAAA;AACD,GAFD,CAAA,CAAA;AAGF;;;;;"}