{"version":3,"file":"group.js","sources":["../../src/checkbox/group.tsx"],"sourcesContent":["import { defineComponent, provide, VNode, computed, h, reactive, watchEffect, ref, toRefs } from 'vue';\nimport intersection from 'lodash/intersection';\nimport Checkbox from './checkbox';\nimport props from './checkbox-group-props';\nimport { CheckboxOptionObj, TdCheckboxProps, CheckboxGroupValue } from './type';\nimport { CheckboxGroupInjectionKey } from './constants';\n\n// hooks\nimport useVModel from '../hooks/useVModel';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useChildComponentSlots } from '../hooks/slot';\n\nexport default defineComponent({\n  name: 'TCheckboxGroup',\n  props,\n\n  setup(props) {\n    /** 样式 */\n    const COMPONENT_NAME = usePrefixClass('checkbox-group');\n    const renderTNodeJSX = useTNodeJSX();\n\n    const { isArray } = Array;\n    const { value, modelValue } = toRefs(props);\n    const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    const checkedMap = computed(() => {\n      const map = {};\n      if (isArray(innerValue.value)) {\n        innerValue.value.forEach((item: string | number) => {\n          map[item] = true;\n        });\n      }\n      return map;\n    });\n    const optionList = ref<Array<CheckboxOptionObj>>([]);\n\n    const intersectionLen = computed<number>(() => {\n      if (!isArray(innerValue.value)) return 0;\n      const values = optionList.value.map((item) => item.value);\n      const n = intersection(innerValue.value, values);\n      return n.length;\n    });\n\n    const isCheckAll = computed<boolean>(() => {\n      const excludeCount = optionList.value.filter((item) => item.disabled || item.checkAll).length;\n      if (isArray(innerValue.value) && innerValue.value.length !== optionList.value.length - excludeCount) return false;\n      return intersectionLen.value === optionList.value.length - excludeCount;\n    });\n\n    const indeterminate = computed<boolean>(\n      () => !isCheckAll.value && intersectionLen.value < optionList.value.length && intersectionLen.value !== 0,\n    );\n\n    const maxExceeded = computed<boolean>(() => props.max !== undefined && innerValue.value.length === props.max);\n\n    watchEffect(() => {\n      if (!props.options) return [];\n      optionList.value = props.options.map((item) => {\n        let r: CheckboxOptionObj = {};\n        if (typeof item !== 'object') {\n          r = { label: String(item), value: item };\n        } else {\n          r = { ...item };\n          r.disabled = r.disabled === undefined ? props.disabled : r.disabled;\n        }\n        return r;\n      });\n    });\n\n    const getAllCheckboxValue = (): CheckboxGroupValue => {\n      const val = new Set<TdCheckboxProps['value']>();\n      for (let i = 0, len = optionList.value.length; i < len; i++) {\n        const item = optionList.value[i];\n        if (item.checkAll) continue;\n        if (item.disabled) continue;\n        val.add(item.value);\n        if (maxExceeded.value) break;\n      }\n      return [...val];\n    };\n\n    const onCheckAllChange = (checked: boolean, context: { e: Event; source?: 't-checkbox' }) => {\n      const value: CheckboxGroupValue = checked ? getAllCheckboxValue() : [];\n      setInnerValue(value, {\n        e: context.e,\n        type: checked ? 'check' : 'uncheck',\n        current: undefined,\n        option: undefined,\n      });\n    };\n\n    const handleCheckboxChange = (data: { checked: boolean; e: Event; option: TdCheckboxProps }) => {\n      const currentValue = data.option.value;\n      if (isArray(innerValue.value)) {\n        const val = [...innerValue.value];\n        if (data.checked) {\n          val.push(currentValue);\n        } else {\n          const i = val.indexOf(currentValue);\n          val.splice(i, 1);\n        }\n        setInnerValue(val, {\n          e: data.e,\n          current: data.option.value,\n          option: data.option,\n          type: data.checked ? 'check' : 'uncheck',\n        });\n      } else {\n        console.warn(`TDesign CheckboxGroup Warn: \\`value\\` must be an array, instead of ${typeof innerValue.value}`);\n      }\n    };\n\n    const onCheckedChange = (p: { checked: boolean; checkAll: boolean; e: Event; option: TdCheckboxProps }) => {\n      const { checked, checkAll, e } = p;\n      if (checkAll) {\n        onCheckAllChange(checked, { e });\n      } else {\n        handleCheckboxChange(p);\n      }\n    };\n\n    const getChildComponentSlots = useChildComponentSlots();\n\n    const getOptionListBySlots = () => {\n      const nodes = getChildComponentSlots('Checkbox');\n      const arr: Array<CheckboxOptionObj> = [];\n      nodes?.forEach((node) => {\n        const option = node.props as CheckboxOptionObj;\n        if (option?.['check-all'] === '' || option?.['check-all'] === true) {\n          option.checkAll = true;\n        }\n        option && arr.push(option);\n      });\n      return arr;\n    };\n\n    const renderLabel = (option: CheckboxOptionObj) => {\n      if (typeof option.label === 'function') {\n        return option.label(h);\n      }\n      return option.label;\n    };\n\n    // provide\n    const { name, disabled } = toRefs(props);\n    provide(\n      CheckboxGroupInjectionKey,\n      reactive({\n        name,\n        isCheckAll,\n        checkedMap,\n        maxExceeded,\n        disabled,\n        indeterminate,\n        handleCheckboxChange,\n        onCheckedChange,\n      }),\n    );\n\n    return () => {\n      let children = null;\n      if (props.options?.length) {\n        children = optionList.value?.map((option, index) => (\n          <Checkbox key={`${option.value}${index}`} {...option} checked={checkedMap.value[option.value]}>\n            {renderLabel(option)}\n          </Checkbox>\n        ));\n      } else {\n        const nodes = renderTNodeJSX('default');\n        optionList.value = getOptionListBySlots();\n        children = nodes;\n      }\n      return <div class={COMPONENT_NAME.value}>{children}</div>;\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","isArray","Array","toRefs","value","modelValue","useVModel","defaultValue","onChange","_slicedToArray","innerValue","setInnerValue","checkedMap","computed","map","forEach","item","optionList","ref","intersectionLen","values","n","intersection","length","isCheckAll","excludeCount","filter","disabled","checkAll","indeterminate","maxExceeded","max","watchEffect","options","r","_typeof","label","String","getAllCheckboxValue","val","Set","i","len","add","_toConsumableArray","onCheckAllChange","checked","context","e","type","current","option","handleCheckboxChange","data","currentValue","push","indexOf","splice","console","warn","onCheckedChange","p","getChildComponentSlots","useChildComponentSlots","getOptionListBySlots","nodes","arr","node","renderLabel","h","provide","CheckboxGroupInjectionKey","reactive","children","index","_createVNode","Checkbox","_mergeProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,aAAeA,mBAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,gBADuB;AAE7BC,EAAAA,KAAA,EAAAA,sCAF6B;EAI7BC,KAJ6B,EAAA,SAAA,KAAA,CAIvBD,MAJuB,EAIhB;AAEL,IAAA,IAAAE,cAAA,GAAiBC,+BAAe,iBAAhC,CAAA;IACN,IAAMC,iBAAiBC,uBAAY,EAAnC,CAAA;AAEM,IAAA,IAAEC,OAAF,GAAcC,KAAd,CAAED,OAAF,CAAA;;IACN,IAA8BE,OAAAA,GAAAA,WAAOR,OAArC;QAAQS,KAAR,WAAQA,KAAR;QAAeC,UAAf,WAAeA,UAAf,CAAA;;AACM,IAAA,IAAA,UAAA,GAA8BC,0BAAA,CAAUF,KAAV,EAAiBC,UAAjB,EAA6BV,MAAAA,CAAMY,YAAnC,EAAiDZ,MAAAA,CAAMa,QAAvD,CAA9B;AAAA,QAAA,WAAA,GAAAC,kCAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAA,QAACC,UAAD,GAAA,WAAA,CAAA,CAAA,CAAA;AAAA,QAAaC,aAAb,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,IAAA,IAAAC,UAAA,GAAaC,aAAS,YAAM;MAChC,IAAMC,MAAM,EAAZ,CAAA;;AACI,MAAA,IAAAb,OAAA,CAAQS,UAAW,CAAAN,KAAnB,CAAA,EAA2B;AAClBM,QAAAA,UAAA,CAAAN,KAAA,CAAMW,OAAN,CAAc,UAACC,IAAD,EAA2B;AAClDF,UAAAA,GAAA,CAAIE,IAAJ,CAAA,GAAY,IAAZ,CAAA;SADS,CAAA,CAAA;AAGb,OAAA;;AACO,MAAA,OAAAF,GAAA,CAAA;AACR,MARK,CAAA;AASA,IAAA,IAAAG,UAAA,GAAaC,OAA8B,CAAA,EAAA,CAA3C,CAAA;AAEA,IAAA,IAAAC,eAAA,GAAkBN,aAAiB,YAAM;MACzC,IAAA,CAACZ,OAAQ,CAAAS,UAAA,CAAWN,KAAX,CAAT,EAAmC,OAAA,CAAA,CAAA;MACvC,IAAMgB,SAASH,UAAW,CAAAb,KAAX,CAAiBU,GAAjB,CAAqB,UAACE,IAAD,EAAA;QAAA,OAAUA,KAAKZ,KAAf,CAAA;AAAA,OAArB,CAAf,CAAA;MACA,IAAMiB,CAAI,GAAAC,gCAAA,CAAaZ,UAAW,CAAAN,KAAxB,EAA+BgB,MAA/B,CAAV,CAAA;MACA,OAAOC,CAAE,CAAAE,MAAT,CAAA;AACD,MALK,CAAA;AAOA,IAAA,IAAAC,UAAA,GAAaX,aAAkB,YAAM;MACnC,IAAAY,YAAA,GAAeR,UAAW,CAAAb,KAAX,CAAiBsB,MAAjB,CAAwB,UAACV,IAAD,EAAA;AAAA,QAAA,OAAUA,IAAK,CAAAW,QAAL,IAAiBX,IAAK,CAAAY,QAAhC,CAAA;AAAA,OAAxB,EAAkEL,MAAjF,CAAA;MACF,IAAAtB,OAAA,CAAQS,WAAWN,KAAnB,CAAA,IAA6BM,WAAWN,KAAX,CAAiBmB,MAAjB,KAA4BN,UAAW,CAAAb,KAAX,CAAiBmB,MAAjB,GAA0BE,YAAnF,EAAwG,OAAA,KAAA,CAAA;MAC5G,OAAON,eAAgB,CAAAf,KAAhB,KAA0Ba,UAAW,CAAAb,KAAX,CAAiBmB,MAAjB,GAA0BE,YAA3D,CAAA;AACD,MAJK,CAAA;IAMN,IAAMI,aAAgB,GAAAhB,YAAA,CACpB,YAAA;AAAA,MAAA,OAAM,CAACW,UAAA,CAAWpB,KAAZ,IAAqBe,eAAA,CAAgBf,KAAhB,GAAwBa,UAAW,CAAAb,KAAX,CAAiBmB,MAA9D,IAAwEJ,eAAA,CAAgBf,KAAhB,KAA0B,CAAxG,CAAA;AAAA,KADoB,CAAtB,CAAA;IAIM,IAAA0B,WAAA,GAAcjB,YAAkB,CAAA,YAAA;AAAA,MAAA,OAAMlB,MAAM,CAAAoC,GAANpC,KAAc,MAAdA,IAA2Be,UAAW,CAAAN,KAAX,CAAiBmB,MAAjB,KAA4B5B,MAAAA,CAAMoC,GAAnE,CAAA;AAAA,KAAA,CAAhC,CAAA;AAENC,IAAAA,eAAA,CAAY,YAAM;AAChB,MAAA,IAAI,CAACrC,MAAM,CAAAsC,OAAX,EAAoB,OAAO,EAAP,CAAA;MACpBhB,UAAA,CAAWb,KAAX,GAAmBT,MAAAA,CAAMsC,OAANtC,CAAcmB,GAAdnB,CAAkB,UAACqB,IAAD,EAAU;QAC7C,IAAIkB,IAAuB,EAA3B,CAAA;;AACI,QAAA,IAAAC,2BAAOnB,CAAAA,IAAP,CAAgB,KAAA,QAAhB,EAA0B;AAC5BkB,UAAAA,CAAA,GAAI;AAAEE,YAAAA,KAAO,EAAAC,MAAA,CAAOrB,IAAP,CAAT;AAAuBZ,YAAAA,OAAOY,IAAAA;WAAlC,CAAA;AACK,SAFH,MAEG;UACDkB,CAAA,GAAA,aAAA,CAAA,EAAA,EAAKlB,IAAL,CAAA,CAAA;AACJkB,UAAAA,CAAA,CAAEP,QAAF,GAAaO,CAAE,CAAAP,QAAF,KAAe,KAAYhC,CAA3B,GAA2BA,MAAAA,CAAMgC,QAAjC,GAA4CO,CAAE,CAAAP,QAA3D,CAAA;AACF,SAAA;;AACO,QAAA,OAAAO,CAAA,CAAA;AACR,OATkBvC,CAAnB,CAAA;AAUD,KAZD,CAAA,CAAA;;AAcA,IAAA,IAAM2C,sBAAsB,SAAtBA,mBAAsB,GAA0B;AAC9C,MAAA,IAAAC,GAAA,sBAAUC,KAAV,CAAA;;AACG,MAAA,KAAA,IAAAC,CAAA,GAAI,CAAJ,EAAOC,GAAM,GAAAzB,UAAA,CAAWb,KAAX,CAAiBmB,MAA9B,EAAsCkB,CAAA,GAAIC,GAA1C,EAA+CD,CAAK,EAApD,EAAoD;AACrD,QAAA,IAAAzB,IAAA,GAAOC,WAAWb,KAAX,CAAiBqC,CAAjB,CAAP,CAAA;QACN,IAAIzB,IAAK,CAAAY,QAAT,EAAmB,SAAA;QACnB,IAAIZ,IAAK,CAAAW,QAAT,EAAmB,SAAA;AACfY,QAAAA,GAAA,CAAAI,GAAA,CAAI3B,KAAKZ,KAAT,CAAA,CAAA;QACJ,IAAI0B,WAAY,CAAA1B,KAAhB,EAAuB,MAAA;AACzB,OAAA;;AACO,MAAA,OAAAwC,sCAAA,CAAIL,GAAJ,CAAA,CAAA;KATT,CAAA;;IAYM,IAAAM,gBAAA,GAAmB,SAAnBA,gBAAmB,CAACC,OAAD,EAAmBC,OAAnB,EAAoE;AAC3F,MAAA,IAAM3C,MAA4B,GAAA0C,OAAA,GAAUR,mBAAoB,EAA9B,GAAkC,EAApE,CAAA;MACA3B,aAAA,CAAcP,MAAd,EAAqB;QACnB4C,GAAGD,OAAQ,CAAAC,CADQ;AAEnBC,QAAAA,IAAA,EAAMH,UAAU,UAAU,SAFP;QAGnBI,OAAS,EAAA,KAAA,CAHU;AAInBC,QAAAA,MAAQ,EAAA,KAAA,CAAA;AAJW,OAArB,CAAA,CAAA;KAFI,CAAA;;AAUA,IAAA,IAAAC,oBAAA,GAAuB,SAAvBA,oBAAuB,CAACC,IAAD,EAAmE;AACxF,MAAA,IAAAC,YAAA,GAAeD,KAAKF,MAAL,CAAY/C,KAA3B,CAAA;;AACF,MAAA,IAAAH,OAAA,CAAQS,UAAW,CAAAN,KAAnB,CAAA,EAA2B;AAC7B,QAAA,IAAMmC,GAAM,GAAAK,sCAAA,CAAIlC,UAAA,CAAWN,KAAf,CAAZ,CAAA;;QACA,IAAIiD,KAAKP,OAAT,EAAkB;UAChBP,GAAA,CAAIgB,IAAJ,CAASD,YAAT,CAAA,CAAA;AACK,SAFP,MAEO;AACC,UAAA,IAAAb,CAAA,GAAIF,GAAI,CAAAiB,OAAJ,CAAYF,YAAZ,CAAJ,CAAA;AACFf,UAAAA,GAAA,CAAAkB,MAAA,CAAOhB,CAAP,EAAU,CAAV,CAAA,CAAA;AACN,SAAA;;QACA9B,aAAA,CAAc4B,GAAd,EAAmB;UACjBS,GAAGK,IAAK,CAAAL,CADS;AAEjBE,UAAAA,OAAA,EAASG,KAAKF,MAAL,CAAY/C,KAFJ;UAGjB+C,QAAQE,IAAK,CAAAF,MAHI;AAIjBF,UAAAA,IAAA,EAAMI,IAAK,CAAAP,OAAL,GAAe,OAAf,GAAyB,SAAA;AAJd,SAAnB,CAAA,CAAA;AAMK,OAdH,MAcG;AACLY,QAAAA,OAAA,CAAQC,IAAR,CAA0FjD,mEAAAA,CAAAA,MAAAA,CAAAA,2BAAAA,CAAAA,UAAA,CAAWN,KAArG,CAAA,CAAA,CAAA,CAAA;AACF,OAAA;KAlBI,CAAA;;AAqBA,IAAA,IAAAwD,eAAA,GAAkB,SAAlBA,eAAkB,CAACC,CAAD,EAAmF;AACzG,MAAA,IAAQf,OAAR,GAAiCe,CAAjC,CAAQf,OAAR;AAAA,UAAiBlB,QAAjB,GAAiCiC,CAAjC,CAAiBjC,QAAjB;AAAA,UAA2BoB,CAA3B,GAAiCa,CAAjC,CAA2Bb,CAA3B,CAAA;;AACA,MAAA,IAAIpB,QAAJ,EAAc;QACKiB,gBAAA,CAAAC,OAAA,EAAS;AAAEE,UAAAA,CAAA,EAAAA,CAAAA;AAAF,SAAT,CAAA,CAAA;AACZ,OAFP,MAEO;QACLI,oBAAA,CAAqBS,CAArB,CAAA,CAAA;AACF,OAAA;KANI,CAAA;;IASN,IAAMC,yBAAyBC,iCAAuB,EAAtD,CAAA;;AAEA,IAAA,IAAMC,uBAAuB,SAAvBA,oBAAuB,GAAM;AAC3B,MAAA,IAAAC,KAAA,GAAQH,uBAAuB,WAA/B,CAAA;MACN,IAAMI,MAAgC,EAAtC,CAAA;MACOD,KAAA,KAAA,IAAA,IAAAA,KAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,KAAA,CAAAlD,OAAA,CAAQ,UAACoD,IAAD,EAAU;AACvB,QAAA,IAAMhB,SAASgB,IAAK,CAAAxE,KAApB,CAAA;;QACA,IAAI,CAAAwD,MAAS,KAAA,IAAT,IAAAA,MAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,MAAS,CAAA,WAAA,CAAT,MAA0B,EAA1B,IAAgC,CAAAA,MAAA,KAAA,IAAA,IAAAA,MAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,MAAA,CAAS,WAAT,CAAA,MAA0B,IAA9D,EAAoE;UAClEA,MAAA,CAAOvB,QAAP,GAAkB,IAAlB,CAAA;AACF,SAAA;;AACUuB,QAAAA,MAAA,IAAAe,GAAA,CAAIX,IAAJ,CAASJ,MAAT,CAAA,CAAA;OALL,CAAA,CAAA;AAOA,MAAA,OAAAe,GAAA,CAAA;KAVT,CAAA;;AAaM,IAAA,IAAAE,WAAA,GAAc,SAAdA,WAAc,CAACjB,MAAD,EAA+B;AAC7C,MAAA,IAAA,OAAOA,MAAO,CAAAf,KAAd,KAAwB,UAAxB,EAAoC;AAC/B,QAAA,OAAAe,MAAA,CAAOf,KAAP,CAAaiC,KAAb,CAAA,CAAA;AACT,OAAA;;MACA,OAAOlB,MAAO,CAAAf,KAAd,CAAA;KAJI,CAAA;;IAQN,IAA2BjC,QAAAA,GAAAA,WAAOR,OAAlC;QAAQD,IAAR,YAAQA,IAAR;QAAciC,QAAd,YAAcA,QAAd,CAAA;;AACA2C,IAAAA,WAAA,CACEC,4CADF,EAEEC,YAAS,CAAA;AACP9E,MAAAA,IAAA,EAAAA,IADO;AAEP8B,MAAAA,UAAA,EAAAA,UAFO;AAGPZ,MAAAA,UAAA,EAAAA,UAHO;AAIPkB,MAAAA,WAAA,EAAAA,WAJO;AAKPH,MAAAA,QAAA,EAAAA,QALO;AAMPE,MAAAA,aAAA,EAAAA,aANO;AAOPuB,MAAAA,oBAAA,EAAAA,oBAPO;AAQPQ,MAAAA,eAAA,EAAAA,eAAAA;AARO,KAAA,CAFX,CAAA,CAAA;AAcA,IAAA,OAAO,YAAM;AAAA,MAAA,IAAA,eAAA,CAAA;;MACX,IAAIa,QAAW,GAAA,IAAf,CAAA;;AACI9E,MAAAA,IAAAA,CAAAA,eAAAA,GAAAA,MAAAA,CAAMsC,OAANtC,MAAAA,IAAAA,IAAAA,eAAAA,KAAAA,KAAAA,CAAAA,IAAAA,eAAAA,CAAe4B,MAAf5B,EAAuB;AAAA,QAAA,IAAA,iBAAA,CAAA;;QACd8E,QAAA,GAAA,CAAA,iBAAA,GAAAxD,UAAA,CAAWb,KAAX,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,iBAAkBU,CAAAA,GAAlB,CAAsB,UAACqC,MAAD,EAASuB,KAAT,EAAA;AAAA,UAAA,IAAA,KAAA,CAAA;;AAAA,UAAA,OAAAC,eAAA,CAAAC,4BAAA,EAAAC,cAAA,CAAA;AAAA,YAAA,KAAA,EAAA,EAAA,CAAA,MAAA,CACb1B,MAAA,CAAO/C,KADM,CAAA,CAAA,MAAA,CACEsE,KADF,CAAA;AAAA,WAAA,EACevB,MADf,EAAA;AAAA,YAAA,SAAA,EACgCvC,UAAA,CAAWR,KAAX,CAAiB+C,MAAA,CAAO/C,KAAxB,CAAA;WAC5DgE,CAAAA,EAAAA,OAAAA,CAAAA,KAAAA,GAAAA,WAAY,CAAAjB,MAAA,CAFgB,CAAA,GAAA,KAAA,GAAA;AAAA,YAAA,SAAA,EAAA,SAAA,QAAA,GAAA;AAAA,cAAA,OAAA,CAAA,KAAA,CAAA,CAAA;AAAA,aAAA;AAAA,WAAA,CAAA,CAAA;AAAA,SAAtB,CAAA,CAAA;AAKN,OANHxD,MAMG;AACC,QAAA,IAAAsE,KAAA,GAAQlE,eAAe,UAAvB,CAAA;AACNkB,QAAAA,UAAA,CAAWb,KAAX,GAAmB4D,oBAAqB,EAAxC,CAAA;AACWS,QAAAA,QAAA,GAAAR,KAAA,CAAA;AACb,OAAA;;AACA,MAAA,OAAAU,eAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAmB9E,cAAe,CAAAO,KAAAA;AAAlC,OAAA,EAAA,CAA0CqE,QAA1C,CAAA,CAAA,CAAA;KAbF,CAAA;AAeF,GAAA;AAlK6B,CAAA,CAA/B;;;;"}