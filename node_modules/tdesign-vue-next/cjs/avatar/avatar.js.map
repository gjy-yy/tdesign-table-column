{"version":3,"file":"avatar.js","sources":["../../src/avatar/avatar.tsx"],"sourcesContent":["import { computed, defineComponent, inject, nextTick, onMounted, onUpdated, ref } from 'vue';\nimport props from './props';\nimport { TdAvatarProps } from './type';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useContent, useTNodeJSX } from '../hooks/tnode';\n\nexport default defineComponent({\n  name: 'TAvatar',\n  props,\n  setup(props: TdAvatarProps) {\n    const COMPONENT_NAME = usePrefixClass('avatar');\n    const renderContent = useContent();\n    const renderTNodeJSX = useTNodeJSX();\n    const { SIZE } = useCommonClassName();\n    const avatarGroup = inject('avatarGroup', undefined);\n    const avatar = ref<HTMLElement | null>(null);\n    const avatarChild = ref<HTMLElement | null>(null);\n    const isImgExist = ref(true);\n    // 内容区在左右两边的间距保持为4\n    const gap = ref(4);\n    const sizeValue = ref('');\n    const scale = ref('');\n\n    const isCustomSize = computed(() => sizeValue.value && !SIZE.value[sizeValue.value]);\n\n    const customAvatarSize = computed(() => {\n      return isCustomSize.value\n        ? {\n            width: sizeValue.value,\n            height: sizeValue.value,\n            'font-size': `${Number.parseInt(sizeValue.value, 10) / 2}px`,\n          }\n        : {};\n    });\n    const customImageSize = computed(() => {\n      return isCustomSize.value\n        ? {\n            height: sizeValue.value,\n            width: sizeValue.value,\n          }\n        : {};\n    });\n    const customCharacterSize = computed(() => {\n      return {\n        transform: scale.value,\n      };\n    });\n\n    const handleImgLoadError = () => {\n      const { hideOnLoadFailed } = props;\n      isImgExist.value = !hideOnLoadFailed;\n      props.onError?.();\n    };\n    // 设置字符头像大小自适应\n    const setScaleParams = () => {\n      const $avatar = avatar.value as HTMLElement;\n      const $avatarChild = avatarChild.value as HTMLElement;\n      const avatarWidth = $avatar?.offsetWidth;\n      const avatarChildWidth = $avatarChild?.offsetWidth;\n      if (gap.value * 2 < avatarWidth) {\n        scale.value =\n          avatarChildWidth > avatarWidth - gap.value * 2\n            ? `scale(${(avatarWidth - gap.value * 2) / avatarChildWidth})`\n            : 'scale(1)';\n      }\n    };\n\n    onMounted(() => {\n      sizeValue.value = props.size || avatarGroup?.size;\n      nextTick(() => {\n        setScaleParams();\n      });\n    });\n\n    onUpdated(() => {\n      nextTick(() => {\n        setScaleParams();\n      });\n    });\n\n    return () => {\n      let content = renderContent('default', 'content');\n      const icon = renderTNodeJSX('icon');\n      const isIconOnly = icon && !content;\n      const { shape, image, alt } = props;\n      const avatarClass = [\n        `${COMPONENT_NAME.value}`,\n        SIZE[sizeValue.value],\n        {\n          [`${COMPONENT_NAME.value}--circle`]: shape === 'circle',\n          [`${COMPONENT_NAME.value}--round`]: shape === 'round',\n          [`${COMPONENT_NAME.value}__icon`]: !!isIconOnly,\n        },\n      ];\n      content = (\n        <span ref={avatarChild} style={{ ...customCharacterSize.value }}>\n          {content}\n        </span>\n      );\n      if (icon) {\n        content = [icon, !isIconOnly ? content : ''];\n      }\n\n      if (image && isImgExist.value) {\n        content = <img style={{ ...customImageSize.value }} src={image} alt={alt} onError={handleImgLoadError}></img>;\n      }\n      return (\n        <div ref={avatar} class={avatarClass} style={{ ...customAvatarSize.value }}>\n          {content}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","COMPONENT_NAME","usePrefixClass","renderContent","useContent","renderTNodeJSX","useTNodeJSX","useCommonClassName","SIZE","avatarGroup","inject","avatar","ref","avatarChild","isImgExist","gap","sizeValue","scale","isCustomSize","computed","value","customAvatarSize","width","height","Number","parseInt","customImageSize","customCharacterSize","transform","handleImgLoadError","hideOnLoadFailed","onError","setScaleParams","$avatar","$avatarChild","avatarWidth","offsetWidth","avatarChildWidth","onMounted","size","nextTick","onUpdated","content","icon","isIconOnly","shape","image","alt","avatarClass","_defineProperty","_createVNode"],"mappings":"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"}