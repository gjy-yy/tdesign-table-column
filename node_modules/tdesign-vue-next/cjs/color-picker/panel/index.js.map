{"version":3,"file":"index.js","sources":["../../../src/color-picker/panel/index.tsx"],"sourcesContent":["import { defineComponent, ref, toRefs, watch } from 'vue';\nimport { useCommonClassName, useConfig } from '../../hooks/useConfig';\nimport props from '../props';\nimport {\n  DEFAULT_COLOR,\n  DEFAULT_LINEAR_GRADIENT,\n  TD_COLOR_USED_COLORS_MAX_SIZE,\n  DEFAULT_SYSTEM_SWATCH_COLORS,\n} from '../const';\nimport PanelHeader from './header';\nimport LinearGradient from './linear-gradient';\nimport SaturationPanel from './saturation';\nimport HueSlider from './hue';\nimport AlphaSlider from './alpha';\nimport FormatPanel from './format';\nimport SwatchesPanel from './swatches';\nimport { Color, getColorObject, GradientColorPoint } from '../utils';\nimport { TdColorPickerProps, ColorPickerChangeTrigger } from '../type';\nimport { TdColorModes } from '../interfaces';\nimport { useBaseClassName } from '../hooks';\nimport useVModel from '../../hooks/useVModel';\nimport useDefaultValue from '../../hooks/useDefaultValue';\n\nexport default defineComponent({\n  name: 'ColorPanel',\n  props: {\n    ...props,\n    togglePopup: {\n      type: Function,\n    },\n  },\n\n  setup(props) {\n    const baseClassName = useBaseClassName();\n    const { STATUS } = useCommonClassName();\n    const { t, globalConfig } = useConfig('colorPicker');\n    const statusClassNames = STATUS.value;\n    const { value: inputValue, modelValue, recentColors } = toRefs(props);\n    const [innerValue, setInnerValue] = useVModel(inputValue, modelValue, props.defaultValue, props.onChange);\n    const color = ref<Color>(new Color(innerValue.value || DEFAULT_COLOR));\n    const updateColor = () => color.value.update(innerValue.value || DEFAULT_COLOR);\n    const mode = ref<TdColorModes>(color.value.isGradient ? 'linear-gradient' : 'monochrome');\n    const formatModel = ref<TdColorPickerProps['format']>(color.value.isGradient ? 'CSS' : 'RGB');\n\n    const [recentlyUsedColors, setRecentlyUsedColors] = useDefaultValue(\n      recentColors,\n      props.defaultRecentColors,\n      props.onRecentColorsChange,\n      'recentColors',\n    );\n\n    if (props.colorModes.length === 1) {\n      // eslint-disable-next-line vue/no-setup-props-destructure\n      const m = props.colorModes[0];\n      mode.value = m;\n    }\n\n    const formatValue = () => {\n      // 渐变模式下直接输出css样式\n      if (mode.value === 'linear-gradient') {\n        return color.value.linearGradient;\n      }\n      return color.value.getFormatsColorMap()[props.format] || color.value.css;\n    };\n\n    /**\n     * 添加最近使用颜色\n     * @returns void\n     */\n    const addRecentlyUsedColor = () => {\n      if (recentlyUsedColors.value === null || recentlyUsedColors.value === false) {\n        return;\n      }\n      const colors = (recentlyUsedColors.value as string[]) || [];\n      const currentColor = color.value.isGradient ? color.value.linearGradient : color.value.rgba;\n      const index = colors.indexOf(currentColor);\n      if (index > -1) {\n        colors.splice(index, 1);\n      }\n      colors.unshift(currentColor);\n      if (colors.length > TD_COLOR_USED_COLORS_MAX_SIZE) {\n        colors.length = TD_COLOR_USED_COLORS_MAX_SIZE;\n      }\n      handleRecentlyUsedColorsChange(colors);\n    };\n\n    /**\n     * 最近使用颜色变更时触发\n     * @param colors\n     */\n    const handleRecentlyUsedColorsChange = (colors: string[]) => {\n      recentlyUsedColors.value = colors;\n      setRecentlyUsedColors(colors);\n    };\n\n    /**\n     * onChange\n     * @param trigger\n     */\n    const emitColorChange = (trigger?: ColorPickerChangeTrigger) => {\n      setInnerValue(formatValue(), {\n        color: getColorObject(color.value),\n        trigger: trigger || 'palette-saturation-brightness',\n      });\n    };\n\n    watch(() => [props.defaultValue, props.enableAlpha], updateColor);\n\n    watch(\n      () => innerValue.value,\n      (newColor) => {\n        if (newColor !== formatValue()) {\n          updateColor();\n          mode.value = color.value.isGradient ? 'linear-gradient' : 'monochrome';\n        }\n      },\n    );\n\n    /**\n     * mode change\n     * @param value\n     * @returns\n     */\n    const handleModeChange = (value: TdColorModes) => {\n      mode.value = value;\n      if (value === 'linear-gradient') {\n        color.value.update(\n          color.value.gradientColors.length > 0 ? color.value.linearGradient : DEFAULT_LINEAR_GRADIENT,\n        );\n        return;\n      }\n      color.value.update(color.value.rgba);\n    };\n\n    /**\n     * 格式变化\n     * @param format\n     * @returns\n     */\n    const handleFormatModeChange = (format: TdColorPickerProps['format']) => (formatModel.value = format);\n\n    /**\n     * 饱和度亮度变化\n     * @param param0\n     */\n    const handleSatAndValueChange = ({ saturation, value }: { saturation: number; value: number }) => {\n      const { saturation: sat, value: val } = color.value;\n      let changeTrigger: ColorPickerChangeTrigger = 'palette-saturation-brightness';\n      if (value !== val && saturation !== sat) {\n        color.value.saturation = saturation;\n        color.value.value = value;\n        changeTrigger = 'palette-saturation-brightness';\n      } else if (saturation !== sat) {\n        color.value.saturation = saturation;\n        changeTrigger = 'palette-saturation';\n      } else if (value !== val) {\n        color.value.value = value;\n        changeTrigger = 'palette-brightness';\n      } else {\n        return;\n      }\n      emitColorChange(changeTrigger);\n    };\n\n    /**\n     * 色相变化\n     * @param hue\n     */\n    const handleHueChange = (hue: number) => {\n      color.value.hue = hue;\n      emitColorChange('palette-hue-bar');\n      props.onPaletteBarChange?.({\n        color: getColorObject(color.value),\n      });\n    };\n\n    /**\n     * 透明度变化\n     * @param alpha\n     */\n    const handleAlphaChange = (alpha: number) => {\n      color.value.alpha = alpha;\n      emitColorChange('palette-alpha-bar');\n    };\n\n    /**\n     * 输入框触发改变\n     * @param input\n     * @param alpha\n     */\n    const handleInputChange = (input: string, alpha?: number) => {\n      color.value.update(input);\n      color.value.alpha = alpha;\n      emitColorChange('input');\n    };\n\n    /**\n     * 渐变改变\n     * @param param0\n     */\n    const handleGradientChange = ({\n      key,\n      payload,\n    }: {\n      key: 'degree' | 'selectedId' | 'colors';\n      payload: number | string | GradientColorPoint[];\n    }) => {\n      let trigger: ColorPickerChangeTrigger = 'palette-saturation-brightness';\n      switch (key) {\n        case 'degree':\n          color.value.gradientDegree = payload as number;\n          trigger = 'input';\n          break;\n        case 'selectedId':\n          color.value.gradientSelectedId = payload as string;\n          break;\n        case 'colors':\n          color.value.gradientColors = payload as GradientColorPoint[];\n          break;\n      }\n      emitColorChange(trigger);\n    };\n\n    /**\n     * 色块点击\n     * @param type\n     * @param value\n     */\n    const handleSetColor = (type: 'system' | 'used', value: string) => {\n      const isGradientValue = Color.isGradientColor(value);\n      if (isGradientValue) {\n        if (props.colorModes.includes('linear-gradient')) {\n          mode.value = 'linear-gradient';\n          color.value.update(value);\n          color.value.updateCurrentGradientColor();\n        } else {\n          console.warn('该模式不支持渐变色');\n        }\n      } else if (mode.value === 'linear-gradient') {\n        color.value.updateStates(value);\n        color.value.updateCurrentGradientColor();\n      } else {\n        color.value.update(value);\n      }\n      emitColorChange();\n    };\n\n    return {\n      baseClassName,\n      statusClassNames,\n      t,\n      globalConfig,\n      color,\n      mode,\n      formatModel,\n      recentlyUsedColors,\n      addRecentlyUsedColor,\n      handleModeChange,\n      handleSatAndValueChange,\n      handleHueChange,\n      handleAlphaChange,\n      handleGradientChange,\n      handleSetColor,\n      handleFormatModeChange,\n      handleInputChange,\n      handleRecentlyUsedColorsChange,\n    };\n  },\n  render() {\n    const { baseClassName, statusClassNames, t, globalConfig, recentColors, recentlyUsedColors, swatchColors } = this;\n    const baseProps = {\n      color: this.color,\n      disabled: this.disabled,\n    };\n    const showUsedColors = recentColors !== null && recentColors !== false;\n\n    let systemColors = swatchColors;\n    if (systemColors === undefined) {\n      systemColors = [...DEFAULT_SYSTEM_SWATCH_COLORS];\n    }\n    const showSystemColors = systemColors?.length > 0;\n\n    const renderSwatches = () => {\n      if (!showSystemColors && !showUsedColors) {\n        return null;\n      }\n      return (\n        <>\n          <div class={`${baseClassName}__swatches-wrap`}>\n            {showUsedColors ? (\n              <SwatchesPanel\n                {...baseProps}\n                title={t(globalConfig.recentColorTitle)}\n                editable\n                colors={this.recentlyUsedColors as string[]}\n                handleAddColor={this.addRecentlyUsedColor}\n                onSetColor={(color: string) => this.handleSetColor('used', color)}\n                onChange={this.handleRecentlyUsedColorsChange}\n              />\n            ) : null}\n            {showSystemColors ? (\n              <SwatchesPanel\n                {...baseProps}\n                title={t(globalConfig.swatchColorTitle)}\n                colors={systemColors}\n                onSetColor={(color: string) => this.handleSetColor('system', color)}\n              />\n            ) : null}\n          </div>\n        </>\n      );\n    };\n\n    const isGradient = this.mode === 'linear-gradient';\n    return (\n      <div class={[`${baseClassName}__panel`, this.disabled ? statusClassNames.disabled : false]}>\n        <PanelHeader {...this.$props} mode={this.mode} onModeChange={this.handleModeChange} />\n        <div class={[`${baseClassName}__body`]}>\n          {isGradient ? <LinearGradient {...baseProps} onChange={this.handleGradientChange} /> : null}\n\n          <SaturationPanel {...baseProps} onChange={this.handleSatAndValueChange} />\n\n          <div class={[`${baseClassName}__sliders-wrapper`]}>\n            <div class={[`${baseClassName}__sliders`]}>\n              <HueSlider {...baseProps} onChange={this.handleHueChange} />\n              {this.enableAlpha ? <AlphaSlider {...baseProps} onChange={this.handleAlphaChange} /> : null}\n            </div>\n\n            <div class={[`${baseClassName}__sliders-preview`, `${baseClassName}--bg-alpha`]}>\n              <span\n                class={`${baseClassName}__sliders-preview-inner`}\n                style={{\n                  background: isGradient ? this.color.linearGradient : this.color.rgba,\n                }}\n              />\n            </div>\n          </div>\n\n          <FormatPanel\n            {...this.$props}\n            color={this.color}\n            format={this.formatModel}\n            onModeChange={this.handleFormatModeChange}\n            onInputChange={this.handleInputChange}\n          />\n          {renderSwatches()}\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","togglePopup","type","Function","setup","baseClassName","useBaseClassName","useCommonClassName","STATUS","useConfig","t","globalConfig","statusClassNames","value","toRefs","inputValue","modelValue","recentColors","useVModel","defaultValue","onChange","_slicedToArray","innerValue","setInnerValue","color","ref","Color","DEFAULT_COLOR","updateColor","update","mode","isGradient","formatModel","useDefaultValue","defaultRecentColors","onRecentColorsChange","recentlyUsedColors","setRecentlyUsedColors","colorModes","length","m","formatValue","linearGradient","getFormatsColorMap","format","css","addRecentlyUsedColor","colors","currentColor","rgba","index","indexOf","splice","unshift","TD_COLOR_USED_COLORS_MAX_SIZE","handleRecentlyUsedColorsChange","emitColorChange","trigger","getColorObject","watch","enableAlpha","newColor","handleModeChange","gradientColors","DEFAULT_LINEAR_GRADIENT","handleFormatModeChange","handleSatAndValueChange","saturation","sat","val","changeTrigger","handleHueChange","hue","onPaletteBarChange","handleAlphaChange","alpha","handleInputChange","input","handleGradientChange","key","payload","gradientDegree","gradientSelectedId","handleSetColor","isGradientValue","isGradientColor","includes","updateCurrentGradientColor","console","warn","updateStates","render","swatchColors","baseProps","disabled","showUsedColors","systemColors","_toConsumableArray","DEFAULT_SYSTEM_SWATCH_COLORS","showSystemColors","renderSwatches","_createVNode","_Fragment","recentColorTitle","swatchColorTitle","PanelHeader","_mergeProps","$props","HueSlider","AlphaSlider","background","FormatPanel"],"mappings":"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"}