{"version":3,"file":"index.js","sources":["../../../../src/color-picker/panel/format/index.tsx"],"sourcesContent":["import { defineComponent, PropType, ref, watch } from 'vue';\nimport upperCase from 'lodash/upperCase';\nimport { TdColorPickerProps } from '../../type';\nimport props from '../../props';\nimport { FORMATS } from '../../const';\nimport { Color } from '../../utils';\nimport { Select as TSelect, Option as TOption } from '../../../select';\nimport FormatInputs from './inputs';\nimport { useBaseClassName } from '../../hooks';\n\nexport default defineComponent({\n  name: 'FormatPanel',\n  inheritAttrs: false,\n  props: {\n    ...props,\n    color: {\n      type: Object as PropType<Color>,\n    },\n    onModeChange: {\n      type: Function,\n      default: () => {\n        return () => {};\n      },\n    },\n    onInputChange: {\n      type: Function,\n      default: () => {\n        return () => {};\n      },\n    },\n  },\n  setup(props) {\n    const baseClassName = useBaseClassName();\n    const formatModel = ref<TdColorPickerProps['format']>(props.format);\n    watch(\n      () => [props.format],\n      () => (formatModel.value = props.format),\n    );\n\n    /**\n     * 格式化类型改变触发\n     * @param v\n     */\n    const handleModeChange = (v: TdColorPickerProps['format']) => {\n      formatModel.value = v;\n      props.onModeChange(v);\n    };\n\n    return {\n      formatModel,\n      baseClassName,\n      handleModeChange,\n    };\n  },\n  render() {\n    const formats: TdColorPickerProps['format'][] = [...FORMATS];\n    const { baseClassName, handleModeChange } = this;\n    const newProps = {\n      ...this.$props,\n      format: this.formatModel,\n    };\n    const selectInputProps = {\n      ...((this.selectInputProps as Object) || {}),\n    };\n    return (\n      <div class={`${baseClassName}__format`}>\n        <div class={`${baseClassName}__format--item`}>\n          <TSelect\n            size=\"small\"\n            class={`${baseClassName}__format-mode-select`}\n            {...selectInputProps}\n            popupProps={{\n              overlayClassName: `${baseClassName}__select-options`,\n            }}\n            v-model={this.formatModel}\n            onChange={handleModeChange}\n          >\n            {formats.map((item) => (\n              <TOption key={item} value={item} label={upperCase(item)} style={{ fontSize: '12px' }} />\n            ))}\n          </TSelect>\n        </div>\n        <div class={`${baseClassName}__format--item`}>\n          <FormatInputs {...newProps} />\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","inheritAttrs","props","color","type","Object","onModeChange","Function","onInputChange","setup","baseClassName","useBaseClassName","formatModel","ref","format","watch","value","handleModeChange","v","render","formats","FORMATS","newProps","$props","selectInputProps","_createVNode","TSelect","_mergeProps","overlayClassName","map","item","TOption","upperCase","fontSize","FormatInputs"],"mappings":"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"}