{"version":3,"file":"sorter-button.js","sources":["../../src/table/sorter-button.tsx"],"sourcesContent":["import { computed, defineComponent, PropType } from 'vue';\nimport { ChevronDownIcon as TdChevronDownIcon } from 'tdesign-icons-vue-next';\n\nimport useClassName from './hooks/useClassName';\nimport { SortType } from './type';\nimport Tooltip, { TooltipProps } from '../tooltip';\nimport { useConfig } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useTNodeDefault } from '../hooks/tnode';\nimport { TNode } from '../common';\n\ntype SortTypeEnums = Array<'desc' | 'asc'>;\n\nexport default defineComponent({\n  name: 'TSorterButton',\n\n  props: {\n    sortType: {\n      type: String as PropType<SortType>,\n      default: 'all',\n    },\n    sortOrder: {\n      type: String,\n      default: (): string => '',\n    },\n    sortIcon: Function as PropType<TNode>,\n    tooltipProps: Object as PropType<TooltipProps>,\n    hideSortTips: Boolean,\n  },\n\n  emits: ['sort-icon-click'],\n\n  setup(props, context) {\n    const { tableSortClasses, negativeRotate180 } = useClassName();\n    const renderTNode = useTNodeDefault();\n    const { t, globalConfig } = useConfig('table');\n    const { ChevronDownIcon } = useGlobalIcon({ ChevronDownIcon: TdChevronDownIcon });\n\n    const allowSortTypes = computed<SortTypeEnums>(() =>\n      props.sortType === 'all' ? ['asc', 'desc'] : [props.sortType],\n    );\n\n    const onSortIconClick = (e: MouseEvent, direction: string) => {\n      context.emit('sort-icon-click', e, { descending: direction === 'desc' });\n    };\n\n    return {\n      t,\n      globalConfig,\n      ChevronDownIcon,\n      tableSortClasses,\n      negativeRotate180,\n      allowSortTypes,\n      onSortIconClick,\n      renderTNode,\n    };\n  },\n\n  methods: {\n    getSortIcon(direction: string, activeClass: string) {\n      const { ChevronDownIcon } = this;\n      const defaultIcon = this.t(this.globalConfig.sortIcon) || <ChevronDownIcon />;\n      const icon = this.renderTNode('sortIcon', defaultIcon);\n      const sortClassName = [\n        activeClass,\n        this.tableSortClasses.sortIcon,\n        this.tableSortClasses.iconDirection[direction],\n        { [this.negativeRotate180]: direction === 'asc' },\n      ];\n      return (\n        <span class={sortClassName} onClick={(e) => this.onSortIconClick(e, direction)}>\n          {icon}\n        </span>\n      );\n    },\n  },\n\n  render() {\n    const { tableSortClasses } = this;\n    const classes = [tableSortClasses.trigger, { [tableSortClasses.doubleIcon]: this.allowSortTypes.length > 1 }];\n    const tooltips = {\n      asc: this.globalConfig.sortAscendingOperationText,\n      desc: this.globalConfig.sortDescendingOperationText,\n    };\n    const sortButton = this.allowSortTypes.map((direction: string) => {\n      const activeClass = direction === this.sortOrder ? tableSortClasses.iconActive : tableSortClasses.iconDefault;\n      const cancelTips = this.globalConfig.sortCancelOperationText;\n      const tips = direction === this.sortOrder ? cancelTips : tooltips[direction];\n      if (this.hideSortTips ?? this.globalConfig.hideSortTips) return this.getSortIcon(direction, activeClass);\n      return (\n        <Tooltip\n          content={tips}\n          placement=\"right\"\n          {...(this.tooltipProps as TooltipProps)}\n          showArrow={false}\n          class={this.tableSortClasses.iconDirection[direction]}\n        >\n          {this.getSortIcon(direction, activeClass)}\n        </Tooltip>\n      );\n    });\n    return <div class={classes}>{sortButton}</div>;\n  },\n});\n"],"names":["defineComponent","name","props","sortType","type","String","sortOrder","sortIcon","Function","tooltipProps","Object","hideSortTips","Boolean","emits","setup","context","useClassName","tableSortClasses","negativeRotate180","renderTNode","useTNodeDefault","useConfig","t","globalConfig","useGlobalIcon","ChevronDownIcon","TdChevronDownIcon","allowSortTypes","computed","onSortIconClick","e","direction","emit","descending","methods","getSortIcon","activeClass","defaultIcon","_createVNode","icon","sortClassName","iconDirection","_defineProperty","render","classes","trigger","doubleIcon","length","tooltips","asc","sortAscendingOperationText","desc","sortDescendingOperationText","sortButton","map","iconActive","iconDefault","cancelTips","sortCancelOperationText","tips","Tooltip","_mergeProps"],"mappings":"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"}