{"version":3,"file":"useFixed.js","sources":["../../../src/table/hooks/useFixed.ts"],"sourcesContent":["import {\n  ref,\n  reactive,\n  watch,\n  toRefs,\n  SetupContext,\n  onMounted,\n  computed,\n  onBeforeMount,\n  ComputedRef,\n  onUnmounted,\n  onBeforeUnmount,\n} from 'vue';\nimport get from 'lodash/get';\nimport debounce from 'lodash/debounce';\nimport log from '../../_common/js/log';\nimport { ClassName, Styles } from '../../common';\nimport { BaseTableCol, TableRowData, TdBaseTableProps } from '../type';\nimport getScrollbarWidth from '../../_common/js/utils/getScrollbarWidth';\nimport { on, off } from '../../utils/dom';\nimport {\n  FixedColumnInfo,\n  TableRowFixedClasses,\n  RowAndColFixedPosition,\n  TableColFixedClasses,\n  RecalculateColumnWidthFunc,\n} from '../interface';\nimport { getIEVersion } from '../../_common/js/utils/helper';\n\n// 固定列相关类名处理\nexport function getColumnFixedStyles(\n  col: TdBaseTableProps['columns'][0],\n  index: number,\n  rowAndColFixedPosition: RowAndColFixedPosition,\n  tableColFixedClasses: TableColFixedClasses,\n): { style?: Styles; classes?: ClassName } {\n  const fixedPos = rowAndColFixedPosition?.get(col.colKey || index);\n  if (!fixedPos) return {};\n  const thClasses = {\n    [tableColFixedClasses.left]: col.fixed === 'left',\n    [tableColFixedClasses.right]: col.fixed === 'right',\n    [tableColFixedClasses.lastLeft]: col.fixed === 'left' && fixedPos.lastLeftFixedCol,\n    [tableColFixedClasses.firstRight]: col.fixed === 'right' && fixedPos.firstRightFixedCol,\n  };\n  const thStyles = {\n    left: col.fixed === 'left' ? `${fixedPos.left}px` : undefined,\n    right: col.fixed === 'right' ? `${fixedPos.right}px` : undefined,\n  };\n  return {\n    style: thStyles,\n    classes: thClasses,\n  };\n}\n\n// 固定行相关类名处理\nexport function getRowFixedStyles(\n  rowId: string | number,\n  rowIndex: number,\n  rowLength: number,\n  fixedRows: TdBaseTableProps['fixedRows'],\n  rowAndColFixedPosition: RowAndColFixedPosition,\n  tableRowFixedClasses: TableRowFixedClasses,\n): { style: Styles; classes: ClassName } {\n  if (!fixedRows || !fixedRows.length) return { style: undefined, classes: undefined };\n  const fixedTop = rowIndex < fixedRows[0];\n  const fixedBottom = rowIndex > rowLength - 1 - fixedRows[1];\n  const firstFixedBottomRow = rowLength - fixedRows[1];\n  const fixedPos = rowAndColFixedPosition?.get(rowId) || {};\n  const rowClasses = {\n    [tableRowFixedClasses.top]: fixedTop,\n    [tableRowFixedClasses.bottom]: fixedBottom,\n    [tableRowFixedClasses.firstBottom]: rowIndex === firstFixedBottomRow,\n    [tableRowFixedClasses.withoutBorderBottom]: rowIndex === firstFixedBottomRow - 1,\n  };\n  const rowStyles = {\n    top: fixedTop ? `${fixedPos.top}px` : undefined,\n    bottom: fixedBottom ? `${fixedPos.bottom}px` : undefined,\n  };\n  return {\n    style: rowStyles,\n    classes: rowClasses,\n  };\n}\n\nexport default function useFixed(\n  props: TdBaseTableProps,\n  context: SetupContext,\n  finalColumns: ComputedRef<BaseTableCol<TableRowData>[]>,\n) {\n  const {\n    columns,\n    tableLayout,\n    tableContentWidth,\n    fixedRows,\n    firstFullRow,\n    lastFullRow,\n    maxHeight,\n    headerAffixedTop,\n    footerAffixedBottom,\n    bordered,\n    resizable,\n    allowResizeColumnWidth,\n  } = toRefs(props);\n  const data = ref<TableRowData[]>([]);\n  const tableRef = ref<HTMLDivElement>();\n  const tableContentRef = ref<HTMLDivElement>();\n  const isFixedHeader = ref(false);\n  const isWidthOverflow = ref(false);\n  const tableElmRef = ref<HTMLTableElement>();\n  // CSS 样式设置了固定 6px\n  const scrollbarWidth = ref(6);\n  // 固定列、固定表头、固定表尾等内容的位置信息\n  const rowAndColFixedPosition = ref<RowAndColFixedPosition>(new Map());\n  const showColumnShadow = reactive({\n    left: false,\n    right: false,\n  });\n  // 虚拟滚动不能使用 CSS sticky 固定表头\n  const virtualScrollHeaderPos = ref<{ left: number; top: number }>({ left: 0, top: 0 });\n  const tableWidth = ref(0);\n  const tableElmWidth = ref(0);\n  const thWidthList = ref<{ [colKey: string]: number }>({});\n\n  const isFixedColumn = ref(false);\n  const isFixedRightColumn = ref(false);\n  const isFixedLeftColumn = ref(false);\n\n  const columnResizable = computed(() => resizable.value || allowResizeColumnWidth.value || false);\n\n  // 没有表头吸顶，没有虚拟滚动，则不需要表头宽度计算\n  const notNeedThWidthList = computed(\n    () =>\n      !(\n        props.headerAffixedTop ||\n        props.footerAffixedBottom ||\n        props.horizontalScrollAffixedBottom ||\n        props.scroll?.type === 'virtual'\n      ),\n  );\n\n  const recalculateColWidth = ref<RecalculateColumnWidthFunc>(() => {});\n\n  function setUseFixedTableElmRef(val: HTMLTableElement) {\n    tableElmRef.value = val;\n  }\n\n  function setRecalculateColWidthFuncRef(val: RecalculateColumnWidthFunc) {\n    recalculateColWidth.value = val;\n  }\n\n  function getColumnMap(\n    columns: BaseTableCol[],\n    map: RowAndColFixedPosition = new Map(),\n    levelNodes: FixedColumnInfo[][] = [],\n    level = 0,\n    parent?: FixedColumnInfo,\n  ) {\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const col = columns[i];\n      if (['left', 'right'].includes(col.fixed)) {\n        isFixedColumn.value = true;\n      }\n      if (col.fixed === 'right') {\n        isFixedRightColumn.value = true;\n      }\n      if (col.fixed === 'left') {\n        isFixedLeftColumn.value = true;\n      }\n      const key = col.colKey || i;\n      const columnInfo: FixedColumnInfo = { col, parent, index: i };\n      map.set(key, columnInfo);\n      if (col.children?.length) {\n        getColumnMap(col.children, map, levelNodes, level + 1, columnInfo);\n      }\n      if (levelNodes[level]) {\n        levelNodes[level].push(columnInfo);\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        levelNodes[level] = [columnInfo];\n      }\n    }\n    return {\n      newColumnsMap: map,\n      levelNodes,\n    };\n  }\n\n  const setFixedLeftPos = (\n    columns: BaseTableCol[],\n    initialColumnMap: RowAndColFixedPosition,\n    parent: FixedColumnInfo = {},\n  ) => {\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const col = columns[i];\n      if (col.fixed === 'right') return;\n      const colInfo = initialColumnMap.get(col.colKey || i);\n      let lastColIndex = i - 1;\n      while (lastColIndex >= 0 && columns[lastColIndex].fixed !== 'left') {\n        lastColIndex -= 1;\n      }\n      const lastCol = columns[lastColIndex];\n      // 多级表头，使用父元素作为初始基本位置\n      const defaultWidth = i === 0 ? parent?.left || 0 : 0;\n      const lastColInfo = initialColumnMap.get(lastCol?.colKey || i - 1);\n      colInfo.left = (lastColInfo?.left || defaultWidth) + (lastColInfo?.width || 0);\n      // 多级表头\n      if (col.children?.length) {\n        setFixedLeftPos(col.children, initialColumnMap, colInfo);\n      }\n    }\n  };\n\n  const setFixedRightPos = (\n    columns: BaseTableCol[],\n    initialColumnMap: RowAndColFixedPosition,\n    parent: FixedColumnInfo = {},\n  ) => {\n    for (let i = columns.length - 1; i >= 0; i--) {\n      const col = columns[i];\n      if (col.fixed === 'left') return;\n      const colInfo = initialColumnMap.get(col.colKey || i);\n      let lastColIndex = i + 1;\n      while (lastColIndex < columns.length && columns[lastColIndex].fixed !== 'right') {\n        lastColIndex += 1;\n      }\n      const lastCol = columns[lastColIndex];\n      // 多级表头，使用父元素作为初始基本位置\n      const defaultWidth = i === columns.length - 1 ? parent?.right || 0 : 0;\n      const lastColInfo = initialColumnMap.get(lastCol?.colKey || i + 1);\n      colInfo.right = (lastColInfo?.right || defaultWidth) + (lastColInfo?.width || 0);\n      // 多级表头\n      if (col.children?.length) {\n        setFixedRightPos(col.children, initialColumnMap, colInfo);\n      }\n    }\n  };\n\n  // 获取固定列位置信息。先获取节点宽度，再计算\n  const setFixedColPosition = (trList: HTMLCollection, initialColumnMap: RowAndColFixedPosition) => {\n    if (!trList) return;\n    for (let i = 0, len = trList.length; i < len; i++) {\n      const thList = trList[i].children;\n      for (let j = 0, thLen = thList.length; j < thLen; j++) {\n        const th = thList[j] as HTMLElement;\n        const colKey = th.dataset.colkey;\n        if (!colKey) {\n          log.warn('TDesign Table', `${th.innerText} missing colKey. colKey is required for fixed column feature.`);\n        }\n        const obj = initialColumnMap.get(colKey || j);\n        if (obj?.col?.fixed) {\n          initialColumnMap.set(colKey, { ...obj, width: th.getBoundingClientRect().width });\n        }\n      }\n    }\n    setFixedLeftPos(columns.value, initialColumnMap);\n    setFixedRightPos(columns.value, initialColumnMap);\n  };\n\n  // 设置固定行位置信息 top/bottom\n  const setFixedRowPosition = (\n    trList: HTMLCollection,\n    initialColumnMap: RowAndColFixedPosition,\n    thead: HTMLTableSectionElement,\n    tfoot: HTMLTableSectionElement,\n  ) => {\n    const [fixedTopRows, fixedBottomRows] = fixedRows.value || [];\n    const { data, rowKey = 'id' } = props;\n    for (let i = 0; i < fixedTopRows; i++) {\n      const tr = trList[i] as HTMLElement;\n      const rowId = get(data[i], rowKey);\n      const thisRowInfo = initialColumnMap.get(rowId) || {};\n      const lastRowId = get(data[i - 1], rowKey);\n      const lastRowInfo = initialColumnMap.get(lastRowId) || {};\n      let defaultBottom = 0;\n      if (i === 0) {\n        defaultBottom = thead?.getBoundingClientRect().height || 0;\n      }\n      thisRowInfo.top = (lastRowInfo.top || defaultBottom) + (lastRowInfo.height || 0);\n      initialColumnMap.set(rowId, { ...thisRowInfo, height: tr.getBoundingClientRect().height });\n    }\n    for (let i = data.length - 1; i >= data.length - fixedBottomRows; i--) {\n      const tr = trList[i] as HTMLElement;\n      const rowId = get(data[i], rowKey);\n      const thisRowInfo = initialColumnMap.get(rowId) || {};\n      const lastRowId = get(data[i + 1], rowKey);\n      const lastRowInfo = initialColumnMap.get(lastRowId) || {};\n      let defaultBottom = 0;\n      if (i === data.length - 1) {\n        defaultBottom = tfoot?.getBoundingClientRect().height || 0;\n      }\n      thisRowInfo.bottom = (lastRowInfo.bottom || defaultBottom) + (lastRowInfo.height || 0);\n      initialColumnMap.set(rowId, { ...thisRowInfo, height: tr.getBoundingClientRect().height });\n    }\n  };\n\n  const updateRowAndColFixedPosition = (tableContentElm: HTMLElement, initialColumnMap: RowAndColFixedPosition) => {\n    rowAndColFixedPosition.value.clear();\n    if (!tableContentElm) return;\n    const thead = tableContentElm.querySelector('thead');\n    // 处理固定列\n    thead && setFixedColPosition(thead.children, initialColumnMap);\n    // 处理冻结行\n    const tbody = tableContentElm.querySelector('tbody');\n    const tfoot = tableContentElm.querySelector('tfoot');\n    tbody && setFixedRowPosition(tbody.children, initialColumnMap, thead, tfoot);\n    // 更新最终 Map\n    rowAndColFixedPosition.value = initialColumnMap;\n  };\n\n  let shadowLastScrollLeft: number;\n  const updateColumnFixedShadow = (target: HTMLElement, extra?: { skipScrollLimit?: boolean }) => {\n    if (!isFixedColumn.value || !target) return;\n    const { scrollLeft } = target;\n    // 只有左右滚动，需要更新固定列阴影\n    if (shadowLastScrollLeft === scrollLeft && (!extra || !extra.skipScrollLimit)) return;\n    shadowLastScrollLeft = scrollLeft;\n    const isShowRight = target.clientWidth + scrollLeft < target.scrollWidth;\n    showColumnShadow.left = scrollLeft > 0;\n    showColumnShadow.right = isShowRight;\n  };\n\n  // 多级表头场景较为复杂：为了滚动的阴影效果，需要知道哪些列是边界列，左侧固定列的最后一列，右侧固定列的第一列，每一层表头都需要兼顾\n  const setIsLastOrFirstFixedCol = (levelNodes: FixedColumnInfo[][]) => {\n    for (let t = 0; t < levelNodes.length; t++) {\n      const nodes = levelNodes[t];\n      for (let i = 0, len = nodes.length; i < len; i++) {\n        const colMapInfo = nodes[i];\n        const nextColMapInfo = nodes[i + 1];\n        const { parent } = colMapInfo;\n        const isParentLastLeftFixedCol = !parent || parent?.lastLeftFixedCol;\n        if (isParentLastLeftFixedCol && colMapInfo.col.fixed === 'left' && nextColMapInfo?.col.fixed !== 'left') {\n          colMapInfo.lastLeftFixedCol = true;\n        }\n        const lastColMapInfo = nodes[i - 1];\n        const isParentFirstRightFixedCol = !parent || parent?.firstRightFixedCol;\n        if (isParentFirstRightFixedCol && colMapInfo.col.fixed === 'right' && lastColMapInfo?.col.fixed !== 'right') {\n          colMapInfo.firstRightFixedCol = true;\n        }\n      }\n    }\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const updateFixedStatus = () => {\n    const { newColumnsMap, levelNodes } = getColumnMap(columns.value);\n    setIsLastOrFirstFixedCol(levelNodes);\n    const timer = setTimeout(() => {\n      if (isFixedColumn.value || fixedRows.value?.length) {\n        updateRowAndColFixedPosition(tableContentRef.value, newColumnsMap);\n      }\n      clearTimeout(timer);\n    }, 0);\n    return () => {\n      clearTimeout(timer);\n    };\n  };\n\n  const updateFixedHeader = () => {\n    const timer = setTimeout(() => {\n      if (!tableContentRef.value) return;\n      isFixedHeader.value = tableContentRef.value.scrollHeight > tableContentRef.value.clientHeight;\n      isWidthOverflow.value = tableContentRef.value.scrollWidth > tableContentRef.value.clientWidth;\n      const pos = tableContentRef.value.getBoundingClientRect();\n      virtualScrollHeaderPos.value = {\n        top: pos.top,\n        left: pos.left,\n      };\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  const updateTableWidth = () => {\n    const rect = tableContentRef.value?.getBoundingClientRect();\n    if (!rect) return;\n    // 存在纵向滚动条，且固定表头时，需去除滚动条宽度\n    const reduceWidth = isFixedHeader.value ? scrollbarWidth.value : 0;\n    tableWidth.value = rect.width - reduceWidth - (props.bordered ? 1 : 0);\n    const elmRect = tableElmRef?.value?.getBoundingClientRect();\n    tableElmWidth.value = elmRect?.width;\n  };\n\n  const updateThWidthList = (trList: HTMLCollection | { [colKey: string]: number }) => {\n    if (trList instanceof HTMLCollection) {\n      if (columnResizable.value) return;\n      const widthMap: { [colKey: string]: number } = {};\n      for (let i = 0, len = trList.length; i < len; i++) {\n        const thList = trList[i].children;\n        for (let j = 0, thLen = thList.length; j < thLen; j++) {\n          const th = thList[j] as HTMLElement;\n          const colKey = th.dataset.colkey;\n          widthMap[colKey] = th.getBoundingClientRect().width;\n        }\n      }\n      thWidthList.value = widthMap;\n    } else {\n      if (!thWidthList.value) {\n        thWidthList.value = {};\n      }\n      Object.entries(trList).forEach(([colKey, width]) => {\n        thWidthList.value[colKey] = width;\n      });\n    }\n  };\n\n  const updateThWidthListHandler = () => {\n    if (columnResizable.value) {\n      recalculateColWidth.value(finalColumns.value, thWidthList.value, tableLayout.value, tableElmWidth.value);\n    }\n    if (notNeedThWidthList.value) return;\n    const timer = setTimeout(() => {\n      updateTableWidth();\n      const thead = tableContentRef.value?.querySelector('thead');\n      if (!thead) return;\n      updateThWidthList(thead.children);\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  const resetThWidthList = () => {\n    thWidthList.value = {};\n  };\n\n  const emitScrollEvent = (e: WheelEvent) => {\n    props.onScrollX?.({ e });\n    props.onScrollY?.({ e });\n    props.onScroll?.({ e });\n  };\n\n  const getThWidthList = () => {\n    if (!thWidthList.value) {\n      thWidthList.value = {};\n    }\n    return thWidthList.value;\n  };\n\n  watch(\n    [\n      data,\n      columns,\n      bordered,\n      tableLayout,\n      tableContentWidth,\n      isFixedHeader,\n      isWidthOverflow,\n      isFixedColumn,\n      fixedRows,\n      firstFullRow,\n      lastFullRow,\n    ],\n    updateFixedStatus,\n    { immediate: true },\n  );\n\n  watch(\n    [isFixedColumn, columns],\n    () => {\n      const timer = setTimeout(() => {\n        if (isFixedColumn.value) {\n          updateColumnFixedShadow(tableContentRef.value);\n        }\n        clearTimeout(timer);\n      }, 0);\n    },\n    { immediate: true },\n  );\n\n  watch([maxHeight, data, columns, bordered], updateFixedHeader, { immediate: true });\n\n  // 影响表头宽度的元素\n  watch(\n    [\n      data,\n      columns,\n      bordered,\n      tableLayout,\n      fixedRows,\n      isFixedHeader,\n      headerAffixedTop,\n      footerAffixedBottom,\n      tableContentWidth,\n    ],\n    updateThWidthListHandler,\n    { immediate: true },\n  );\n\n  watch(finalColumns, () => {\n    updateTableWidth();\n    resetThWidthList();\n    if (columnResizable.value) {\n      recalculateColWidth.value(finalColumns.value, thWidthList.value, tableLayout.value, tableElmWidth.value);\n    }\n  });\n\n  const refreshTable = debounce(() => {\n    updateTableWidth();\n    updateFixedHeader();\n    updateThWidthListHandler();\n    if (isFixedColumn.value || isFixedHeader.value) {\n      updateFixedStatus();\n      updateColumnFixedShadow(tableContentRef.value, { skipScrollLimit: true });\n    }\n  }, 30);\n\n  const onResize = refreshTable;\n\n  let resizeObserver: ResizeObserver = null;\n  function addTableResizeObserver(tableElement: HTMLDivElement) {\n    // IE 11 以下使用 window resize；IE 11 以上使用 ResizeObserver\n    if (getIEVersion() < 11 || typeof window.ResizeObserver === 'undefined') return;\n    off(window, 'resize', onResize);\n    resizeObserver = new window.ResizeObserver(() => {\n      refreshTable();\n    });\n    resizeObserver.observe(tableElement);\n    tableRef.value = tableElement;\n  }\n\n  onMounted(() => {\n    const scrollWidth = getScrollbarWidth();\n    scrollbarWidth.value = scrollWidth;\n    const timer = setTimeout(() => {\n      updateTableWidth();\n      if (columnResizable.value) {\n        recalculateColWidth.value(finalColumns.value, thWidthList.value, tableLayout.value, tableElmWidth.value);\n      }\n      clearTimeout(timer);\n    });\n    const isWatchResize = isFixedColumn.value || isFixedHeader.value || !notNeedThWidthList.value || !data.value.length;\n    // IE 11 以下使用 window resize；IE 11 以上使用 ResizeObserver\n    if ((isWatchResize && getIEVersion() < 11) || typeof window.ResizeObserver === 'undefined') {\n      on(window, 'resize', onResize);\n    }\n  });\n\n  onBeforeUnmount(() => {\n    off(window, 'resize', onResize);\n    resizeObserver?.unobserve(tableRef.value);\n    resizeObserver?.disconnect();\n  });\n\n  const setData = (dataSource: TableRowData[]) => {\n    data.value = dataSource;\n  };\n\n  return {\n    tableWidth,\n    tableElmWidth,\n    thWidthList,\n    isFixedHeader,\n    isWidthOverflow,\n    tableContentRef,\n    isFixedColumn,\n    showColumnShadow,\n    rowAndColFixedPosition,\n    virtualScrollHeaderPos,\n    scrollbarWidth,\n    setData,\n    refreshTable,\n    emitScrollEvent,\n    updateThWidthListHandler,\n    updateColumnFixedShadow,\n    setUseFixedTableElmRef,\n    getThWidthList,\n    updateThWidthList,\n    setRecalculateColWidthFuncRef,\n    addTableResizeObserver,\n  };\n}\n"],"names":["getColumnFixedStyles","col","index","rowAndColFixedPosition","tableColFixedClasses","fixedPos","get","colKey","thClasses","left","fixed","right","_defineProperty","lastLeft","lastLeftFixedCol","firstRight","firstRightFixedCol","thStyles","style","classes","getRowFixedStyles","rowId","rowIndex","rowLength","fixedRows","tableRowFixedClasses","length","fixedTop","fixedBottom","firstFixedBottomRow","rowClasses","top","bottom","firstBottom","withoutBorderBottom","rowStyles","useFixed","props","context","finalColumns","toRefs","columns","tableLayout","tableContentWidth","firstFullRow","lastFullRow","maxHeight","headerAffixedTop","footerAffixedBottom","bordered","resizable","allowResizeColumnWidth","data","ref","tableRef","tableContentRef","isFixedHeader","isWidthOverflow","tableElmRef","scrollbarWidth","Map","showColumnShadow","reactive","virtualScrollHeaderPos","tableWidth","tableElmWidth","thWidthList","isFixedColumn","isFixedRightColumn","isFixedLeftColumn","columnResizable","computed","value","notNeedThWidthList","horizontalScrollAffixedBottom","scroll","type","recalculateColWidth","setUseFixedTableElmRef","val","setRecalculateColWidthFuncRef","getColumnMap","map","levelNodes","level","parent","i","len","includes","key","columnInfo","set","children","push","newColumnsMap","setFixedLeftPos","initialColumnMap","colInfo","lastColIndex","lastCol","defaultWidth","lastColInfo","width","setFixedRightPos","setFixedColPosition","trList","thList","j","thLen","th","dataset","colkey","log","warn","innerText","obj","getBoundingClientRect","setFixedRowPosition","thead","tfoot","_slicedToArray","fixedTopRows","fixedBottomRows","rowKey","tr","thisRowInfo","lastRowId","lastRowInfo","defaultBottom","height","updateRowAndColFixedPosition","tableContentElm","clear","querySelector","tbody","shadowLastScrollLeft","updateColumnFixedShadow","target","extra","scrollLeft","skipScrollLimit","isShowRight","clientWidth","scrollWidth","setIsLastOrFirstFixedCol","t","nodes","colMapInfo","nextColMapInfo","isParentLastLeftFixedCol","lastColMapInfo","isParentFirstRightFixedCol","updateFixedStatus","timer","setTimeout","clearTimeout","updateFixedHeader","scrollHeight","clientHeight","pos","updateTableWidth","rect","reduceWidth","elmRect","updateThWidthList","HTMLCollection","widthMap","Object","entries","forEach","updateThWidthListHandler","resetThWidthList","emitScrollEvent","e","onScrollX","onScrollY","onScroll","getThWidthList","watch","immediate","refreshTable","debounce","onResize","resizeObserver","addTableResizeObserver","tableElement","getIEVersion","window","ResizeObserver","off","observe","onMounted","getScrollbarWidth","isWatchResize","on","onBeforeUnmount","unobserve","disconnect","setData","dataSource"],"mappings":"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"}