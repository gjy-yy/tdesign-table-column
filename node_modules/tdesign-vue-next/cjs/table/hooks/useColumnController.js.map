{"version":3,"file":"useColumnController.js","sources":["../../../src/table/hooks/useColumnController.tsx"],"sourcesContent":["/**\n * 自定义显示列控制器，即列配置\n */\nimport { computed, ref, SetupContext, toRefs, watch } from 'vue';\nimport { SettingIcon as TdSettingIcon } from 'tdesign-icons-vue-next';\n\nimport intersection from 'lodash/intersection';\nimport Checkbox, {\n  CheckboxGroup,\n  CheckboxGroupValue,\n  CheckboxOptionObj,\n  CheckboxGroupChangeContext,\n} from '../../checkbox';\nimport { DialogPlugin } from '../../dialog/plugin';\nimport { renderTitle } from './useTableHeader';\nimport { PrimaryTableCol, TdPrimaryTableProps } from '../type';\nimport { useConfig } from '../../hooks/useConfig';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\nimport useDefaultValue from '../../hooks/useDefaultValue';\nimport { getCurrentRowByKey } from '../utils';\nimport { DialogInstance } from '../../dialog';\nimport TButton from '../../button';\n\nexport function getColumnKeys(columns: PrimaryTableCol[], keys = new Set<string>()) {\n  for (let i = 0, len = columns.length; i < len; i++) {\n    const col = columns[i];\n    col.colKey && keys.add(col.colKey);\n    if (col.children?.length) {\n      getColumnKeys(col.children, keys);\n    }\n  }\n  return keys;\n}\n\nexport default function useColumnController(props: TdPrimaryTableProps, context: SetupContext) {\n  const { classPrefix, globalConfig } = useConfig('table');\n  const { SettingIcon } = useGlobalIcon({ SettingIcon: TdSettingIcon });\n  const { columns, columnController, displayColumns, columnControllerVisible } = toRefs(props);\n  const dialogInstance = ref<DialogInstance>(null);\n\n  const enabledColKeys = computed(() => {\n    const arr = (columnController.value?.fields || [...getColumnKeys(columns.value)] || []).filter((v) => v);\n    return new Set(arr);\n  });\n\n  const keys = [...getColumnKeys(columns.value)];\n\n  // 确认后的列配置\n  const [tDisplayColumns, setTDisplayColumns] = useDefaultValue(\n    displayColumns,\n    props.defaultDisplayColumns || keys,\n    props.onDisplayColumnsChange,\n    'displayColumns',\n  );\n  // 弹框内的多选\n  const columnCheckboxKeys = ref<CheckboxGroupValue>(displayColumns.value || props.defaultDisplayColumns || keys);\n\n  const checkboxOptions = computed<CheckboxOptionObj[]>(() => getCheckboxOptions(columns.value));\n\n  const intersectionChecked = computed(() => intersection(columnCheckboxKeys.value, [...enabledColKeys.value]));\n\n  watch([displayColumns], ([val]) => {\n    columnCheckboxKeys.value = val || props.defaultDisplayColumns || keys;\n  });\n\n  function getCheckboxOptions(columns: PrimaryTableCol[], arr: CheckboxOptionObj[] = []) {\n    // 减少循环次数\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const item = columns[i];\n      if (item.colKey) {\n        arr.push({\n          label: () => renderTitle(context.slots, item, i),\n          value: item.colKey,\n          disabled: !enabledColKeys.value.has(item.colKey),\n        });\n      }\n      if (item.children?.length) {\n        getCheckboxOptions(item.children, arr);\n      }\n    }\n    return arr;\n  }\n\n  const handleCheckChange = (val: CheckboxGroupValue, ctx: CheckboxGroupChangeContext) => {\n    columnCheckboxKeys.value = val;\n    const params = {\n      columns: val,\n      type: ctx.type,\n      currentColumn: getCurrentRowByKey(columns.value, String(ctx.current)),\n      e: ctx.e,\n    };\n    props.onColumnChange?.(params);\n  };\n\n  const handleClickAllShowColumns = (checked: boolean, ctx: { e: Event }) => {\n    if (checked) {\n      const newData = checkboxOptions.value?.map((t) => t.value) || [];\n      columnCheckboxKeys.value = newData;\n      props.onColumnChange?.({ type: 'check', columns: newData, e: ctx.e });\n    } else {\n      const disabledColKeys = checkboxOptions.value.filter((t) => t.disabled).map((t) => t.value);\n      columnCheckboxKeys.value = disabledColKeys;\n      props.onColumnChange?.({ type: 'uncheck', columns: disabledColKeys, e: ctx.e });\n    }\n  };\n\n  const handleToggleColumnController = () => {\n    dialogInstance.value = DialogPlugin.confirm({\n      header: globalConfig.value.columnConfigTitleText,\n      body: () => {\n        const widthMode = columnController.value?.displayType === 'fixed-width' ? 'fixed' : 'auto';\n        const checkedLength = intersectionChecked.value.length;\n        const isCheckedAll = checkedLength === enabledColKeys.value.size;\n        const isIndeterminate = checkedLength > 0 && checkedLength < enabledColKeys.value.size;\n        const defaultNode = (\n          <div\n            class={[\n              `${classPrefix.value}-table__column-controller`,\n              `${classPrefix.value}-table__column-controller--${widthMode}`,\n            ]}\n          >\n            <div class={`${classPrefix.value}-table__column-controller-body`}>\n              {/* 请选择需要在表格中显示的数据列 */}\n              <p class={`${classPrefix.value}-table__column-controller-desc`}>\n                {globalConfig.value.columnConfigDescriptionText}\n              </p>\n              <div class={`${classPrefix.value}-table__column-controller-block`}>\n                <Checkbox indeterminate={isIndeterminate} checked={isCheckedAll} onChange={handleClickAllShowColumns}>\n                  {globalConfig.value.selectAllText}\n                </Checkbox>\n              </div>\n              <div class={`${classPrefix.value}-table__column-controller-block`}>\n                <CheckboxGroup\n                  options={checkboxOptions.value}\n                  {...(columnController.value?.checkboxProps || {})}\n                  value={columnCheckboxKeys.value}\n                  onChange={handleCheckChange}\n                />\n              </div>\n            </div>\n          </div>\n        );\n        return defaultNode;\n      },\n      confirmBtn: globalConfig.value.confirmText,\n      cancelBtn: globalConfig.value.cancelText,\n      width: 612,\n      onConfirm: () => {\n        setTDisplayColumns([...columnCheckboxKeys.value]);\n        // 此处逻辑不要随意改动，涉及到 内置列配置按钮 和 不包含列配置按钮等场景\n        if (columnControllerVisible.value === undefined) {\n          dialogInstance.value.hide();\n        } else {\n          props.onColumnControllerVisibleChange?.(false, { trigger: 'cancel' });\n          context.emit('update:columnControllerVisible', false);\n        }\n      },\n      onClose: () => {\n        // 此处逻辑不要随意改动，涉及到 内置列配置按钮 和 不包含列配置按钮等场景\n        if (columnControllerVisible.value === undefined) {\n          dialogInstance.value.hide();\n        } else {\n          props.onColumnControllerVisibleChange?.(false, { trigger: 'confirm' });\n          context.emit('update:columnControllerVisible', false);\n        }\n      },\n      ...(columnController.value?.dialogProps || {}),\n    });\n  };\n\n  // columnControllerVisible 一般应用于不包含列配置按钮的场景，有外部直接控制弹框的显示或隐藏\n  watch(\n    [columnControllerVisible],\n    ([visible]) => {\n      if (visible === undefined) return;\n      if (dialogInstance.value) {\n        visible ? dialogInstance.value.show() : dialogInstance.value.hide();\n      } else {\n        visible && handleToggleColumnController();\n      }\n    },\n    { immediate: true },\n  );\n\n  const renderColumnController = () => {\n    const isColumnController = !!(columnController.value && Object.keys(columnController.value).length);\n    const placement = isColumnController ? columnController.value.placement || 'top-right' : '';\n    if (isColumnController && columnController.value.hideTriggerButton) return null;\n    const classes = [\n      `${classPrefix.value}-table__column-controller-trigger`,\n      { [`${classPrefix.value}-align-${placement}`]: !!placement },\n    ];\n    return (\n      <div class={classes}>\n        <TButton\n          theme=\"default\"\n          variant=\"outline\"\n          onClick={handleToggleColumnController}\n          content={globalConfig.value.columnConfigButtonText}\n          v-slots={{\n            icon: () => <SettingIcon />,\n          }}\n          {...props.columnController?.buttonProps}\n        ></TButton>\n      </div>\n    );\n  };\n\n  return {\n    tDisplayColumns,\n    columnCheckboxKeys,\n    checkboxOptions,\n    renderColumnController,\n  };\n}\n"],"names":["getColumnKeys","columns","keys","Set","i","len","length","col","colKey","add","children","useColumnController","props","context","useConfig","classPrefix","globalConfig","useGlobalIcon","SettingIcon","TdSettingIcon","toRefs","columnController","displayColumns","columnControllerVisible","dialogInstance","ref","enabledColKeys","computed","arr","value","fields","_toConsumableArray","filter","v","useDefaultValue","defaultDisplayColumns","onDisplayColumnsChange","_slicedToArray","tDisplayColumns","setTDisplayColumns","columnCheckboxKeys","checkboxOptions","getCheckboxOptions","intersectionChecked","intersection","watch","val","item","push","label","renderTitle","slots","disabled","has","handleCheckChange","ctx","params","type","currentColumn","getCurrentRowByKey","String","current","e","onColumnChange","handleClickAllShowColumns","checked","newData","map","t","disabledColKeys","handleToggleColumnController","DialogPlugin","confirm","header","columnConfigTitleText","body","widthMode","displayType","checkedLength","isCheckedAll","size","isIndeterminate","defaultNode","_createVNode","columnConfigDescriptionText","Checkbox","selectAllText","CheckboxGroup","_mergeProps","checkboxProps","confirmBtn","confirmText","cancelBtn","cancelText","width","onConfirm","hide","onColumnControllerVisibleChange","trigger","emit","onClose","dialogProps","visible","show","immediate","renderColumnController","isColumnController","Object","placement","hideTriggerButton","classes","TButton","columnConfigButtonText","buttonProps","icon"],"mappings":"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"}