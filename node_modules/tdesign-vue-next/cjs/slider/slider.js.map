{"version":3,"file":"slider.js","sources":["../../src/slider/slider.tsx"],"sourcesContent":["import {\n  defineComponent,\n  VNode,\n  ref,\n  reactive,\n  provide,\n  computed,\n  onBeforeUnmount,\n  onMounted,\n  watch,\n  toRefs,\n} from 'vue';\nimport props from './props';\nimport TSliderButton from './slider-button';\nimport { SliderValue } from './type';\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useSliderMark } from './hooks/useSliderMark';\nimport { useSliderInput } from './hooks/useSliderInput';\nimport { formatSlderValue, getStopStyle } from './util/common';\nimport { sliderPropsInjectKey } from './util/constants';\nimport useVModel from '../hooks/useVModel';\n\ninterface SliderButtonType {\n  setPosition: (param: number) => {};\n}\nexport default defineComponent({\n  name: 'TSlider',\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props: { ...props },\n\n  setup(props, ctx) {\n    const disabled = useFormDisabled();\n    const COMPONENT_NAME = usePrefixClass('slider');\n    const { STATUS } = useCommonClassName();\n    const { value, modelValue } = toRefs(props) as any;\n    const [sliderValue, setSliderValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    const sliderContainerRef = ref<HTMLDivElement>();\n    const sliderRef = ref<HTMLDivElement>();\n    const firstButtonRef = ref<SliderButtonType>();\n    const secondButtonRef = ref<SliderButtonType>();\n\n    // const sliderState = reactive({\n    //   // TODO: 该属性应该是暴露出来的api供用户配置才对\n    //   showSteps: true,\n    // });\n    const firstValue = ref(formatSlderValue(sliderValue.value, 'first'));\n    const secondValue = ref(formatSlderValue(sliderValue.value, 'second'));\n    const dragging = ref(false);\n    const sliderSize = ref(1);\n\n    const vertical = computed(() => {\n      return props.layout === 'vertical';\n    });\n\n    /** ----------------- 样式计算 start ------------- */\n    const containerClass = computed(() => [`${COMPONENT_NAME.value}__container`, { 'is-vertical': vertical.value }]);\n    const sliderClass = computed(() => {\n      return [\n        `${COMPONENT_NAME.value}`,\n        {\n          'is-vertical': vertical.value,\n          [`${COMPONENT_NAME.value}--with-input`]: props.inputNumberProps,\n          [`${COMPONENT_NAME.value}--vertical`]: vertical.value,\n          [STATUS.value.disabled]: disabled.value,\n        },\n      ];\n    });\n    const sliderRailClass = computed(() => [\n      `${COMPONENT_NAME.value}__rail`,\n      { 'show-input': props.inputNumberProps, disabled: disabled.value },\n    ]);\n    const runwayStyle = computed(() => {\n      return vertical.value ? { height: '100%' } : {};\n    });\n    const barStyle = computed(() => {\n      const barStart = props.range ? `${(100 * (minValue.value - props.min)) / rangeDiff.value}%` : '0%';\n      const cuttentDiff = props.range ? maxValue.value - minValue.value : firstValue.value - props.min;\n      const barSize = `${(100 * cuttentDiff) / rangeDiff.value}%`;\n      return vertical.value\n        ? {\n            height: barSize,\n            bottom: barStart,\n          }\n        : {\n            width: barSize,\n            left: barStart,\n          };\n    });\n    /** ----------------- 样式计算 end ------------- */\n\n    // 差值范围\n    const rangeDiff = computed(() => {\n      return props.max - props.min;\n    });\n    const minValue = computed(() => {\n      return Math.min(firstValue.value, secondValue.value);\n    });\n    const maxValue = computed(() => {\n      return Math.max(firstValue.value, secondValue.value);\n    });\n    const steps = computed(() => {\n      if (!props.showStep || props.min > props.max) return [];\n      if (props.step === 0) {\n        console.warn('[Element Warn][Slider]step should not be 0.');\n        return [];\n      }\n      const stepCount = rangeDiff.value / props.step;\n      const stepWidth = (100 * props.step) / rangeDiff.value;\n      const result = [];\n      for (let i = 1; i < stepCount; i++) {\n        result.push(i * stepWidth);\n      }\n      if (props.range) {\n        const r = result.filter(\n          (step) =>\n            step < (100 * (minValue.value - props.min)) / rangeDiff.value ||\n            props.step > (100 * (maxValue.value - props.max)) / rangeDiff.value,\n        );\n        return r;\n      }\n      return result.filter((step) => step > (100 * (firstValue.value - props.min)) / rangeDiff.value);\n    });\n    const precision = computed(() => {\n      const precisions = [props.min, props.max, props.step].map((item) => {\n        const decimalArr = `${item}`.split('.');\n        return decimalArr[1] ? decimalArr[1].length : 0;\n      });\n      return Math.max.apply(null, precisions);\n    });\n    // 防止值越级\n    const setValues = (value: SliderValue): SliderValue => {\n      const [min, max] = [props.min, props.max];\n      if (min > max) {\n        console.warn('[Slider] max should be greater than min.');\n        return;\n      }\n      // 双向滑块\n      if (props.range && Array.isArray(value)) {\n        let [maxLimit, minLimit] = [Math.min(...value), Math.max(...value)];\n        if (maxLimit > max) {\n          maxLimit = firstValue.value;\n        }\n        if (maxLimit < min) {\n          maxLimit = min;\n        }\n        if (minLimit < min) {\n          minLimit = secondValue.value;\n        }\n        if (minLimit > max) {\n          minLimit = max;\n        }\n        [firstValue.value, secondValue.value] = [maxLimit, minLimit];\n        return [maxLimit, minLimit];\n      }\n      let preValue = value;\n      if (preValue < min) {\n        preValue = min;\n      }\n      if (preValue > max) {\n        preValue = max;\n      }\n      return preValue;\n    };\n    // 只要触发修改就要有这个方法抛出change事件\n    const emitChange = (value: SliderValue) => {\n      let changeValue = value;\n      if (changeValue === undefined) {\n        if (props.range) {\n          changeValue = [firstValue.value, secondValue.value];\n        } else {\n          changeValue = firstValue.value;\n        }\n      }\n      const fixValue: SliderValue = setValues(changeValue);\n      setSliderValue(fixValue);\n    };\n\n    const resetSize = () => {\n      if (sliderRef.value) {\n        sliderSize.value = sliderRef.value[`client${vertical.value ? 'Height' : 'Width'}`];\n      }\n    };\n\n    // 是否以完成挂载（部分组合组件如inputNumber依赖于首次init后的状态值进行渲染）\n    const isAlreadyMount = ref(false);\n    // 初始化传入的value\n    const init = () => {\n      let valuetext: string | number;\n      if (props.range) {\n        if (Array.isArray(sliderValue.value)) {\n          firstValue.value = Math.max(props.min || 0, sliderValue.value[0]);\n          secondValue.value = Math.min(props.max || 100, sliderValue.value[1]);\n        } else {\n          firstValue.value = props.min || 0;\n          secondValue.value = props.max || 100;\n        }\n        valuetext = `${firstValue.value}-${secondValue.value}`;\n      } else {\n        if (typeof sliderValue.value !== 'number') {\n          firstValue.value = props.min;\n        } else {\n          firstValue.value = Math.min(props.max, Math.max(props.min, sliderValue.value as number));\n        }\n        valuetext = String(firstValue.value);\n      }\n      if (sliderContainerRef.value) {\n        sliderContainerRef.value.setAttribute('aria-valuetext', valuetext);\n      }\n      resetSize();\n      window.addEventListener('resize', resetSize);\n    };\n    // 相应button的位置\n    const setPosition = (percent: number): void => {\n      let targetValue = (percent * rangeDiff.value) / 100;\n      targetValue = props.min + targetValue;\n      if (!props.range && firstButtonRef.value) {\n        firstButtonRef.value.setPosition(percent);\n        return;\n      }\n      let button;\n      if (Math.abs(minValue.value - targetValue) < Math.abs(maxValue.value - targetValue)) {\n        button = firstValue.value < secondValue.value ? 'button1' : 'button2';\n      } else {\n        button = firstValue.value > secondValue.value ? 'button1' : 'button2';\n      }\n      if (button === 'button1' && firstButtonRef.value) {\n        firstButtonRef.value.setPosition(percent);\n      }\n      if (button === 'button2' && secondButtonRef.value) {\n        secondButtonRef.value.setPosition(percent);\n      }\n    };\n\n    // 全局点击\n    const onSliderClick = (event: MouseEvent): void => {\n      if (disabled.value || dragging.value) {\n        return;\n      }\n      if (!sliderRef.value) return;\n      resetSize();\n      let value = 0;\n      if (vertical.value) {\n        const sliderOffsetBottom = sliderRef.value.getBoundingClientRect().bottom;\n        value = ((sliderOffsetBottom - event.clientY) / sliderSize.value) * 100;\n        setPosition(value);\n      } else {\n        const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\n        value = ((event.clientX - sliderOffsetLeft) / sliderSize.value) * 100;\n        setPosition(value);\n      }\n    };\n\n    // mark 点击触发修改事件\n    const changeValue = (point: number) => {\n      if (disabled.value || dragging.value) {\n        return;\n      }\n      resetSize();\n      const value = Number((point / rangeDiff.value) * 100);\n      setPosition(value);\n      emitChange(point);\n    };\n\n    /** 副作用监听 */\n    watch(\n      () => sliderValue.value,\n      (newVal) => {\n        if (dragging.value === true) return;\n        if (Array.isArray(newVal) && props.range) {\n          [firstValue.value, secondValue.value] = newVal;\n        } else {\n          firstValue.value = newVal as number;\n        }\n      },\n    );\n\n    watch([firstValue, secondValue, dragging], (newStates, prevStates) => {\n      if (newStates[0] !== prevStates[0]) {\n        if (props.range) {\n          emitChange([minValue.value, maxValue.value]);\n        } else {\n          emitChange(firstValue.value);\n        }\n      }\n      if (newStates[1] !== prevStates[1]) {\n        if (props.range) {\n          emitChange([minValue.value, maxValue.value]);\n        }\n      }\n      if (newStates[2] !== prevStates[2] && newStates[2] === false) {\n        init();\n      }\n    });\n\n    /** 挂载&卸载 */\n    onMounted(() => {\n      init();\n      isAlreadyMount.value = true;\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', resetSize);\n    });\n\n    /** -------------------------- 渲染相关逻辑 start --------------------------  */\n    const markConfig = computed(() => ({\n      max: props.max,\n      min: props.min,\n      marks: props.marks,\n      vertical: vertical.value,\n      prefixName: COMPONENT_NAME.value,\n    }));\n    const renderMask = useSliderMark(markConfig);\n\n    const inputConfig = computed(() => ({\n      max: props.max,\n      min: props.min,\n      inputNumberProps: props.inputNumberProps,\n      step: props.step,\n      prefixName: COMPONENT_NAME.value,\n      vertical: vertical.value,\n      disabled: disabled.value,\n    }));\n    const renderInputNumber = useSliderInput(inputConfig);\n\n    const renderInputButton = (): VNode => {\n      const firstInputVal = firstValue.value;\n      const firstInputOnChange = (v: number) => {\n        firstValue.value = v;\n      };\n      const secondInputVal = secondValue.value;\n      const secondInputOnChange = (v: number) => {\n        secondValue.value = v;\n      };\n      return (\n        <div\n          class={[\n            `${COMPONENT_NAME.value}__input-container`,\n            {\n              'is-vertical': vertical.value,\n            },\n          ]}\n        >\n          {renderInputNumber(firstInputVal, firstInputOnChange)}\n          {props.range && <div class={`${COMPONENT_NAME.value}__center-line`} />}\n          {props.range && renderInputNumber(secondInputVal, secondInputOnChange)}\n        </div>\n      );\n    };\n    /** -------------------------- 渲染相关逻辑 end --------------------------  */\n\n    /** 父子共用状态&方法 */\n    const toggleDragging = (toState: boolean) => {\n      dragging.value = toState;\n    };\n\n    const { min, max, step } = toRefs(props);\n    provide(\n      sliderPropsInjectKey,\n      reactive({\n        min,\n        max,\n        step,\n        dragging,\n        toggleDragging,\n        precision,\n        disabled,\n        resetSize,\n        sliderSize,\n      }),\n    );\n\n    return () => (\n      <div class={containerClass.value} ref={sliderContainerRef}>\n        <div\n          class={sliderClass.value}\n          role=\"slider\"\n          aria-valuemin={props.min}\n          aria-valuemax={props.max}\n          aria-orientation={props.layout}\n          aria-disabled={disabled.value}\n          tooltip-props={props.tooltipProps}\n        >\n          <div class={sliderRailClass.value} style={runwayStyle.value} onClick={onSliderClick} ref={sliderRef}>\n            <div class={`${COMPONENT_NAME.value}__track`} style={barStyle.value} />\n            <TSliderButton\n              vertical={vertical.value}\n              value={firstValue.value}\n              ref={firstButtonRef}\n              disabled={disabled.value}\n              tooltip-props={props.tooltipProps}\n              label={props.label}\n              onInput={(v: number) => {\n                firstValue.value = v;\n              }}\n            />\n            {props.range && (\n              <TSliderButton\n                vertical={vertical.value}\n                value={secondValue.value}\n                ref={secondButtonRef}\n                disabled={disabled.value}\n                label={props.label}\n                tooltip-props={props.tooltipProps}\n                onInput={(v: number) => {\n                  secondValue.value = v;\n                }}\n              />\n            )}\n            {props.showStep && (\n              <div>\n                {steps.value.map((item, key) => (\n                  <div class={`${COMPONENT_NAME.value}__stop`} key={key} style={getStopStyle(item, vertical.value)} />\n                ))}\n              </div>\n            )}\n            {renderMask(changeValue)}\n          </div>\n        </div>\n        {isAlreadyMount.value && props.inputNumberProps && renderInputButton()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","model","prop","event","props","setup","ctx","disabled","useFormDisabled","COMPONENT_NAME","usePrefixClass","useCommonClassName","STATUS","toRefs","value","modelValue","useVModel","defaultValue","onChange","_slicedToArray","sliderValue","setSliderValue","sliderContainerRef","ref","sliderRef","firstButtonRef","secondButtonRef","firstValue","formatSlderValue","secondValue","dragging","sliderSize","vertical","computed","layout","containerClass","sliderClass","inputNumberProps","_defineProperty","sliderRailClass","runwayStyle","height","barStyle","barStart","range","minValue","min","rangeDiff","cuttentDiff","maxValue","barSize","bottom","width","left","max","Math","steps","showStep","step","console","warn","stepCount","stepWidth","result","i","push","r","filter","precision","precisions","map","item","decimalArr","split","length","apply","setValues","Array","isArray","maxLimit","minLimit","preValue","emitChange","changeValue","fixValue","resetSize","isAlreadyMount","init","valuetext","String","setAttribute","window","addEventListener","setPosition","percent","targetValue","button","abs","onSliderClick","sliderOffsetBottom","getBoundingClientRect","clientY","sliderOffsetLeft","clientX","point","Number","watch","newVal","newStates","prevStates","onMounted","onBeforeUnmount","removeEventListener","markConfig","marks","prefixName","renderMask","useSliderMark","inputConfig","renderInputNumber","useSliderInput","renderInputButton","firstInputVal","firstInputOnChange","v","secondInputVal","secondInputOnChange","_createVNode","toggleDragging","toState","provide","sliderPropsInjectKey","reactive","tooltipProps","TSliderButton","label","key","getStopStyle"],"mappings":"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"}