{"version":3,"file":"useTagList.js","sources":["../../src/tag-input/useTagList.tsx"],"sourcesContent":["import { ref, toRefs } from 'vue';\nimport { TagInputValue, TagInputChangeContext } from './type';\nimport { TagInputProps } from './interface';\nimport { InputValue } from '../input';\nimport Tag from '../tag';\nimport useVModel from '../hooks/useVModel';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useTNodeJSX } from '../hooks/tnode';\n\nexport type ChangeParams = [TagInputChangeContext];\n\n// handle tag add and remove\nexport default function useTagList(props: TagInputProps) {\n  const renderTNode = useTNodeJSX();\n  const classPrefix = usePrefixClass();\n  const { value, modelValue, onRemove, max, minCollapsedNum, size, disabled, readonly, tagProps, getDragProps } =\n    toRefs(props);\n  // handle controlled property and uncontrolled property\n  const [tagValue, setTagValue] = useVModel(value, modelValue, props.defaultValue || [], props.onChange);\n  const oldInputValue = ref<InputValue>();\n\n  // 点击标签关闭按钮，删除标签\n  const onClose = (p: { e?: MouseEvent; index: number; item: string | number }) => {\n    const arr = [...tagValue.value];\n    arr.splice(p.index, 1);\n    setTagValue(arr, { trigger: 'tag-remove', ...p });\n    onRemove.value?.({ ...p, trigger: 'tag-remove', value: arr });\n  };\n\n  const clearAll = (context: { e: MouseEvent }) => {\n    setTagValue([], { trigger: 'clear', e: context.e });\n  };\n\n  // 按下 Enter 键，新增标签\n  const onInnerEnter = (value: InputValue, context: { e: KeyboardEvent }) => {\n    const valueStr = value ? String(value).trim() : '';\n    if (!valueStr) return;\n    const isLimitExceeded = max && tagValue.value?.length >= max.value;\n    let newValue: TagInputValue = tagValue.value;\n    if (!isLimitExceeded) {\n      newValue = tagValue.value instanceof Array ? tagValue.value.concat(String(valueStr)) : [valueStr];\n      setTagValue(newValue, {\n        trigger: 'enter',\n        index: newValue.length - 1,\n        item: valueStr,\n        e: context.e,\n      });\n    }\n    props?.onEnter?.(newValue, { ...context, inputValue: value });\n  };\n\n  // 按下回退键，删除标签\n  const onInputBackspaceKeyUp = (value: InputValue, context: { e: KeyboardEvent }) => {\n    const { e } = context;\n    if (!tagValue.value || !tagValue.value.length) return;\n    // 回车键删除，输入框值为空时，才允许 Backspace 删除标签\n    if (!oldInputValue.value && ['Backspace', 'NumpadDelete'].includes(e.code)) {\n      const index = tagValue.value.length - 1;\n      const item = tagValue.value[index];\n      const trigger = 'backspace';\n      setTagValue(tagValue.value.slice(0, -1), { e, index, item, trigger });\n      onRemove.value?.({ e, index, item, trigger, value: tagValue.value });\n    }\n    oldInputValue.value = value;\n  };\n\n  const renderLabel = ({ displayNode, label }: { displayNode: any; label: any }) => {\n    const newList = minCollapsedNum.value ? tagValue.value.slice(0, minCollapsedNum.value) : tagValue.value;\n    const list = displayNode\n      ? [displayNode]\n      : newList?.map((item, index) => {\n          const tagContent = renderTNode('tag', { params: { value: item } });\n          return (\n            <Tag\n              key={`${item}${index}`}\n              size={size.value}\n              disabled={disabled.value}\n              onClose={(context: { e: MouseEvent }) => onClose({ e: context.e, item, index })}\n              closable={!readonly.value && !disabled.value}\n              {...getDragProps.value?.(index, item)}\n              {...tagProps.value}\n            >\n              {tagContent ?? item}\n            </Tag>\n          );\n        });\n    if (![null, undefined, ''].includes(label)) {\n      list.unshift(\n        <div class={`${classPrefix.value}-tag-input__prefix`} key=\"label\">\n          {label}\n        </div>,\n      );\n    }\n    // 超出省略\n    if (newList.length !== tagValue.value.length) {\n      const len = tagValue.value.length - newList.length;\n      const more = renderTNode('collapsedItems', {\n        params: {\n          value: tagValue.value,\n          count: tagValue.value.length,\n          collapsedTags: tagValue.value.slice(minCollapsedNum.value, tagValue.value.length),\n          collapsedSelectedItems: tagValue.value.slice(minCollapsedNum.value, tagValue.value.length),\n        },\n      });\n      list.push(more ?? <Tag key=\"more\">+{len}</Tag>);\n    }\n    return list;\n  };\n\n  return {\n    tagValue,\n    clearAll,\n    onClose,\n    onInnerEnter,\n    onInputBackspaceKeyUp,\n    renderLabel,\n  };\n}\n"],"names":["useTagList","props","renderTNode","useTNodeJSX","classPrefix","usePrefixClass","toRefs","value","modelValue","onRemove","max","minCollapsedNum","size","disabled","readonly","tagProps","getDragProps","useVModel","defaultValue","onChange","_slicedToArray","tagValue","setTagValue","oldInputValue","ref","onClose","p","arr","_toConsumableArray","splice","index","trigger","clearAll","context","e","onInnerEnter","valueStr","String","trim","isLimitExceeded","length","newValue","Array","concat","item","onEnter","inputValue","onInputBackspaceKeyUp","includes","code","slice","renderLabel","displayNode","label","newList","list","map","tagContent","params","_createVNode","Tag","_mergeProps","unshift","len","more","count","collapsedTags","collapsedSelectedItems","push"],"mappings":"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"}