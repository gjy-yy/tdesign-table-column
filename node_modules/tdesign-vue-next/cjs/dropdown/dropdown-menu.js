/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var dropdown_dropdownItem = require('./dropdown-item.js');
var utils_helper = require('../utils/helper.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_tnode = require('../hooks/tnode.js');
var dropdown_const = require('./const.js');
require('@babel/runtime/helpers/defineProperty');
require('tdesign-icons-vue-next');
require('../divider/index.js');
require('../divider/divider.js');
require('../divider/props.js');
require('../config-provider/useConfig.js');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('lodash/isEmpty');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/render-tnode.js');
require('lodash/isString');
require('lodash/isObject');
require('../utils/withInstall.js');
require('./dropdown-item-props.js');
require('../hooks/useRipple.js');
require('../hooks/useKeepAnimation.js');
require('../utils/set-style.js');
require('../hooks/useGlobalIcon.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');

var _DropdownMenu = vue.defineComponent({
  name: "TDropdownMenu",
  props: {
    options: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    maxHeight: {
      type: Number,
      "default": 300
    },
    maxColumnWidth: {
      type: Number || String,
      "default": 100
    },
    minColumnWidth: {
      type: Number || String,
      "default": 10
    },
    onClick: Function
  },
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    var path = vue.ref("");
    var renderTNode = hooks_tnode.useTNodeJSX();
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("dropdown__menu");
    var dropdownProvider = vue.inject(dropdown_const.injectKey);
    var maxHeight = dropdownProvider.maxHeight,
        maxColumnWidth = dropdownProvider.maxColumnWidth,
        minColumnWidth = dropdownProvider.minColumnWidth;

    var handleHoverItem = function handleHoverItem(p) {
      path.value = p;
    };

    var handleItemClick = function handleItemClick(data, context, onClick) {
      var _props$onClick;

      onClick === null || onClick === void 0 ? void 0 : onClick(data, context);
      (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, data, context);
    };

    var isActive = function isActive(item, pathPrefix) {
      var excludeSelf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var itemPath = "".concat(pathPrefix, "/").concat(item.value);

      if (excludeSelf && path.value === itemPath) {
        return false;
      }

      return path.value.indexOf(itemPath) === 0;
    };

    var renderMenuColumn = function renderMenuColumn(children, showSubmenu, pathPrefix) {
      var menuClass = ["".concat(COMPONENT_NAME.value, "-column"), "narrow-scrollbar", {
        submenu__visible: showSubmenu
      }];
      return vue.createVNode("div", {
        "class": menuClass,
        "style": {
          maxHeight: "".concat(maxHeight, "px"),
          maxWidth: utils_helper.pxCompat(maxColumnWidth),
          minWidth: utils_helper.pxCompat(minColumnWidth)
        }
      }, [children.map(function (item, idx) {
        return vue.createVNode(dropdown_dropdownItem["default"], {
          "key": idx,
          "disabled": item.disabled,
          "active": isActive(item, pathPrefix) || item.active,
          "value": item.value,
          "content": item.content,
          "divider": item.divider,
          "hasChildren": item.children && item.children.length > 0,
          "path": "".concat(pathPrefix, "/").concat(item.value),
          "maxColumnWidth": maxColumnWidth,
          "minColumnWidth": minColumnWidth,
          "onHover": handleHoverItem,
          "onClick": function onClick(data, context) {
            return handleItemClick(data, context, item.onClick);
          }
        }, null);
      })]);
    };

    return function () {
      var columns = [];
      var menuItems = props.options;
      var pathPrefix = "";

      if (slots["default"]) {
        return vue.createVNode("div", {
          "class": COMPONENT_NAME.value
        }, [vue.createVNode("div", {
          "class": ["".concat(COMPONENT_NAME.value, "-column"), "narrow-scrollbar"],
          "style": {
            maxHeight: "".concat(maxHeight, "px"),
            maxWidth: "".concat(maxColumnWidth, "px"),
            minWidth: "".concat(minColumnWidth, "px")
          }
        }, [renderTNode("default")])]);
      }

      while (menuItems && menuItems.length) {
        var activeItem = menuItems.find(function (item) {
          return isActive(item, pathPrefix, false);
        });
        columns.push(renderMenuColumn(menuItems, !!activeItem, pathPrefix));

        if (activeItem) {
          pathPrefix = "".concat(pathPrefix, "/").concat(activeItem.value);
          menuItems = activeItem.children || [];
        } else {
          menuItems = [];
        }
      }

      return vue.createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [columns]);
    };
  }
});

exports["default"] = _DropdownMenu;
//# sourceMappingURL=dropdown-menu.js.map
