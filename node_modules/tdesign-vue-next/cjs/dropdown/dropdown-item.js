/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var divider_index = require('../divider/index.js');
var dropdown_dropdownItemProps = require('./dropdown-item-props.js');
var hooks_useRipple = require('../hooks/useRipple.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var hooks_tnode = require('../hooks/tnode.js');
var dropdown_const = require('./const.js');
require('../divider/divider.js');
require('../divider/props.js');
require('../config-provider/useConfig.js');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('lodash/isEmpty');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/render-tnode.js');
require('lodash/isString');
require('lodash/isObject');
require('../utils/withInstall.js');
require('../hooks/useKeepAnimation.js');
require('../utils/set-style.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _DropdownItem = vue.defineComponent({
  name: "TDropdownItem",
  props: _objectSpread(_objectSpread({}, dropdown_dropdownItemProps["default"]), {}, {
    path: {
      type: String,
      "default": ""
    },
    hasChildren: {
      type: Boolean,
      "default": false
    },
    onHover: {
      type: Function
    }
  }),
  setup: function setup(props) {
    var renderContent = hooks_tnode.useContent();
    var itemRef = vue.ref();
    hooks_useRipple["default"](itemRef);

    var _useCommonClassName = hooks_useConfig.useCommonClassName(),
        STATUS = _useCommonClassName.STATUS;

    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("dropdown__item");
    var classPrefix = hooks_useConfig.usePrefixClass();

    var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
      ChevronRightIcon: tdesignIconsVueNext.ChevronRightIcon
    }),
        ChevronRightIcon = _useGlobalIcon.ChevronRightIcon;

    var dropdownProvider = vue.inject(dropdown_const.injectKey);
    var handleMenuClick = dropdownProvider.handleMenuClick;

    var renderSuffix = function renderSuffix() {
      return props.hasChildren ? vue.createVNode(ChevronRightIcon, {
        "class": "".concat(COMPONENT_NAME.value, "__item-icon")
      }, null) : null;
    };

    var handleItemClick = function handleItemClick(e) {
      e.stopPropagation();

      if (!props.hasChildren && !props.disabled) {
        var _props$onClick;

        var data = {
          value: props.value,
          path: props.path || "/".concat(props.value),
          content: props.content
        };
        (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, data, {
          e: e
        });
        handleMenuClick(data, {
          e: e
        });
      }
    };

    var handleMouseover = function handleMouseover() {
      var _props$onHover;

      (_props$onHover = props.onHover) === null || _props$onHover === void 0 ? void 0 : _props$onHover.call(props, props.path);
    };

    return function () {
      var _ref;

      var classes = [COMPONENT_NAME.value, (_ref = {}, _defineProperty__default["default"](_ref, "".concat(classPrefix.value, "-dropdown--suffix"), props.hasChildren), _defineProperty__default["default"](_ref, STATUS.value.disabled, props.disabled), _defineProperty__default["default"](_ref, STATUS.value.active, props.active), _ref)];
      return vue.createVNode("div", null, [vue.createVNode("div", {
        "ref": itemRef,
        "class": classes,
        "onClick": handleItemClick,
        "onMouseover": handleMouseover
      }, [vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "-content")
      }, [vue.createVNode("span", {
        "class": "".concat(COMPONENT_NAME.value, "-text")
      }, [renderContent("content", "default")])]), renderSuffix()]), props.divider ? vue.createVNode(divider_index.Divider, null, null) : null]);
    };
  }
});

exports["default"] = _DropdownItem;
//# sourceMappingURL=dropdown-item.js.map
