/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var _common_js_log_log = require('../_common/js/log/log.js');
var menu_headMenuProps = require('./head-menu-props.js');
var tabs_index = require('../tabs/index.js');
var utils_renderTnode = require('../utils/render-tnode.js');
var menu_vMenu = require('./v-menu.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useVModel = require('../hooks/useVModel.js');
var hooks_useDefaultValue = require('../hooks/useDefaultValue.js');
require('../tabs/tabs.js');
require('../tabs/tab-panel.js');
require('../tabs/tab-panel-props.js');
require('../hooks/useDestroyOnClose.js');
require('../hooks/tnode.js');
require('lodash/isEmpty');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../tabs/tab-nav.js');
require('lodash/debounce');
require('tdesign-icons-vue-next');
require('../tabs/props.js');
require('../_common/js/tabs/base.js');
require('../tabs/tab-nav-item.js');
require('../hooks/useRipple.js');
require('../hooks/useKeepAnimation.js');
require('../config-provider/useConfig.js');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../utils/set-style.js');
require('../hooks/useGlobalIcon.js');
require('../tabs/tab-nav-bar.js');
require('../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../hooks/useListener.js');
require('../hooks/useDragSort.js');
require('../utils/withInstall.js');
require('lodash/isString');
require('lodash/isObject');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !vue.isVNode(s);
}

var _HeadMenu = vue.defineComponent({
  name: "THeadMenu",
  props: _objectSpread({}, menu_headMenuProps["default"]),
  setup: function setup(props2, ctx) {
    var classPrefix = hooks_useConfig.usePrefixClass();
    vue.watchEffect(function () {
      if (ctx.slots.options) {
        _common_js_log_log["default"].warnOnce("TMenu", "`options` slot is going to be deprecated, please use `operations` for slot instead.");
      }
    });

    var _toRefs = vue.toRefs(props2),
        value = _toRefs.value,
        modelValue = _toRefs.modelValue,
        expanded = _toRefs.expanded;

    var _useVModel = hooks_useVModel["default"](value, modelValue, props2.defaultValue, props2.onChange),
        _useVModel2 = _slicedToArray__default["default"](_useVModel, 2),
        activeValue = _useVModel2[0],
        setActiveValue = _useVModel2[1];

    var _useDefaultValue = hooks_useDefaultValue["default"](expanded, props2.defaultExpanded, props2.onExpand, "expanded"),
        _useDefaultValue2 = _slicedToArray__default["default"](_useDefaultValue, 2),
        expandValues = _useDefaultValue2[0],
        setExpanded = _useDefaultValue2[1];

    var activeValues = vue.ref([]);
    var theme = vue.computed(function () {
      return props2.theme;
    });
    var menuClass = vue.computed(function () {
      return ["".concat(classPrefix.value, "-menu"), "".concat(classPrefix.value, "-head-menu"), "".concat(classPrefix.value, "-menu--").concat(props2.theme)];
    });
    var mode = vue.ref(props2.expandType);
    var submenu = vue.reactive([]);
    var vMenu = new menu_vMenu["default"]({
      isMutex: true,
      expandValues: expandValues.value
    });
    vue.provide("TdMenu", {
      mode: mode,
      theme: theme,
      vMenu: vMenu,
      isHead: true,
      expandValues: expandValues,
      activeValue: activeValue,
      activeValues: activeValues,
      select: function select(value2) {
        setActiveValue(value2);
      },
      open: function open(value2, type) {
        var expanded2 = _toConsumableArray__default["default"](expandValues.value);

        var index = expanded2.indexOf(value2);

        if (mode.value === "popup") {
          if (type === "add") {
            if (index === -1) {
              expanded2.push(value2);
            }
          } else if (type === "remove") {
            expanded2.splice(index, 1);
          }
        } else {
          expanded2.splice(0, 1);

          if (index === -1) {
            expanded2.push(value2);
          }
        }

        setExpanded(expanded2);
      }
    });

    var handleTabChange = function handleTabChange(value2) {
      setActiveValue(value2);
    };

    var handleSubmenuExpand = function handleSubmenuExpand(value2) {
      var ans = vMenu.getChild(value2);
      submenu.length = 0;
      submenu.push.apply(submenu, _toConsumableArray__default["default"](ans));
    };

    vue.watch(expandValues, function (value2) {
      if (mode.value === "normal") {
        handleSubmenuExpand(value2[0]);
      }
    });

    var updateActiveValues = function updateActiveValues(value2) {
      activeValues.value = vMenu.select(value2);
    };

    vue.watch(activeValue, updateActiveValues);
    vue.watch(function () {
      return props2.expandType;
    }, function (value2) {
      mode.value = value2;
    });
    vue.onMounted(function () {
      var _expandValues$value;

      activeValues.value = vMenu.select(activeValue.value);

      if (((_expandValues$value = expandValues.value) === null || _expandValues$value === void 0 ? void 0 : _expandValues$value.length) > 0) {
        handleSubmenuExpand(expandValues.value[0]);
      }
    });
    return {
      classPrefix: classPrefix,
      mode: mode,
      menuClass: menuClass,
      expandValues: expandValues,
      activeValue: activeValue,
      activeValues: activeValues,
      submenu: submenu,
      handleTabChange: handleTabChange
    };
  },
  methods: {
    renderNormalSubmenu: function renderNormalSubmenu() {
      var _slot;

      if (this.submenu.length === 0) return null;
      return vue.createVNode("ul", {
        "class": ["".concat(this.classPrefix, "-head-menu__submenu"), "".concat(this.classPrefix, "-submenu")]
      }, [vue.createVNode(tabs_index.Tabs, {
        "value": this.activeValue,
        "onChange": this.handleTabChange
      }, _isSlot(_slot = this.submenu.map(function (item) {
        var _item$vnode$;

        return vue.createVNode(tabs_index.TabPanel, {
          "value": item.value,
          "label": (_item$vnode$ = item.vnode()[0]) === null || _item$vnode$ === void 0 ? void 0 : _item$vnode$.children
        }, null);
      })) ? _slot : {
        "default": function _default() {
          return [_slot];
        }
      })]);
    }
  },
  render: function render() {
    var classPrefix = this.classPrefix;
    var operations = utils_renderTnode.renderContent(this, "operations", "options");
    var logo = utils_renderTnode.renderTNodeJSX(this, "logo");
    return vue.createVNode("div", {
      "class": this.menuClass
    }, [vue.createVNode("div", {
      "class": "".concat(classPrefix, "-head-menu__inner")
    }, [logo && vue.createVNode("div", {
      "class": "".concat(classPrefix, "-menu__logo")
    }, [logo]), vue.createVNode("ul", {
      "class": "".concat(classPrefix, "-menu")
    }, [utils_renderTnode.renderContent(this, "default", "content")]), operations && vue.createVNode("div", {
      "class": "".concat(classPrefix, "-menu__operations")
    }, [operations])]), this.mode === "normal" && this.renderNormalSubmenu()]);
  }
});

exports["default"] = _HeadMenu;
//# sourceMappingURL=head-menu.js.map
