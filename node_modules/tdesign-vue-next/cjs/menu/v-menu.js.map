{"version":3,"file":"v-menu.js","sources":["../../src/menu/v-menu.ts"],"sourcesContent":["import { ref, Slot } from 'vue';\n\ntype MenuValue = string | number;\ntype MenuNode = MenuValue | VMenuData;\n\ninterface VMenuData {\n  value: MenuValue;\n  parent?: MenuNode;\n  children: VMenuData[];\n  vnode?: Slot;\n}\n\ninterface VMenuItem {\n  value?: MenuValue;\n  parent: MenuValue;\n  vnode?: Slot;\n}\n\nconst getTreePaths = (node: VMenuData, val: MenuValue, ans: MenuValue[]): MenuValue[] => {\n  if (!node) return;\n  for (let i = 0; i < node.children.length; ++i) {\n    const child = node.children[i];\n    if (child.value === val) return [...ans, node.value];\n    const target = getTreePaths(child, val, [...ans, node.value]);\n    if (target) return target;\n  }\n};\n\nconst getTreeSameParentNodes = (node: VMenuData, val: MenuValue): VMenuData[] => {\n  if (!node) return [];\n  for (let i = 0; i < node.children.length; ++i) {\n    const child = node.children[i];\n    if (child.value === val) return node.children;\n    const target = getTreeSameParentNodes(child, val);\n    if (target) return target;\n  }\n};\n\nconst DFS = (root: VMenuData, val: MenuValue): VMenuData => {\n  if (root.value === val) return root;\n  if (root.children.length > 0) {\n    for (let i = 0, len = root.children.length; i < len; i++) {\n      const res = DFS(root.children[i], val);\n      if (res) return res;\n    }\n  }\n};\n\nexport default class VMenu {\n  data: VMenuData = null;\n\n  cache: Set<VMenuData> = new Set();\n\n  isMutex = ref(false);\n\n  expandValues: Set<MenuValue> = null;\n\n  constructor(options: Record<string, any>) {\n    const root: VMenuData = {\n      value: null,\n      parent: null,\n      children: [],\n    };\n    this.data = root;\n    this.isMutex = options?.isMutex;\n    this.expandValues = new Set(options?.expandValues);\n  }\n\n  add(item: VMenuItem) {\n    const { value, parent, vnode } = item;\n    const node: VMenuData = {\n      value,\n      parent,\n      children: [],\n      vnode,\n    };\n\n    this.cache.forEach((data, v2, set) => {\n      if (item.value === data.parent) {\n        node.children.push(data);\n        set.delete(data);\n      }\n    });\n    if (item.parent == null) {\n      this.data.children.push(node);\n      node.parent = this.data;\n    } else if (this.data.children.length > 0) {\n      const pNode = DFS(this.data, parent);\n      if (pNode) {\n        pNode.children.push(node);\n      } else {\n        this.cache.add(node);\n      }\n    } else {\n      this.cache.add(node);\n    }\n  }\n\n  select(val: MenuValue) {\n    const activeValues = getTreePaths(this.data, val, []) || [];\n\n    activeValues.push(val);\n    return activeValues.filter((val) => val != null);\n  }\n\n  expand(val: MenuValue) {\n    if (this.expandValues.has(val)) {\n      this.expandValues.delete(val);\n      return [...this.expandValues];\n    }\n\n    this.expandValues.add(val);\n\n    if (!this.isMutex.value) {\n      return [...this.expandValues];\n    }\n\n    const sameParentNodes = getTreeSameParentNodes(this.data, val) || [];\n    const sameLevelSubmenuValues = new Set(\n      sameParentNodes.filter((node) => node.children?.length > 0 && node.value !== val).map((child) => child.value),\n    );\n\n    this.expandValues.forEach((val) => {\n      const isHit = sameLevelSubmenuValues.has(val);\n      if (isHit) {\n        this.expandValues.delete(val);\n      }\n    });\n    return [...this.expandValues];\n  }\n\n  getChild(value: MenuValue) {\n    const target = DFS(this.data, value);\n\n    return target ? target.children : [];\n  }\n}\n"],"names":["getTreePaths","node","val","ans","i","children","length","child","value","_toConsumableArray","target","getTreeSameParentNodes","DFS","root","len","res","VMenu","options","_classCallCheck","_defineProperty","Set","ref","parent","data","isMutex","expandValues","item","vnode","cache","forEach","v2","set","push","pNode","add","activeValues","filter","has","sameParentNodes","sameLevelSubmenuValues","map","isHit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAkBA,IAAMA,YAAe,GAAA,SAAfA,YAAe,CAACC,IAAD,EAAkBC,GAAlB,EAAkCC,GAAlC,EAAoE;EACvF,IAAI,CAACF,IAAL,EAAW,OAAA;;AACX,EAAA,KAAA,IAASG,IAAI,CAAb,EAAgBA,CAAA,GAAIH,KAAKI,QAAL,CAAcC,MAAlC,EAA0C,EAAEF,CAA5C,EAA+C;AACvC,IAAA,IAAAG,KAAA,GAAQN,KAAKI,QAAL,CAAcD,CAAd,CAAR,CAAA;IACN,IAAIG,MAAMC,KAAN,KAAgBN,GAApB,EAAyB,OAAA,EAAA,CAAA,MAAA,CAAAO,sCAAA,CAAWN,GAAX,CAAA,EAAA,CAAgBF,IAAA,CAAKO,KAArB,CAAA,CAAA,CAAA;AACnB,IAAA,IAAAE,MAAA,GAASV,aAAaO,OAAOL,sDAASC,OAAKF,IAAK,CAAAO,MAAhD,CAAA,CAAA,CAAA;IACF,IAAAE,MAAA,EAAe,OAAAA,MAAA,CAAA;AACrB,GAAA;AACF,CARA,CAAA;;AAUA,IAAMC,sBAAA,GAAyB,SAAzBA,sBAAyB,CAACV,IAAD,EAAkBC,GAAlB,EAAkD;AAC/E,EAAA,IAAI,CAACD,IAAL,EAAW,OAAO,EAAP,CAAA;;AACX,EAAA,KAAA,IAASG,IAAI,CAAb,EAAgBA,CAAA,GAAIH,KAAKI,QAAL,CAAcC,MAAlC,EAA0C,EAAEF,CAA5C,EAA+C;AACvC,IAAA,IAAAG,KAAA,GAAQN,KAAKI,QAAL,CAAcD,CAAd,CAAR,CAAA;IACN,IAAIG,MAAMC,KAAN,KAAgBN,GAApB,EAAyB,OAAOD,IAAK,CAAAI,QAAZ,CAAA;AACnB,IAAA,IAAAK,MAAA,GAASC,sBAAuB,CAAAJ,KAAA,EAAOL,GAAP,CAAhC,CAAA;IACF,IAAAQ,MAAA,EAAe,OAAAA,MAAA,CAAA;AACrB,GAAA;AACF,CARA,CAAA;;AAUA,IAAME,GAAA,GAAM,SAANA,GAAM,CAACC,IAAD,EAAkBX,GAAlB,EAAgD;AAC1D,EAAA,IAAIW,KAAKL,KAAL,KAAeN,GAAnB,EAA+B,OAAAW,IAAA,CAAA;;AAC3B,EAAA,IAAAA,IAAA,CAAKR,QAAL,CAAcC,MAAd,GAAuB,CAAvB,EAA0B;AACnB,IAAA,KAAA,IAAAF,CAAA,GAAI,CAAJ,EAAOU,GAAM,GAAAD,IAAA,CAAKR,QAAL,CAAcC,MAA3B,EAAmCF,CAAA,GAAIU,GAAvC,EAA4CV,CAAK,EAAjD,EAAiD;AACxD,MAAA,IAAMW,GAAM,GAAAH,GAAA,CAAIC,IAAK,CAAAR,QAAL,CAAcD,CAAd,CAAJ,EAAsBF,GAAtB,CAAZ,CAAA;MACI,IAAAa,GAAA,EAAY,OAAAA,GAAA,CAAA;AAClB,KAAA;AACF,GAAA;AACF,CARA,CAAA;;IAUqBC;AASnB,EAAA,SAAA,KAAA,CAAYC,OAAZ,EAA0C;AAAA,IAAAC,mCAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAAC,mCAAA,CAAA,IAAA,EAAA,MAAA,EARxB,IAQwB,CAAA,CAAA;;IAAAA,mCANlB,CAAA,IAAA,EAAA,OAAA,qBAAIC,KAMc,CAAA,CAAA;;IAAAD,mCAJhCE,CAAAA,IAAAA,EAAAA,SAAAA,EAAAA,QAAI,MAI4B,CAAA,CAAA;;AAAA,IAAAF,mCAAA,CAAA,IAAA,EAAA,cAAA,EAFX,IAEW,CAAA,CAAA;;AACxC,IAAA,IAAMN,IAAkB,GAAA;AACtBL,MAAAA,KAAO,EAAA,IADe;AAEtBc,MAAAA,MAAQ,EAAA,IAFc;AAGtBjB,MAAAA,UAAU,EAAA;KAHZ,CAAA;IAKA,IAAKkB,CAAAA,IAAL,GAAYV,IAAZ,CAAA;IACA,IAAKW,CAAAA,OAAL,GAAeP,OAAf,KAAA,IAAA,IAAeA,OAAf,KAAeA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAS,CAAAO,OAAxB,CAAA;AACA,IAAA,IAAA,CAAKC,YAAL,GAAoB,IAAIL,GAAJ,CAAQH,OAAR,KAAQA,IAAAA,IAAAA,OAAR,KAAQA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAA,CAASQ,YAAjB,CAApB,CAAA;AACF,GAAA;;;;AAEA,IAAA,KAAA,EAAA,SAAA,GAAA,CAAIC,IAAJ,EAAqB;AACnB,MAAA,IAAQlB,KAAR,GAAiCkB,IAAjC,CAAQlB,KAAR;AAAA,UAAec,MAAf,GAAiCI,IAAjC,CAAeJ,MAAf;AAAA,UAAuBK,KAAvB,GAAiCD,IAAjC,CAAuBC,KAAvB,CAAA;AACA,MAAA,IAAM1B,IAAkB,GAAA;AACtBO,QAAAA,KAAA,EAAAA,KADsB;AAEtBc,QAAAA,MAAA,EAAAA,MAFsB;AAGtBjB,QAAAA,UAAU,EAHY;AAItBsB,QAAAA,KAAA,EAAAA,KAAAA;OAJF,CAAA;MAOA,IAAKC,CAAAA,KAAL,CAAWC,OAAX,CAAmB,UAACN,IAAD,EAAOO,EAAP,EAAWC,GAAX,EAAmB;AAChC,QAAA,IAAAL,IAAA,CAAKlB,KAAL,KAAee,IAAA,CAAKD,MAApB,EAA4B;AACzBrB,UAAAA,IAAA,CAAAI,QAAA,CAAS2B,IAAT,CAAcT,IAAd,CAAA,CAAA;UACLQ,GAAA,CAAA,QAAA,CAAA,CAAWR,IAAX,CAAA,CAAA;AACF,SAAA;OAJF,CAAA,CAAA;;AAMI,MAAA,IAAAG,IAAA,CAAKJ,MAAL,IAAe,IAAf,EAAqB;AAClB,QAAA,IAAA,CAAAC,IAAA,CAAKlB,QAAL,CAAc2B,IAAd,CAAmB/B,IAAnB,CAAA,CAAA;AACLA,QAAAA,IAAA,CAAKqB,MAAL,GAAc,IAAA,CAAKC,IAAnB,CAAA;OAFE,MAGO,IAAA,IAAA,CAAKA,IAAL,CAAUlB,QAAV,CAAmBC,MAAnB,GAA4B,CAA5B,EAA+B;QACxC,IAAM2B,KAAQ,GAAArB,GAAA,CAAI,KAAKW,IAAT,EAAeD,MAAf,CAAd,CAAA;;AACA,QAAA,IAAIW,KAAJ,EAAW;AACHA,UAAAA,KAAA,CAAA5B,QAAA,CAAS2B,IAAT,CAAc/B,IAAd,CAAA,CAAA;AACD,SAFP,MAEO;AACA,UAAA,IAAA,CAAA2B,KAAA,CAAMM,GAAN,CAAUjC,IAAV,CAAA,CAAA;AACP,SAAA;AACK,OAPI,MAOJ;AACA,QAAA,IAAA,CAAA2B,KAAA,CAAMM,GAAN,CAAUjC,IAAV,CAAA,CAAA;AACP,OAAA;AACF,KAAA;;;AAEA,IAAA,KAAA,EAAA,SAAA,MAAA,CAAOC,GAAP,EAAuB;AACf,MAAA,IAAAiC,YAAA,GAAenC,aAAa,IAAKuB,CAAAA,MAAMrB,KAAK,GAA7B,IAAoC,EAAnD,CAAA;MAENiC,YAAA,CAAaH,IAAb,CAAkB9B,GAAlB,CAAA,CAAA;AACA,MAAA,OAAOiC,YAAa,CAAAC,MAAb,CAAoB,UAAClC,IAAD,EAAA;QAAA,OAASA,QAAO,IAAhB,CAAA;AAAA,OAApB,CAAP,CAAA;AACF,KAAA;;;AAEA,IAAA,KAAA,EAAA,SAAA,MAAA,CAAOA,GAAP,EAAuB;AAAA,MAAA,IAAA,KAAA,GAAA,IAAA,CAAA;;AACrB,MAAA,IAAI,KAAKuB,YAAL,CAAkBY,GAAlB,CAAsBnC,GAAtB,CAAJ,EAAgC;QACzB,IAAAuB,CAAAA,YAAA,WAAoBvB,GAApB,CAAA,CAAA;AACE,QAAA,OAAAO,sCAAA,CAAI,KAAKgB,YAAT,CAAA,CAAA;AACT,OAAA;;AAEK,MAAA,IAAA,CAAAA,YAAA,CAAaS,GAAb,CAAiBhC,GAAjB,CAAA,CAAA;;AAED,MAAA,IAAA,CAAC,IAAA,CAAKsB,OAAL,CAAahB,KAAd,EAAqB;AAChB,QAAA,OAAAC,sCAAA,CAAI,KAAKgB,YAAT,CAAA,CAAA;AACT,OAAA;;MAEA,IAAMa,kBAAkB3B,sBAAuB,CAAA,IAAA,CAAKY,IAAL,EAAWrB,GAAX,CAAvB,IAA0C,EAAlE,CAAA;MACA,IAAMqC,yBAAyB,IAAInB,GAAJ,CAC7BkB,gBAAgBF,MAAhB,CAAuB,UAACnC,IAAD,EAAA;AAAA,QAAA,IAAA,cAAA,CAAA;;AAAA,QAAA,OAAU,CAAAA,CAAAA,cAAAA,GAAAA,IAAA,CAAKI,QAAL,MAAeC,IAAAA,IAAAA,cAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAAA,CAAAA,MAAf,IAAwB,CAAxB,IAA6BL,IAAK,CAAAO,KAAL,KAAeN,GAAtD,CAAA;AAAA,OAAvB,CAAkFsC,CAAAA,GAAlF,CAAsF,UAACjC,KAAD,EAAA;QAAA,OAAWA,MAAMC,KAAjB,CAAA;AAAA,OAAtF,CAD6B,CAA/B,CAAA;AAIK,MAAA,IAAA,CAAAiB,YAAA,CAAaI,OAAb,CAAqB,UAAC3B,IAAD,EAAS;AAC3B,QAAA,IAAAuC,KAAA,GAAQF,sBAAuB,CAAAF,GAAvB,CAA2BnC,IAA3B,CAAR,CAAA;;AACN,QAAA,IAAIuC,KAAJ,EAAW;UACJ,KAAA,CAAAhB,YAAA,CAAA,QAAA,CAAA,CAAoBvB,IAApB,CAAA,CAAA;AACP,SAAA;OAJG,CAAA,CAAA;AAME,MAAA,OAAAO,sCAAA,CAAI,KAAKgB,YAAT,CAAA,CAAA;AACT,KAAA;;;AAEA,IAAA,KAAA,EAAA,SAAA,QAAA,CAASjB,KAAT,EAA2B;MACzB,IAAME,MAAS,GAAAE,GAAA,CAAI,KAAKW,IAAT,EAAef,KAAf,CAAf,CAAA;AAEO,MAAA,OAAAE,MAAA,GAASA,MAAO,CAAAL,QAAhB,GAA2B,EAA3B,CAAA;AACT,KAAA;;;;;;;;"}