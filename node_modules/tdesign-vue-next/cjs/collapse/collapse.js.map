{"version":3,"file":"collapse.js","sources":["../../src/collapse/collapse.tsx"],"sourcesContent":["import { defineComponent, toRefs, provide, computed } from 'vue';\nimport props from './props';\nimport { CollapseValue, TdCollapseProps, CollapsePanelValue } from './type';\nimport useVModel from '../hooks/useVModel';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useConfig';\n\nexport default defineComponent({\n  name: 'TCollapse',\n  props,\n\n  setup(props: TdCollapseProps, context) {\n    const componentName = usePrefixClass('collapse');\n    const borderlessClass = usePrefixClass('-border-less');\n    const renderTNodeJSX = useTNodeJSX();\n    const { value, expandMutex, borderless, modelValue } = toRefs(props);\n    const [collapseValue, setCollapseValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const updateCollapseValue = (value: CollapsePanelValue) => {\n      let newValue: CollapseValue = [].concat(collapseValue.value || []);\n      const index = newValue.indexOf(value);\n      if (index >= 0) {\n        newValue.splice(index, 1);\n      } else if (expandMutex.value) {\n        newValue = [value];\n      } else {\n        newValue.push(value);\n      }\n      setCollapseValue(newValue);\n    };\n    const classes = computed(() => {\n      return [\n        componentName.value,\n        {\n          [borderlessClass.value]: !!borderless.value,\n        },\n      ];\n    });\n    const getUniqId = (() => {\n      let index = 0;\n      return () => index++;\n    })();\n    provide('collapseValue', collapseValue);\n    provide('updateCollapseValue', updateCollapseValue);\n    provide('collapseProps', toRefs(props));\n    provide('getUniqId', getUniqId);\n    return () => {\n      const nodes = renderTNodeJSX('default');\n      return <div class={classes.value}>{nodes}</div>;\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","context","componentName","usePrefixClass","borderlessClass","renderTNodeJSX","useTNodeJSX","toRefs","value","expandMutex","borderless","modelValue","useVModel","defaultValue","onChange","_slicedToArray","collapseValue","setCollapseValue","updateCollapseValue","newValue","concat","index","indexOf","splice","push","classes","computed","getUniqId","provide","nodes","_createVNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,gBAAeA,mBAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,WADuB;AAE7BC,EAAAA,KAAA,EAAAA,yBAF6B;AAI7BC,EAAAA,KAJ6B,EAIvBD,SAAAA,KAAAA,CAAAA,MAJuB,EAICE,OAJD,EAIU;AAC/B,IAAA,IAAAC,aAAA,GAAgBC,+BAAe,WAA/B,CAAA;AACA,IAAA,IAAAC,eAAA,GAAkBD,+BAAe,eAAjC,CAAA;IACN,IAAME,iBAAiBC,uBAAY,EAAnC,CAAA;;IACA,IAAuDC,OAAAA,GAAAA,WAAOR,OAA9D;QAAQS,KAAR,WAAQA,KAAR;QAAeC,WAAf,WAAeA,WAAf;QAA4BC,UAA5B,WAA4BA,UAA5B;QAAwCC,UAAxC,WAAwCA,UAAxC,CAAA;;AACM,IAAA,IAAA,UAAA,GAAoCC,0BAAA,CAAUJ,KAAV,EAAiBG,UAAjB,EAA6BZ,MAAAA,CAAMc,YAAnC,EAAiDd,MAAAA,CAAMe,QAAvD,CAApC;AAAA,QAAA,WAAA,GAAAC,kCAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAA,QAACC,aAAD,GAAA,WAAA,CAAA,CAAA,CAAA;AAAA,QAAgBC,gBAAhB,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA;;AACA,IAAA,IAAAC,mBAAA,GAAsB,SAAtBA,mBAAsB,CAACV,MAAD,EAA+B;MACzD,IAAIW,WAA0B,EAAA,CAAGC,MAAH,CAAUJ,aAAc,CAAAR,KAAd,IAAuB,EAAjC,CAA9B,CAAA;AACM,MAAA,IAAAa,KAAA,GAAQF,QAAS,CAAAG,OAAT,CAAiBd,MAAjB,CAAR,CAAA;;MACN,IAAIa,SAAS,CAAb,EAAgB;AACLF,QAAAA,QAAA,CAAAI,MAAA,CAAOF,KAAP,EAAc,CAAd,CAAA,CAAA;AACX,OAFA,MAEA,IAAWZ,YAAYD,KAAvB,EAA8B;QAC5BW,QAAA,GAAW,CAACX,MAAD,CAAX,CAAA;AACK,OAFP,MAEO;QACLW,QAAA,CAASK,IAAT,CAAchB,MAAd,CAAA,CAAA;AACF,OAAA;;MACAS,gBAAA,CAAiBE,QAAjB,CAAA,CAAA;KAVI,CAAA;;AAYA,IAAA,IAAAM,OAAA,GAAUC,aAAS,YAAM;AACtB,MAAA,OAAA,CACLxB,aAAc,CAAAM,KADT,0CAGFJ,eAAA,CAAgBI,KAHd,EAGsB,CAAC,CAACE,UAAW,CAAAF,KAHnC,CAAA,CAAA,CAAA;AAMR,MAPK,CAAA;;IAQN,IAAMmB,YAAa,YAAM;MACvB,IAAIN,KAAQ,GAAA,CAAZ,CAAA;MACA,OAAO,YAAA;AAAA,QAAA,OAAMA,KAAA,EAAN,CAAA;OAAP,CAAA;AACC,OAHH,CAAA;;AAIAO,IAAAA,WAAA,CAAQ,eAAR,EAAyBZ,aAAzB,CAAA,CAAA;AACAY,IAAAA,WAAA,CAAQ,qBAAR,EAA+BV,mBAA/B,CAAA,CAAA;AACQU,IAAAA,WAAA,CAAA,eAAA,EAAiBrB,UAAOR,CAAAA,MAAAA,CAAxB,CAAA,CAAA;AACR6B,IAAAA,WAAA,CAAQ,WAAR,EAAqBD,SAArB,CAAA,CAAA;AACA,IAAA,OAAO,YAAM;AACL,MAAA,IAAAE,KAAA,GAAQxB,eAAe,UAAvB,CAAA;AACN,MAAA,OAAAyB,eAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAmBL,OAAQ,CAAAjB,KAAAA;AAA3B,OAAA,EAAA,CAAmCqB,KAAnC,CAAA,CAAA,CAAA;KAFF,CAAA;AAIF,GAAA;AA1C6B,CAAA,CAA/B;;;;"}