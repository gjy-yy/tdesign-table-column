{"version":3,"file":"observe.js","sources":["../../../../src/_common/js/utils/observe.ts"],"sourcesContent":["export default function observe(\n  element: HTMLElement,\n  root: HTMLElement,\n  callback: Function,\n  marginBottom: number,\n): IntersectionObserver {\n  if (!window || !window.IntersectionObserver) {\n    callback();\n    return null;\n  }\n  let io: IntersectionObserver = null;\n  try {\n    io = new window.IntersectionObserver(\n      (entries) => {\n        const entry = entries[0];\n        if (entry.isIntersecting) {\n          callback();\n          io.unobserve(element);\n        }\n      },\n      {\n        rootMargin: `0px 0px ${marginBottom}px 0px`,\n        root,\n      },\n    );\n    io.observe(element);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    callback();\n  }\n  return io;\n}\n"],"names":["observe","element","root","callback","marginBottom","window","IntersectionObserver","io","entries","entry","isIntersecting","unobserve","rootMargin","e","console","error"],"mappings":";;;;;;;;;;AAAA,SAAwBA,OAAxB,CACEC,OADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,YAJF,EAKwB;AACtB,EAAA,IAAI,CAACC,MAAD,IAAW,CAACA,MAAA,CAAOC,oBAAvB,EAA6C;IAClCH,QAAA,EAAA,CAAA;AACF,IAAA,OAAA,IAAA,CAAA;AACT,GAAA;;EACA,IAAII,EAA2B,GAAA,IAA/B,CAAA;;EACI,IAAA;IACFA,EAAA,GAAK,IAAIF,MAAO,CAAAC,oBAAX,CACH,UAACE,OAAD,EAAa;AACX,MAAA,IAAMC,QAAQD,OAAQ,CAAA,CAAA,CAAtB,CAAA;;MACA,IAAIC,MAAMC,cAAV,EAA0B;QACfP,QAAA,EAAA,CAAA;QACTI,EAAA,CAAGI,SAAH,CAAaV,OAAb,CAAA,CAAA;AACF,OAAA;AACF,KAPG,EAQH;MACEW,8BAAuBR,cADzB,QAAA,CAAA;AAEEF,MAAAA,IAAA,EAAAA,IAAAA;AAFF,KARG,CAAL,CAAA;IAaAK,EAAA,CAAGP,OAAH,CAAWC,OAAX,CAAA,CAAA;GAdE,QAeKY,GAAP;IAEAC,OAAA,CAAQC,KAAR,CAAcF,CAAd,CAAA,CAAA;IACSV,QAAA,EAAA,CAAA;AACX,GAAA;;AACO,EAAA,OAAAI,EAAA,CAAA;AACT;;;;"}