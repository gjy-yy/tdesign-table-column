{"version":3,"file":"base.js","sources":["../../../../src/_common/js/tabs/base.ts"],"sourcesContent":["const getDomWidth = (dom: HTMLElement): number => dom?.offsetWidth || 0;\n\ntype navPlacement = 'left' | 'right' | 'top' | 'bottom';\n\nexport interface allElementDeps {\n  activeTab?: HTMLElement;\n  navsContainer?: HTMLElement;\n  navsWrap?: HTMLElement;\n  leftOperations?: HTMLElement;\n  toLeftBtn?: HTMLElement;\n  rightOperations?: HTMLElement;\n  toRightBtn?: HTMLElement;\n}\n\nexport default {\n  /**\n   * 计算滚动条的当前偏移值，用于 resize 时调整\n   * @returns number\n   */\n  calcScrollLeft(elements: allElementDeps, scrollLeft: number): number {\n    const container = elements.navsContainer;\n    const wrap = elements.navsWrap;\n    const { rightOperations } = elements;\n    const rightOperationsZoneWidth = getDomWidth(rightOperations);\n\n    if (!wrap || !container) return scrollLeft;\n\n    const containerWidth = getDomWidth(container);\n    const wrapWidth = getDomWidth(wrap);\n\n    if (wrapWidth <= containerWidth) {\n      // 容器大于选项，则设置第一个 nav-item 和容器左边相连\n      return 0;\n    }\n\n    // 一般发生在 window.resize，容器变大，此时设置最后一个 nav-item 和容器右边相连\n    if (scrollLeft + containerWidth - rightOperationsZoneWidth > wrapWidth) {\n      return wrapWidth + rightOperationsZoneWidth - containerWidth;\n    }\n\n    return scrollLeft;\n  },\n\n  /**\n   * 计算往左滚动按钮是否应该出现\n   * @param depElement 计算时依赖的元素\n   * @param scrollLeft 当前的 scrollLeft\n   * @param placement navs 的位置\n   * @returns boolean\n   */\n  calculateCanToLeft(depElement: allElementDeps, scrollLeft: number, placement: navPlacement) {\n    if (['left', 'right'].includes(placement.toLowerCase())) {\n      return false;\n    }\n    const { navsContainer: container, navsWrap: wrap, leftOperations, toLeftBtn } = depElement;\n    if (!wrap || !container) {\n      return false;\n    }\n    const leftOperationsZoneWidth = getDomWidth(leftOperations);\n    const leftIconWidth = getDomWidth(toLeftBtn);\n\n    return scrollLeft + Math.round(leftOperationsZoneWidth - leftIconWidth) > 0;\n  },\n\n  /**\n   * 计算往右滚动按钮是否应该出现\n   * @param depElement 计算时依赖的元素\n   * @param scrollLeft 当前的偏移值\n   * @param placement navs 的位置\n   * @returns boolean\n   */\n  calculateCanToRight(depElement: allElementDeps, scrollLeft: number, placement: navPlacement) {\n    if (['left', 'right'].includes(placement.toLowerCase())) {\n      return false;\n    }\n    const { navsContainer: container, navsWrap: wrap, rightOperations, toRightBtn } = depElement;\n    if (!wrap || !container) {\n      return false;\n    }\n    const rightOperationsZoneWidth = getDomWidth(rightOperations);\n    const rightIconWidth = getDomWidth(toRightBtn);\n    return (\n      scrollLeft + getDomWidth(container) - (rightOperationsZoneWidth - rightIconWidth)\n      - getDomWidth(wrap) < -1\n    ); // 小数像素不精确，所以这里判断小于-1\n  },\n\n  /**\n   * 计算将当前 tab 滚动到可视区域的偏移值\n   * @param depElement 计算时依赖的元素\n   * @param scrollLeft 当前的偏移值\n   * @returns number\n   */\n  moveActiveTabIntoView(depElement: allElementDeps, scrollLeft: number): number {\n    const {\n      activeTab,\n      navsContainer: container,\n      navsWrap,\n      leftOperations,\n      toLeftBtn,\n      rightOperations,\n      toRightBtn,\n    } = depElement;\n    if (!activeTab) return scrollLeft;\n    const totalWidthBeforeActiveTab = activeTab.offsetLeft;\n    if (!container) return scrollLeft;\n    // 如果要当前tab左边对齐左操作栏的右边以展示完整的tab，需要获取左边操作栏的宽度\n    const _getLeftCoverWidth = () => {\n      const leftOperationsZoneWidth = getDomWidth(leftOperations);\n      const leftIconWidth = getDomWidth(toLeftBtn);\n      // 判断当前tab是不是第一个tab\n      if (totalWidthBeforeActiveTab === 0) {\n        // 如果是第一个tab要移动到最左边，则要减去左箭头的宽度，因为此时左箭头会被隐藏起来\n        return leftOperationsZoneWidth - leftIconWidth;\n      }\n      return leftOperationsZoneWidth;\n    };\n    const leftCoverWidth = _getLeftCoverWidth();\n    // 判断当前tab是不是在左边被隐藏\n    const isCurrentTabHiddenInLeftZone = scrollLeft + leftCoverWidth > totalWidthBeforeActiveTab;\n    if (isCurrentTabHiddenInLeftZone) {\n      return totalWidthBeforeActiveTab - leftCoverWidth;\n    }\n\n    // move to right\n    const activeTabWidth = activeTab.offsetWidth;\n    if (!container || !navsWrap) return scrollLeft;\n    const containerWidth = getDomWidth(container);\n    // 如果要当前tab右边对齐右操作栏的左边以展示完整的tab，需要获取右边操作栏的宽度\n    const _getRightCoverWidth = () => {\n      const rightOperationsZoneWidth = getDomWidth(rightOperations);\n      const rightIconWidth = getDomWidth(toRightBtn);\n      const wrapWidth = getDomWidth(navsWrap);\n      // 判断当前tab是不是最后一个tab，小于1是防止小数像素导致值不相等的情况\n      if (Math.abs(totalWidthBeforeActiveTab + activeTabWidth - wrapWidth) < 1) {\n        // 如果是最后一个tab，则要减去右箭头的宽度，因为此时右箭头会被隐藏\n        return rightOperationsZoneWidth - rightIconWidth;\n      }\n      return rightOperationsZoneWidth;\n    };\n    const rightCoverWidth = _getRightCoverWidth();\n    // 判断当前tab是不是在右边被隐藏\n    const isHiddenInRightZone = scrollLeft + containerWidth - rightCoverWidth\n      < totalWidthBeforeActiveTab + activeTabWidth;\n    if (isHiddenInRightZone) {\n      return totalWidthBeforeActiveTab + activeTabWidth - containerWidth + rightCoverWidth;\n    }\n    return scrollLeft;\n  },\n\n  /**\n   * 计算点击“往左按钮”时，需要的偏移值\n   * @param depElement 计算时依赖的元素\n   * @param scrollLeft 当前的偏移值\n   * @returns number\n   */\n  scrollToLeft(depElement: allElementDeps, scrollLeft: number): number {\n    const { navsContainer: container, leftOperations, toLeftBtn } = depElement;\n    if (!container) return 0;\n    const leftOperationsZoneWidth = getDomWidth(leftOperations);\n    const leftIconWidth = getDomWidth(toLeftBtn);\n    const containerWidth = getDomWidth(container);\n\n    return Math.max(-(leftOperationsZoneWidth - leftIconWidth), scrollLeft - containerWidth);\n  },\n\n  /**\n   * 计算点击“往右按钮”时，需要的偏移值\n   * @param depElement 计算时依赖的元素\n   * @param scrollLeft 当前的偏移值\n   * @returns number\n   */\n  scrollToRight(depElement: allElementDeps, scrollLeft: number): number {\n    const { navsContainer: container, navsWrap: wrap, rightOperations, toRightBtn } = depElement;\n    const rightOperationsZoneWidth = getDomWidth(rightOperations);\n    const rightIconWidth = getDomWidth(toRightBtn);\n    const containerWidth = getDomWidth(container);\n    const wrapWidth = getDomWidth(wrap);\n\n    return Math.min(\n      scrollLeft + containerWidth - rightOperationsZoneWidth - rightIconWidth,\n      wrapWidth - containerWidth + rightOperationsZoneWidth - rightIconWidth,\n    );\n  },\n};\n"],"names":["getDomWidth","dom","offsetWidth","calcScrollLeft","elements","scrollLeft","container","navsContainer","wrap","navsWrap","rightOperations","rightOperationsZoneWidth","containerWidth","wrapWidth","calculateCanToLeft","depElement","placement","includes","toLowerCase","leftOperations","toLeftBtn","leftOperationsZoneWidth","leftIconWidth","Math","round","calculateCanToRight","toRightBtn","rightIconWidth","moveActiveTabIntoView","activeTab","totalWidthBeforeActiveTab","offsetLeft","_getLeftCoverWidth","leftCoverWidth","isCurrentTabHiddenInLeftZone","activeTabWidth","_getRightCoverWidth","abs","rightCoverWidth","isHiddenInRightZone","scrollToLeft","max","scrollToRight","min"],"mappings":";;;;;;;;;;AAAA,IAAMA,WAAc,GAAA,SAAdA,WAAc,CAACC,GAAD,EAAA;EAAA,OAA8B,CAAAA,GAAA,KAAA,IAAA,IAAAA,GAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,GAAA,CAAKC,WAAL,KAAoB,CAAlD,CAAA;AAAA,CAApB,CAAA;;AAcA,cAAe;AAKbC,EAAAA,cALa,EAKEC,SAAAA,cAAAA,CAAAA,QALF,EAK4BC,UAL5B,EAKwD;AACnE,IAAA,IAAMC,YAAYF,QAAS,CAAAG,aAA3B,CAAA;AACA,IAAA,IAAMC,OAAOJ,QAAS,CAAAK,QAAtB,CAAA;AACM,IAAA,IAAEC,eAAF,GAAsBN,QAAtB,CAAEM,eAAF,CAAA;AACA,IAAA,IAAAC,wBAAA,GAA2BX,YAAYU,gBAAvC,CAAA;AAEF,IAAA,IAAA,CAACF,IAAD,IAAS,CAACF,SAAV,EAA4B,OAAAD,UAAA,CAAA;AAE1B,IAAA,IAAAO,cAAA,GAAiBZ,YAAYM,UAA7B,CAAA;AACA,IAAA,IAAAO,SAAA,GAAYb,YAAYQ,KAAxB,CAAA;;IAEN,IAAIK,aAAaD,cAAjB,EAAiC;AAExB,MAAA,OAAA,CAAA,CAAA;AACT,KAAA;;AAGI,IAAA,IAAAP,UAAA,GAAaO,cAAb,GAA8BD,wBAA9B,GAAyDE,SAAzD,EAAoE;AACtE,MAAA,OAAOA,YAAYF,wBAAZ,GAAuCC,cAA9C,CAAA;AACF,KAAA;;AAEO,IAAA,OAAAP,UAAA,CAAA;GA1BI;AAoCbS,EAAAA,kBApCa,8BAoCMC,UApCN,EAoCkCV,UApClC,EAoCsDW,SApCtD,EAoC+E;AACtF,IAAA,IAAA,CAAC,MAAD,EAAS,OAAT,CAAkBC,CAAAA,QAAlB,CAA2BD,SAAU,CAAAE,WAAV,EAA3B,CAAA,EAAqD;AAChD,MAAA,OAAA,KAAA,CAAA;AACT,KAAA;;AACA,IAAA,IAAuBZ,SAAvB,GAAgFS,UAAhF,CAAQR,aAAR;AAAA,QAA4CC,IAA5C,GAAgFO,UAAhF,CAAkCN,QAAlC;AAAA,QAAkDU,cAAlD,GAAgFJ,UAAhF,CAAkDI,cAAlD;AAAA,QAAkEC,SAAlE,GAAgFL,UAAhF,CAAkEK,SAAlE,CAAA;;AACI,IAAA,IAAA,CAACZ,IAAD,IAAS,CAACF,SAAV,EAAqB;AAChB,MAAA,OAAA,KAAA,CAAA;AACT,KAAA;;AACM,IAAA,IAAAe,uBAAA,GAA0BrB,YAAYmB,eAAtC,CAAA;AACA,IAAA,IAAAG,aAAA,GAAgBtB,YAAYoB,UAA5B,CAAA;IAEN,OAAOf,UAAa,GAAAkB,IAAA,CAAKC,KAAL,CAAWH,uBAAA,GAA0BC,aAArC,CAAb,GAAmE,CAA1E,CAAA;GA/CW;AAyDbG,EAAAA,mBAzDa,+BAyDOV,UAzDP,EAyDmCV,UAzDnC,EAyDuDW,SAzDvD,EAyDgF;AACvF,IAAA,IAAA,CAAC,MAAD,EAAS,OAAT,CAAkBC,CAAAA,QAAlB,CAA2BD,SAAU,CAAAE,WAAV,EAA3B,CAAA,EAAqD;AAChD,MAAA,OAAA,KAAA,CAAA;AACT,KAAA;;AACA,IAAA,IAAuBZ,SAAvB,GAAkFS,UAAlF,CAAQR,aAAR;AAAA,QAA4CC,IAA5C,GAAkFO,UAAlF,CAAkCN,QAAlC;AAAA,QAAkDC,eAAlD,GAAkFK,UAAlF,CAAkDL,eAAlD;AAAA,QAAmEgB,UAAnE,GAAkFX,UAAlF,CAAmEW,UAAnE,CAAA;;AACI,IAAA,IAAA,CAAClB,IAAD,IAAS,CAACF,SAAV,EAAqB;AAChB,MAAA,OAAA,KAAA,CAAA;AACT,KAAA;;AACM,IAAA,IAAAK,wBAAA,GAA2BX,YAAYU,gBAAvC,CAAA;AACA,IAAA,IAAAiB,cAAA,GAAiB3B,YAAY0B,WAA7B,CAAA;AAEJ,IAAA,OAAArB,UAAA,GAAaL,YAAYM,UAAzB,IAAuCK,2BAA2BgB,cAAlE,IACE3B,WAAA,CAAYQ,IAAZ,CADF,GACsB,CAAA,CADtB,CAAA;GApES;AA+EboB,EAAAA,qBA/Ea,EA+ESb,SAAAA,qBAAAA,CAAAA,UA/ET,EA+EqCV,UA/ErC,EA+EiE;AACtE,IAAA,IACJwB,SADI,GAQFd,UARE,CACJc,SADI;AAAA,QAEWvB,SAFX,GAQFS,UARE,CAEJR,aAFI;AAAA,QAGJE,QAHI,GAQFM,UARE,CAGJN,QAHI;AAAA,QAIJU,cAJI,GAQFJ,UARE,CAIJI,cAJI;AAAA,QAKJC,SALI,GAQFL,UARE,CAKJK,SALI;AAAA,QAMJV,eANI,GAQFK,UARE,CAMJL,eANI;AAAA,QAOJgB,UAPI,GAQFX,UARE,CAOJW,UAPI,CAAA;AASN,IAAA,IAAI,CAACG,SAAL,EAAuB,OAAAxB,UAAA,CAAA;AACvB,IAAA,IAAMyB,4BAA4BD,SAAU,CAAAE,UAA5C,CAAA;AACA,IAAA,IAAI,CAACzB,SAAL,EAAuB,OAAAD,UAAA,CAAA;;AAEvB,IAAA,IAAM2B,qBAAqB,SAArBA,kBAAqB,GAAM;AACzB,MAAA,IAAAX,uBAAA,GAA0BrB,YAAYmB,eAAtC,CAAA;AACA,MAAA,IAAAG,aAAA,GAAgBtB,YAAYoB,UAA5B,CAAA;;MAEN,IAAIU,8BAA8B,CAAlC,EAAqC;QAEnC,OAAOT,uBAA0B,GAAAC,aAAjC,CAAA;AACF,OAAA;;AACO,MAAA,OAAAD,uBAAA,CAAA;KART,CAAA;;IAUA,IAAMY,iBAAiBD,kBAAmB,EAA1C,CAAA;;AAEM,IAAA,IAAAE,4BAAA,GAA+B7B,aAAa4B,cAAb,GAA8BH,yBAA7D,CAAA;;AACN,IAAA,IAAII,4BAAJ,EAAkC;MAChC,OAAOJ,yBAA4B,GAAAG,cAAnC,CAAA;AACF,KAAA;;AAGA,IAAA,IAAME,iBAAiBN,SAAU,CAAA3B,WAAjC,CAAA;AACI,IAAA,IAAA,CAACI,SAAD,IAAc,CAACG,QAAf,EAAgC,OAAAJ,UAAA,CAAA;AAC9B,IAAA,IAAAO,cAAA,GAAiBZ,YAAYM,UAA7B,CAAA;;AAEN,IAAA,IAAM8B,sBAAsB,SAAtBA,mBAAsB,GAAM;AAC1B,MAAA,IAAAzB,wBAAA,GAA2BX,YAAYU,gBAAvC,CAAA;AACA,MAAA,IAAAiB,cAAA,GAAiB3B,YAAY0B,WAA7B,CAAA;AACA,MAAA,IAAAb,SAAA,GAAYb,YAAYS,SAAxB,CAAA;;MAEN,IAAIc,KAAKc,GAAL,CAASP,yBAAA,GAA4BK,cAA5B,GAA6CtB,SAAtD,CAAmE,GAAA,CAAvE,EAA0E;QAExE,OAAOF,wBAA2B,GAAAgB,cAAlC,CAAA;AACF,OAAA;;AACO,MAAA,OAAAhB,wBAAA,CAAA;KATT,CAAA;;IAWA,IAAM2B,kBAAkBF,mBAAoB,EAA5C,CAAA;;IAEA,IAAMG,mBAAsB,GAAAlC,UAAA,GAAaO,cAAb,GAA8B0B,eAA9B,GACxBR,yBAA4B,GAAAK,cADhC,CAAA;;AAEA,IAAA,IAAII,mBAAJ,EAAyB;AAChB,MAAA,OAAAT,yBAAA,GAA4BK,cAA5B,GAA6CvB,cAA7C,GAA8D0B,eAA9D,CAAA;AACT,KAAA;;AACO,IAAA,OAAAjC,UAAA,CAAA;GArII;AA8IbmC,EAAAA,YA9Ia,EA8IAzB,SAAAA,YAAAA,CAAAA,UA9IA,EA8I4BV,UA9I5B,EA8IwD;AACnE,IAAA,IAAuBC,SAAvB,GAAgES,UAAhE,CAAQR,aAAR;AAAA,QAAkCY,cAAlC,GAAgEJ,UAAhE,CAAkCI,cAAlC;AAAA,QAAkDC,SAAlD,GAAgEL,UAAhE,CAAkDK,SAAlD,CAAA;AACA,IAAA,IAAI,CAACd,SAAL,EAAuB,OAAA,CAAA,CAAA;AACjB,IAAA,IAAAe,uBAAA,GAA0BrB,YAAYmB,eAAtC,CAAA;AACA,IAAA,IAAAG,aAAA,GAAgBtB,YAAYoB,UAA5B,CAAA;AACA,IAAA,IAAAR,cAAA,GAAiBZ,YAAYM,UAA7B,CAAA;AAEN,IAAA,OAAOiB,KAAKkB,GAAL,CAAS,EAAEpB,uBAA0B,GAAAC,aAA5B,CAAT,EAAqDjB,aAAaO,cAAlE,CAAP,CAAA;GArJW;AA8Jb8B,EAAAA,aA9Ja,EA8JC3B,SAAAA,aAAAA,CAAAA,UA9JD,EA8J6BV,UA9J7B,EA8JyD;AACpE,IAAA,IAAuBC,SAAvB,GAAkFS,UAAlF,CAAQR,aAAR;AAAA,QAA4CC,IAA5C,GAAkFO,UAAlF,CAAkCN,QAAlC;AAAA,QAAkDC,eAAlD,GAAkFK,UAAlF,CAAkDL,eAAlD;AAAA,QAAmEgB,UAAnE,GAAkFX,UAAlF,CAAmEW,UAAnE,CAAA;AACM,IAAA,IAAAf,wBAAA,GAA2BX,YAAYU,gBAAvC,CAAA;AACA,IAAA,IAAAiB,cAAA,GAAiB3B,YAAY0B,WAA7B,CAAA;AACA,IAAA,IAAAd,cAAA,GAAiBZ,YAAYM,UAA7B,CAAA;AACA,IAAA,IAAAO,SAAA,GAAYb,YAAYQ,KAAxB,CAAA;AAEN,IAAA,OAAOe,IAAK,CAAAoB,GAAL,CACLtC,UAAA,GAAaO,cAAb,GAA8BD,wBAA9B,GAAyDgB,cADpD,EAELd,SAAA,GAAYD,cAAZ,GAA6BD,wBAA7B,GAAwDgB,cAFnD,CAAP,CAAA;AAIF,GAAA;AAzKa,CAAf;;;;"}