{"version":3,"file":"utils.js","sources":["../../../../src/_common/js/upload/utils.ts"],"sourcesContent":["import { SizeUnit, TdUploadFile } from './types';\n\n/**\n * [*] 表示方法采用这种方式\n * [x] 表示方法不采用这种方式\n *\n * [x] bit      位              b     0 or 1\n * [*] byte     字节            B     8 bits\n * [x] kilobit  千位            kb    1000 bites\n * [*] kilobyte 千字节(二进制)   KB    1024 bytes\n * [x] kilobyte 千字节(十进制)   KB    1000 bytes\n * [x] Megabite 百万位          Mb    1000 kilobits\n * [*] Megabyte 兆字节(二进制)   KB    1024 kilobytes\n * [*] Megabyte 兆字节(十进制)   KB    1000 kilobytes\n * [x] Gigabit  万亿位          Gb    1000 Megabite\n * [*] Gigabyte 吉字节(二进制)   GB    1024 Megabytes\n * [x] Gigabyte 吉字节(十进制)   GB    1000 Megabytes\n */\nexport const SIZE_MAP = {\n  B: 1024,\n  KB: 1,\n  MB: 1048576, // 1024 * 1024\n  GB: 1073741824, // 1024 * 1024 * 1024\n};\n\nexport function returnFileSize(number: number) {\n  if (number < SIZE_MAP.B) {\n    return `${number} Bytes`;\n  }\n  if (number >= SIZE_MAP.B && number < SIZE_MAP.MB) {\n    return `${(number / SIZE_MAP.B).toFixed(1)} KB`;\n  }\n  if (number >= SIZE_MAP.MB) {\n    return `${(number / SIZE_MAP.MB).toFixed(1)} MB`;\n  }\n  return '';\n}\n\nexport function getCurrentDate() {\n  const d = new Date();\n  let month: string | number = d.getMonth() + 1;\n  month = month < 10 ? `0${month}` : month;\n  return `${d.getFullYear()}-${month}-${d.getDate()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n}\n\n/**\n * 缩略文件名 ABCDEFG => ABC...FG\n * @param inputName 文件名\n * @param leftCount 左边长度\n * @param rightCount 右边长度\n * @returns 缩略后的文件名\n */\nexport function abridgeName(\n  inputName: string,\n  leftCount = 5,\n  rightCount = 7\n): string {\n  const name = inputName;\n  let leftLength = 0;\n  let rightLength = 0;\n  for (let i = 0; i < name.length; i++) {\n    const w = name[i];\n    const isCn = escape(w).indexOf('%u') === 0;\n    if (i < leftCount * 2 && leftLength < leftCount) {\n      // eslint-disable-next-line no-unused-expressions\n      isCn ? (leftLength += 1) : (leftLength += 2);\n    } else if (i > i - rightCount && rightLength < rightCount) {\n      // eslint-disable-next-line no-unused-expressions\n      isCn ? (rightLength += 1) : (rightLength += 2);\n    }\n  }\n  return name.replace(\n    new RegExp(`^(.{${leftLength}})(.+)(.{${rightLength}})$`),\n    '$1…$3'\n  );\n}\n\n/**\n * 大小比较\n * @param size 文件大小\n * @param unit 计算机计量单位\n */\nexport function isOverSizeLimit(\n  fileSize: number,\n  sizeLimit: number,\n  unit: SizeUnit\n) {\n  // 以 KB 为单位进行比较\n  const units = ['B', 'KB', 'MB', 'GB'];\n  // 各个单位和 KB 的关系\n\n  const KBIndex = 1;\n  let index = units.indexOf(unit);\n  if (index === -1) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `TDesign Upload Warn: \\`sizeLimit.unit\\` can only be one of ${units.join()}`\n    );\n    index = KBIndex;\n  }\n  const num = SIZE_MAP[unit];\n  const limit = index < KBIndex ? sizeLimit / num : sizeLimit * num;\n  return fileSize <= limit;\n}\n\nexport const urlCreator = () => window.webkitURL || window.URL;\n\n/**\n *\n * @param files 待处理文件\n * @param format 格式化规则\n */\nexport function formatFiles(\n  files: File[] = [],\n  format?: (file: File) => TdUploadFile\n) {\n  return files.map((fileRaw) => {\n    const file = typeof format === 'function' ? format(fileRaw) : fileRaw;\n    const uploadFile: TdUploadFile = {\n      raw: fileRaw,\n      lastModified: fileRaw.lastModified,\n      name: fileRaw.name,\n      size: fileRaw.size,\n      type: fileRaw.type,\n      percent: 0,\n      status: 'waiting',\n      ...file,\n    };\n    uploadFile.url = urlCreator()?.createObjectURL(fileRaw);\n    return uploadFile;\n  });\n}\n"],"names":["SIZE_MAP","B","KB","MB","GB","returnFileSize","number","toFixed","getCurrentDate","d","Date","month","getMonth","getFullYear","getDate","getHours","getMinutes","getSeconds","abridgeName","inputName","leftCount","rightCount","name","leftLength","rightLength","i","length","w","isCn","escape","indexOf","replace","RegExp","isOverSizeLimit","fileSize","sizeLimit","unit","units","KBIndex","index","console","warn","join","num","limit","urlCreator","window","webkitURL","URL","formatFiles","files","format","map","fileRaw","file","uploadFile","raw","lastModified","size","type","percent","status","url","createObjectURL"],"mappings":"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"}