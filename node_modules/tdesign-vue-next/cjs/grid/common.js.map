{"version":3,"file":"common.js","sources":["../../src/grid/common.ts"],"sourcesContent":["import { ref } from 'vue';\nimport isObject from 'lodash/isObject';\nimport { TdColProps, TdRowProps } from './type';\nimport { calcSize } from '../utils/responsive';\nimport { useListener } from '../hooks/useListener';\nimport { isServer } from '../utils/dom';\n\nexport interface RowProviderType {\n  gutter: TdRowProps['gutter'];\n}\n\n/**\n * rowSizeHook\n * @returns\n */\nexport function useRowSize() {\n  const size = ref(calcSize(isServer ? 0 : window.innerWidth));\n  const updateSize = () => {\n    size.value = calcSize(isServer ? 0 : window.innerWidth);\n  };\n\n  useListener('resize', updateSize);\n\n  return size;\n}\n\n/**\n *\n * @param name\n * @param props\n * @returns\n */\nexport function getRowClasses(name: string, props: TdRowProps) {\n  const { justify, align } = props;\n  return [\n    name,\n    {\n      [`${name}--${justify}`]: justify,\n      // 区分 justify 传值\n      [`${name}--align-${align}`]: align,\n    },\n  ];\n}\n\n/**\n *\n * @param gutter\n * @param currentSize\n * @returns\n */\nexport function calcRowStyle(gutter: TdRowProps['gutter'], currentSize: string) {\n  const rowStyle = {};\n  const getMarginStyle = (gutter: number) =>\n    Object.assign(rowStyle, {\n      marginLeft: `${gutter / -2}px`,\n      marginRight: `${gutter / -2}px`,\n    });\n\n  const getRowGapStyle = (gutter: number) =>\n    Object.assign(rowStyle, {\n      rowGap: `${gutter}px`,\n    });\n\n  const strategyMap = {\n    isNumber: (gutter: TdRowProps['gutter']) => {\n      if (typeof gutter === 'number') {\n        getMarginStyle(gutter);\n      }\n    },\n    isArray: (gutter: TdRowProps['gutter']) => {\n      if (Array.isArray(gutter) && gutter.length) {\n        strategyMap.isNumber(gutter[0]);\n\n        if (typeof gutter[1] === 'number') {\n          getRowGapStyle(gutter[1]);\n        }\n\n        if (isObject(gutter[0]) && gutter[0][currentSize] !== undefined) {\n          getMarginStyle(gutter[0][currentSize]);\n        }\n\n        if (isObject(gutter[1]) && gutter[1][currentSize] !== undefined) {\n          getRowGapStyle(gutter[1][currentSize]);\n        }\n      }\n    },\n    isObject: (gutter: TdRowProps['gutter']) => {\n      if (isObject(gutter) && gutter[currentSize]) {\n        if (Array.isArray(gutter) && gutter.length) {\n          getMarginStyle(gutter[currentSize][0]);\n          getRowGapStyle(gutter[currentSize][1]);\n        } else {\n          getMarginStyle(gutter[currentSize]);\n        }\n      }\n    },\n  };\n\n  Object.keys(strategyMap).forEach((item) => {\n    strategyMap[item](gutter);\n  });\n\n  return rowStyle;\n}\n\n/**\n * 解析Flex\n * @param flex\n * @returns\n */\nexport function parseFlex(flex: TdColProps['flex']): string {\n  if (typeof flex === 'number') {\n    return `${flex} ${flex} 0`;\n  }\n  // 判断是否是flex\n  if (/^\\d+(\\.\\d+)?(px|r?em|%)$/.test(flex)) {\n    return `0 0 ${flex}`;\n  }\n  return flex;\n}\n\n/**\n * 计算ColPadding\n * @param gutter\n * @param currentSize\n * @returns\n */\nexport function calcColPadding(gutter: TdRowProps['gutter'], currentSize: string) {\n  const paddingObj = {};\n  const getPaddingStyle = (gutter: number) =>\n    Object.assign(paddingObj, {\n      paddingLeft: `${gutter / 2}px`,\n      paddingRight: `${gutter / 2}px`,\n    });\n\n  const strategyMap = {\n    isNumber: (gutter: TdRowProps['gutter']) => {\n      if (typeof gutter === 'number') {\n        getPaddingStyle(gutter);\n      }\n    },\n    isArray: (gutter: TdRowProps['gutter']) => {\n      if (Array.isArray(gutter) && gutter.length) {\n        if (typeof gutter[0] === 'number') {\n          getPaddingStyle(gutter[0]);\n        }\n        if (isObject(gutter[0]) && gutter[0][currentSize]) {\n          getPaddingStyle(gutter[0][currentSize]);\n        }\n      }\n    },\n    isObject: (gutter: TdRowProps['gutter']) => {\n      if (isObject(gutter) && gutter[currentSize]) {\n        getPaddingStyle(gutter[currentSize]);\n      }\n    },\n  };\n\n  Object.keys(strategyMap).forEach((item) => {\n    strategyMap[item](gutter);\n  });\n\n  return paddingObj;\n}\n\n/**\n * 获取 col size\n * @param props\n * @returns\n */\nexport function getColClasses(name: string, props: TdColProps) {\n  const { span, order, offset, push, pull } = props;\n  const allSizes = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\n\n  const ColSizeClasses = allSizes.reduce((acc, currSize) => {\n    const sizeProp = props[currSize];\n    let sizeObject: any = {};\n    if (typeof sizeProp === 'number') {\n      sizeObject.span = sizeProp;\n    } else if (isObject(sizeProp)) {\n      sizeObject = sizeProp || {};\n    }\n    return {\n      ...acc,\n      [`${name}-${currSize}-${sizeObject.span}`]: sizeObject.span !== undefined,\n      [`${name}-${currSize}-order-${sizeObject.order}`]: parseInt(sizeObject.order, 10) >= 0,\n      [`${name}-${currSize}-offset-${sizeObject.offset}`]: parseInt(sizeObject.offset, 10) >= 0,\n      [`${name}-${currSize}-push-${sizeObject.push}`]: parseInt(sizeObject.push, 10) >= 0,\n      [`${name}-${currSize}-pull-${sizeObject.pull}`]: parseInt(sizeObject.pull, 10) >= 0,\n    };\n  }, {});\n\n  return {\n    [`${name}`]: true,\n    [`${name}-${span}`]: span !== undefined,\n    [`${name}-order-${order}`]: order,\n    [`${name}-offset-${offset}`]: offset,\n    [`${name}-push-${push}`]: push,\n    [`${name}-pull-${pull}`]: pull,\n    ...ColSizeClasses,\n  };\n}\n"],"names":["useRowSize","size","ref","calcSize","isServer","window","innerWidth","updateSize","value","useListener","getRowClasses","name","props","justify","align","_defineProperty","calcRowStyle","gutter","currentSize","rowStyle","getMarginStyle","Object","assign","marginLeft","marginRight","getRowGapStyle","rowGap","strategyMap","isNumber","isArray","Array","length","isObject","keys","forEach","item","parseFlex","flex","test","calcColPadding","paddingObj","getPaddingStyle","paddingLeft","paddingRight","getColClasses","span","order","offset","push","pull","allSizes","ColSizeClasses","reduce","acc","currSize","sizeProp","sizeObject","parseInt"],"mappings":"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"}