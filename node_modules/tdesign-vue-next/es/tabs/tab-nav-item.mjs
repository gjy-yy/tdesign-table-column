/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-0b4c3c44.mjs';
import { defineComponent, ref, computed, createVNode } from 'vue';
import { CloseIcon } from 'tdesign-icons-vue-next';
import props from './props.mjs';
import tabPanelProps from './tab-panel-props.mjs';
import useRipple from '../hooks/useRipple.mjs';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.mjs';
import { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../_chunks/dep-bfb23a5e.mjs';
import '../_chunks/dep-a48de419.mjs';
import '../_chunks/dep-2a7dc5c7.mjs';
import '../_chunks/dep-9311bf66.mjs';
import '../_chunks/dep-4889eb51.mjs';
import '../_chunks/dep-0b4185fe.mjs';
import '../_chunks/dep-3ca5fb38.mjs';
import '../_chunks/dep-7071345f.mjs';
import '../_chunks/dep-d2403b2f.mjs';
import '../_chunks/dep-7922050a.mjs';
import '../_chunks/dep-169ea640.mjs';
import '../_chunks/dep-f6b25712.mjs';
import '../_chunks/dep-59545a4d.mjs';
import '../_chunks/dep-c27b1c14.mjs';
import '../_chunks/dep-7d96367f.mjs';
import '../_chunks/dep-827c4600.mjs';
import '../_chunks/dep-0820e0e2.mjs';
import '../_chunks/dep-caad2e91.mjs';
import '../_chunks/dep-3d4aad09.mjs';
import '../_chunks/dep-8e38f523.mjs';
import '../_chunks/dep-469bf54b.mjs';
import '../_chunks/dep-8ef9fb8e.mjs';
import '../_chunks/dep-e769aafd.mjs';
import '../_chunks/dep-400798c5.mjs';
import '../_chunks/dep-361522ee.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/useConfig.mjs';
import '../config-provider/type.mjs';
import '../utils/set-style.mjs';

var TTabNavItem = defineComponent({
  name: "TTabNavItem",
  props: {
    index: Number,
    active: {
      type: Boolean
    },
    theme: props.theme,
    size: props.size,
    placement: props.placement,
    label: {
      type: null
    },
    disabled: tabPanelProps.disabled,
    removable: tabPanelProps.removable,
    value: tabPanelProps.value,
    onClick: Function,
    onRemove: Function
  },
  setup: function setup(props) {
    var itemRef = ref();
    useRipple(itemRef);
    var COMPONENT_NAME = usePrefixClass("tabs__nav-item");

    var _useGlobalIcon = useGlobalIcon({
      CloseIcon: CloseIcon
    }),
        CloseIcon$1 = _useGlobalIcon.CloseIcon;

    var classPrefix = usePrefixClass();

    var _useCommonClassName = useCommonClassName(),
        STATUS = _useCommonClassName.STATUS,
        SIZE = _useCommonClassName.SIZE;

    var removeBtnClick = function removeBtnClick(_ref) {
      var e = _ref.e;
      e.stopPropagation();
      props.onRemove({
        e: e,
        value: props.value,
        index: props.index
      });
    };

    var onClickNav = function onClickNav(e) {
      if (props.disabled) return;
      props.onClick(e);
    };

    var navItemClass = computed(function () {
      var _ref2;

      return _ref2 = {}, _defineProperty(_ref2, COMPONENT_NAME.value, true), _defineProperty(_ref2, "".concat(classPrefix.value, "-tabs__nav--card"), props.theme === "card"), _defineProperty(_ref2, STATUS.value.disabled, props.disabled), _defineProperty(_ref2, STATUS.value.active, props.active), _defineProperty(_ref2, "".concat(classPrefix.value, "-is-left"), props.placement === "left"), _defineProperty(_ref2, "".concat(classPrefix.value, "-is-right"), props.placement === "right"), _defineProperty(_ref2, SIZE.value.medium, props.size === "medium"), _defineProperty(_ref2, SIZE.value.large, props.size === "large"), _ref2;
    });

    var renderCardItem = function renderCardItem() {
      return createVNode("div", {
        "class": navItemClass.value,
        "onClick": onClickNav,
        "ref": itemRef
      }, [createVNode("span", {
        "class": "".concat(COMPONENT_NAME.value, "-text-wrapper")
      }, [props.label]), props.removable && !props.disabled ? createVNode(CloseIcon$1, {
        "class": "remove-btn",
        "onClick": removeBtnClick
      }, null) : null]);
    };

    var renderNormalItem = function renderNormalItem() {
      var _ref3;

      return createVNode("div", {
        "class": navItemClass.value,
        "onClick": onClickNav
      }, [createVNode("div", {
        "class": ["".concat(COMPONENT_NAME.value, "-wrapper"), (_ref3 = {}, _defineProperty(_ref3, STATUS.value.disabled, props.disabled), _defineProperty(_ref3, STATUS.value.active, props.active), _ref3)],
        "ref": itemRef
      }, [createVNode("span", {
        "class": "".concat(COMPONENT_NAME.value, "-text-wrapper")
      }, [props.label])]), props.removable && !props.disabled ? createVNode(CloseIcon$1, {
        "class": "remove-btn",
        "onClick": removeBtnClick
      }, null) : null]);
    };

    return function () {
      return props.theme === "card" ? renderCardItem() : renderNormalItem();
    };
  }
});

export { TTabNavItem as default };
//# sourceMappingURL=tab-nav-item.mjs.map
