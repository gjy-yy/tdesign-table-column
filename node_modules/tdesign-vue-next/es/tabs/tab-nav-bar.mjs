/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-0b4c3c44.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-dcf624da.mjs';
import { defineComponent, computed, ref, onMounted, nextTick, watch, createVNode } from 'vue';
import { firstUpperCase } from '../utils/helper.mjs';
import props from './props.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import '../_chunks/dep-556a2f2c.mjs';
import '../_chunks/dep-e68fd68c.mjs';
import '../_chunks/dep-8e451077.mjs';
import '../_chunks/dep-a48de419.mjs';
import '../_chunks/dep-a82b01df.mjs';
import '../_chunks/dep-3ca5fb38.mjs';
import '../_chunks/dep-7071345f.mjs';
import '../_chunks/dep-192e10f1.mjs';
import '../_chunks/dep-3d4aad09.mjs';
import '../_chunks/dep-977c5cdd.mjs';
import '../_chunks/dep-c27b1c14.mjs';
import '../_chunks/dep-755716aa.mjs';
import '../_chunks/dep-82798823.mjs';
import '../_chunks/dep-52cbb58a.mjs';
import '../_chunks/dep-db11154e.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-bfb23a5e.mjs';
import '../_chunks/dep-2a7dc5c7.mjs';
import '../_chunks/dep-9311bf66.mjs';
import '../_chunks/dep-4889eb51.mjs';
import '../_chunks/dep-0b4185fe.mjs';
import '../_chunks/dep-d2403b2f.mjs';
import '../_chunks/dep-7922050a.mjs';
import '../_chunks/dep-169ea640.mjs';
import '../_chunks/dep-f6b25712.mjs';
import '../_chunks/dep-59545a4d.mjs';
import '../_chunks/dep-7d96367f.mjs';
import '../_chunks/dep-827c4600.mjs';
import '../_chunks/dep-0820e0e2.mjs';
import '../_chunks/dep-caad2e91.mjs';
import '../_chunks/dep-8e38f523.mjs';
import '../_chunks/dep-469bf54b.mjs';
import '../_chunks/dep-8ef9fb8e.mjs';
import '../_chunks/dep-e769aafd.mjs';
import '../_chunks/dep-400798c5.mjs';
import '../_chunks/dep-361522ee.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/type.mjs';

var TTabNavBar = defineComponent({
  props: {
    navs: {
      type: Array
    },
    placement: props.placement,
    value: props.value
  },
  setup: function setup(props) {
    var COMPONENT_NAME = usePrefixClass("tabs");
    var classPrefix = usePrefixClass();
    var navBarClass = computed(function () {
      return ["".concat(COMPONENT_NAME.value, "__bar"), "".concat(classPrefix.value, "-is-").concat(props.placement)];
    });
    var navBarStyle = ref(null);

    var getStyle = function getStyle() {
      var _props$navs$i$el2, _ref3;

      var isVertical = ["left", "right"].includes(props.placement.toLowerCase());

      var _ref = isVertical ? ["height", "top"] : ["width", "left"],
          _ref2 = _slicedToArray(_ref, 2),
          sizePropName = _ref2[0],
          offsetPropName = _ref2[1];

      var offset = 0;
      var i = 0;

      for (; i < props.navs.length; i++) {
        var _props$navs$i, _props$navs$i$el;

        if (props.navs[i].props.value === props.value) {
          break;
        }

        offset += ((_props$navs$i = props.navs[i]) === null || _props$navs$i === void 0 ? void 0 : (_props$navs$i$el = _props$navs$i.el) === null || _props$navs$i$el === void 0 ? void 0 : _props$navs$i$el["client".concat(firstUpperCase(sizePropName))]) || 0;
      }

      if (!props.navs[i]) return {};
      return _ref3 = {}, _defineProperty(_ref3, offsetPropName, "".concat(offset, "px")), _defineProperty(_ref3, sizePropName, "".concat(((_props$navs$i$el2 = props.navs[i].el) === null || _props$navs$i$el2 === void 0 ? void 0 : _props$navs$i$el2["client".concat(firstUpperCase(sizePropName))]) || 0, "px")), _ref3;
    };

    onMounted(function () {
      nextTick(function () {
        navBarStyle.value = getStyle();
      });
    });
    watch([function () {
      return props.navs;
    }, function () {
      return props.value;
    }, function () {
      return props.placement;
    }], function () {
      nextTick(function () {
        navBarStyle.value = getStyle();
      });
    });
    return function () {
      return createVNode("div", {
        "class": navBarClass.value,
        "style": navBarStyle.value
      }, null);
    };
  }
});

export { TTabNavBar as default };
//# sourceMappingURL=tab-nav-bar.mjs.map
