/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { inject, computed, h } from 'vue';
import { c as configProviderInjectKey, d as defaultGlobalConfig } from '../_chunks/dep-bfb23a5e.mjs';
import './type.mjs';
import '../_chunks/dep-a48de419.mjs';
import '../_chunks/dep-2a7dc5c7.mjs';
import '../_chunks/dep-9311bf66.mjs';
import '../_chunks/dep-4889eb51.mjs';
import '../_chunks/dep-0b4185fe.mjs';
import '../_chunks/dep-3ca5fb38.mjs';
import '../_chunks/dep-7071345f.mjs';
import '../_chunks/dep-d2403b2f.mjs';
import '../_chunks/dep-7922050a.mjs';
import '../_chunks/dep-169ea640.mjs';
import '../_chunks/dep-f6b25712.mjs';
import '../_chunks/dep-59545a4d.mjs';
import '../_chunks/dep-c27b1c14.mjs';
import '../_chunks/dep-7d96367f.mjs';
import '../_chunks/dep-827c4600.mjs';
import '../_chunks/dep-0820e0e2.mjs';
import '../_chunks/dep-caad2e91.mjs';
import '../_chunks/dep-3d4aad09.mjs';
import '../_chunks/dep-8e38f523.mjs';
import '../_chunks/dep-469bf54b.mjs';
import '../_chunks/dep-8ef9fb8e.mjs';
import '../_chunks/dep-e769aafd.mjs';
import '../_chunks/dep-400798c5.mjs';
import '../_chunks/dep-361522ee.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';

function useConfig(componentName) {
  var injectGlobalConfig = inject(configProviderInjectKey, null);
  var mergedGlobalConfig = computed(function () {
    return (injectGlobalConfig === null || injectGlobalConfig === void 0 ? void 0 : injectGlobalConfig.value) || defaultGlobalConfig;
  });
  var globalConfig = computed(function () {
    return mergedGlobalConfig.value[componentName];
  });
  var classPrefix = computed(function () {
    return mergedGlobalConfig.value.classPrefix;
  });

  var t = function t(pattern) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var data = args[0];

    if (typeof pattern === "string") {
      if (!data) return pattern;
      var regular = /\{\s*([\w-]+)\s*\}/g;
      var translated = pattern.replace(regular, function (match, key) {
        if (data) {
          return String(data[key]);
        }

        return "";
      });
      return translated;
    }

    if (typeof pattern === "function") {
      if (!args.length) return pattern(h);
      return pattern.apply(void 0, args);
    }

    return "";
  };

  return {
    t: t,
    globalConfig: globalConfig,
    classPrefix: classPrefix
  };
}

export { useConfig };
//# sourceMappingURL=useConfig.mjs.map
