/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../../_chunks/dep-7071345f.mjs';
import { _ as _slicedToArray } from '../../_chunks/dep-dcf624da.mjs';
import { _ as _defineProperty } from '../../_chunks/dep-0b4c3c44.mjs';
import { isVNode, h, computed, createVNode } from 'vue';
import { i as isString_1 } from '../../_chunks/dep-2684fd15.mjs';
import { i as isFunction_1 } from '../../_chunks/dep-0b4185fe.mjs';
import { getThRowspanAndColspan, getThList } from './useMultiHeader.mjs';
import useClassName from './useClassName.mjs';
import TEllipsis from '../ellipsis.mjs';
import '../../_chunks/dep-556a2f2c.mjs';
import '../../_chunks/dep-a48de419.mjs';
import '../../_chunks/dep-3ca5fb38.mjs';
import '../../_chunks/dep-3d4aad09.mjs';
import '../../_chunks/dep-c27b1c14.mjs';
import '../../_chunks/dep-d2403b2f.mjs';
import '../../hooks/useConfig.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-bfb23a5e.mjs';
import '../../_chunks/dep-2a7dc5c7.mjs';
import '../../_chunks/dep-9311bf66.mjs';
import '../../_chunks/dep-4889eb51.mjs';
import '../../_chunks/dep-7922050a.mjs';
import '../../_chunks/dep-169ea640.mjs';
import '../../_chunks/dep-f6b25712.mjs';
import '../../_chunks/dep-59545a4d.mjs';
import '../../_chunks/dep-7d96367f.mjs';
import '../../_chunks/dep-827c4600.mjs';
import '../../_chunks/dep-0820e0e2.mjs';
import '../../_chunks/dep-caad2e91.mjs';
import '../../_chunks/dep-8e38f523.mjs';
import '../../_chunks/dep-469bf54b.mjs';
import '../../_chunks/dep-8ef9fb8e.mjs';
import '../../_chunks/dep-e769aafd.mjs';
import '../../_chunks/dep-400798c5.mjs';
import '../../_chunks/dep-361522ee.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../config-provider/type.mjs';
import '../../_chunks/dep-241fdd8c.mjs';
import '../../_chunks/dep-050b3eb2.mjs';
import '../../_chunks/dep-977c5cdd.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-40522c7c.mjs';
import '../../_chunks/dep-83862ee1.mjs';
import '../../_chunks/dep-8e451077.mjs';
import '../../_chunks/dep-a82b01df.mjs';
import '../../_chunks/dep-192e10f1.mjs';
import '../../_chunks/dep-755716aa.mjs';
import '../../_chunks/dep-82798823.mjs';
import '../../_chunks/dep-52cbb58a.mjs';
import '../../_chunks/dep-db11154e.mjs';
import '../../_chunks/dep-baa4f9dc.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../tooltip/index.mjs';
import '../../tooltip/tooltip.mjs';
import '../../tooltip/props.mjs';
import '../../popup/props.mjs';
import '../../popup/index.mjs';
import '../../popup/popup.mjs';
import '@popperjs/core';
import '../../_common/js/utils/set-style.mjs';
import '../../popup/container.mjs';
import '../../_chunks/dep-8c39d78a.mjs';
import '../../hooks/useVModel.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../popup/type.mjs';
import '../../hooks/tnode.mjs';
import '../../tooltip/util.mjs';
import '../../tooltip/type.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}

function renderTitle(slots, col, index) {
  var params = {
    col: col,
    colIndex: index
  };

  if (isFunction_1(col.title)) {
    return col.title(h, params);
  }

  if (isString_1(col.title) && slots[col.title]) {
    return slots[col.title](params);
  }

  if (isFunction_1(col.render)) {
    return col.render(h, _objectSpread(_objectSpread({}, params), {}, {
      type: "title",
      row: {},
      rowIndex: -1
    })) || col.title;
  }

  return col.title;
}
function useTableHeader(props) {
  var _useClassName = useClassName(),
      tableSortClasses = _useClassName.tableSortClasses,
      tableFilterClasses = _useClassName.tableFilterClasses;

  var spansAndLeafNodes = computed(function () {
    return getThRowspanAndColspan(props.columns);
  });
  var thList = computed(function () {
    return getThList(props.columns);
  });
  var isMultipleHeader = computed(function () {
    return thList.value.length > 1;
  });

  var renderTitleWidthIcon = function renderTitleWidthIcon(_ref, col, colIndex, ellipsisTitle, attach) {
    var _classes;

    var _ref2 = _slicedToArray(_ref, 3),
        title = _ref2[0],
        sortIcon = _ref2[1],
        filterIcon = _ref2[2];

    var classes = (_classes = {}, _defineProperty(_classes, tableSortClasses.sortable, sortIcon), _defineProperty(_classes, tableFilterClasses.filterable, filterIcon), _classes);
    var content = isFunction_1(ellipsisTitle) ? ellipsisTitle(h, {
      col: col,
      colIndex: colIndex
    }) : void 0;
    return createVNode("div", {
      "class": classes
    }, [createVNode("div", {
      "class": tableSortClasses.title
    }, [col.ellipsis && ellipsisTitle !== false && ellipsisTitle !== null ? createVNode(TEllipsis, {
      "placement": "bottom-right",
      "attach": attach ? function () {
        return attach;
      } : void 0,
      "tooltipContent": content && function () {
        return content;
      },
      "tooltipProps": _typeof(ellipsisTitle) === "object" ? ellipsisTitle : void 0
    }, _isSlot(title) ? title : {
      "default": function _default() {
        return [title];
      }
    }) : createVNode("div", null, [title]), Boolean(sortIcon || filterIcon) && createVNode("div", {
      "class": tableFilterClasses.iconWrap
    }, [sortIcon, filterIcon])])]);
  };

  return {
    thList: thList,
    isMultipleHeader: isMultipleHeader,
    spansAndLeafNodes: spansAndLeafNodes,
    renderTitleWidthIcon: renderTitleWidthIcon
  };
}

export { useTableHeader as default, renderTitle };
//# sourceMappingURL=useTableHeader.mjs.map
