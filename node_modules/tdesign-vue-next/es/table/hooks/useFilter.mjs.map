{"version":3,"file":"useFilter.mjs","sources":["../../../src/table/hooks/useFilter.tsx"],"sourcesContent":["import { toRefs, ref, watch, computed, SetupContext } from 'vue';\nimport useClassName from './useClassName';\nimport TButton from '../../button';\nimport { TdPrimaryTableProps, PrimaryTableCol, TableRowData, FilterValue } from '../type';\nimport useDefaultValue from '../../hooks/useDefaultValue';\nimport { useTNodeDefault } from '../../hooks/tnode';\nimport TableFilterController from '../filter-controller';\nimport { useConfig } from '../../hooks/useConfig';\n\n// 筛选条件不为空，才需要显示筛选结果行\nfunction filterEmptyData(data: FilterValue) {\n  const newFilterValue: FilterValue = {};\n  Object.keys(data).forEach((key) => {\n    const item = data[key];\n    const isArrayTrue = item instanceof Array && item.length;\n    const isObject = typeof item === 'object' && !(item instanceof Array);\n    const isObjectTrue = isObject && Object.keys(item).length;\n    if (isArrayTrue || isObjectTrue || !['null', '', 'undefined'].includes(String(item))) {\n      newFilterValue[key] = item;\n    }\n  });\n  return newFilterValue;\n}\n\nexport default function useFilter(props: TdPrimaryTableProps, context: SetupContext) {\n  const primaryTableRef = ref(null);\n  const { t, globalConfig } = useConfig('table');\n  const renderTNode = useTNodeDefault();\n  const { filterValue } = toRefs(props);\n  const { tableFilterClasses, isFocusClass } = useClassName();\n  const isTableOverflowHidden = ref<boolean>();\n\n  // unControl and control\n  const [tFilterValue, setTFilterValue] = useDefaultValue(\n    filterValue,\n    props.defaultFilterValue,\n    props.onFilterChange,\n    'filterValue',\n  );\n\n  // 过滤内部值\n  const innerFilterValue = ref<FilterValue>(tFilterValue.value);\n\n  const hasEmptyCondition = computed(() => {\n    const filterEmpty = filterEmptyData(tFilterValue.value || {});\n    return !tFilterValue.value || !Object.keys(filterEmpty).length;\n  });\n\n  watch([tFilterValue], ([val]) => {\n    innerFilterValue.value = val;\n  });\n\n  function renderFirstFilterRow() {\n    if (hasEmptyCondition.value) return null;\n    const defaultNode = (\n      <div class={tableFilterClasses.result}>\n        <span>\n          {/* 搜索 “{getFilterResultContent()}”， */}\n          {/* 找到 {props.pagination?.total || props.data?.length} 条结果 */}\n          {t(globalConfig.value.searchResultText, {\n            result: getFilterResultContent(),\n            count: props.pagination?.total || props.data?.length,\n          })}\n        </span>\n        <TButton theme=\"primary\" variant=\"text\" onClick={onResetAll}>\n          {globalConfig.value.clearFilterResultButtonText}\n        </TButton>\n      </div>\n    );\n    const filterContent = renderTNode('filterRow');\n    if (props.filterRow && !filterContent) return null;\n    return <div class={tableFilterClasses.inner}>{filterContent || defaultNode}</div>;\n  }\n\n  // 获取搜索条件内容，存在 options 需要获取其 label 显示\n  function getFilterResultContent(): string {\n    const arr: string[] = [];\n    props.columns\n      .filter((col) => col.filter)\n      .forEach((col) => {\n        let value = tFilterValue.value[col.colKey];\n        if (col.filter.list && !['null', '', 'undefined'].includes(String(value))) {\n          const formattedValue = value instanceof Array ? value : [value];\n          const label: string[] = [];\n          col.filter.list.forEach((option) => {\n            if (formattedValue.includes(option.value)) {\n              label.push(option.label);\n            }\n          });\n          value = label.join();\n        }\n        if (value) {\n          arr.push(`${col.title}：${value}`);\n        }\n      });\n    return arr.join('；');\n  }\n\n  function onInnerFilterChange(val: any, column: PrimaryTableCol) {\n    const filterValue = {\n      ...innerFilterValue.value,\n      [column.colKey]: val,\n    };\n    innerFilterValue.value = filterValue;\n    if (!column.filter.showConfirmAndReset) {\n      emitFilterChange(filterValue, column);\n    }\n  }\n\n  function emitFilterChange(filterValue: FilterValue, column?: PrimaryTableCol) {\n    setTFilterValue(filterValue, { col: column });\n    props.onChange?.({ filter: filterValue }, { trigger: 'filter' });\n  }\n\n  function onReset(column: PrimaryTableCol) {\n    const filterValue: FilterValue = {\n      ...tFilterValue.value,\n      [column.colKey]:\n        {\n          single: '',\n          multiple: [],\n          input: '',\n        }[column.filter.type] ||\n        column.filter.resetValue ||\n        '',\n    };\n    emitFilterChange(filterValue, column);\n  }\n\n  function onResetAll() {\n    emitFilterChange({}, undefined);\n  }\n\n  function onConfirm(column: PrimaryTableCol) {\n    emitFilterChange(innerFilterValue.value, column);\n  }\n\n  // 图标：内置图标，组件自定义图标，全局配置图标\n  function renderFilterIcon({ col }: { col: PrimaryTableCol<TableRowData>; colIndex: number }) {\n    return (\n      <TableFilterController\n        v-slots={{ filterIcon: context.slots.filterIcon }}\n        column={col}\n        filterIcon={props.filterIcon}\n        tFilterValue={tFilterValue.value}\n        innerFilterValue={innerFilterValue.value}\n        tableFilterClasses={tableFilterClasses}\n        isFocusClass={isFocusClass}\n        onReset={onReset}\n        onConfirm={onConfirm}\n        onInnerFilterChange={onInnerFilterChange}\n        primaryTableElement={primaryTableRef.value?.$el}\n        onVisibleChange={onPopupVisibleChange}\n      ></TableFilterController>\n    );\n  }\n\n  function setFilterPrimaryTableRef(primaryTableElement: any) {\n    primaryTableRef.value = primaryTableElement;\n  }\n\n  function onPopupVisibleChange(visible: boolean) {\n    if (visible && !isTableOverflowHidden.value) {\n      isTableOverflowHidden.value = !visible;\n    }\n  }\n\n  return {\n    hasEmptyCondition,\n    isTableOverflowHidden,\n    renderFilterIcon,\n    renderFirstFilterRow,\n    setFilterPrimaryTableRef,\n  };\n}\n"],"names":["filterEmptyData","data","newFilterValue","Object","keys","forEach","key","item","isArrayTrue","Array","length","isObject","isObjectTrue","includes","String","useFilter","props","context","primaryTableRef","ref","useConfig","t","globalConfig","renderTNode","useTNodeDefault","toRefs","filterValue","useClassName","tableFilterClasses","isFocusClass","isTableOverflowHidden","useDefaultValue","defaultFilterValue","onFilterChange","tFilterValue","setTFilterValue","innerFilterValue","value","hasEmptyCondition","computed","filterEmpty","watch","val","renderFirstFilterRow","defaultNode","_createVNode","result","searchResultText","getFilterResultContent","count","pagination","total","TButton","onResetAll","clearFilterResultButtonText","filterContent","filterRow","inner","arr","columns","filter","col","colKey","list","formattedValue","label","option","push","join","title","onInnerFilterChange","column","showConfirmAndReset","emitFilterChange","onChange","trigger","onReset","single","multiple","input","type","resetValue","onConfirm","renderFilterIcon","filterIcon","$el","onPopupVisibleChange","slots","setFilterPrimaryTableRef","primaryTableElement","visible"],"mappings":"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"}