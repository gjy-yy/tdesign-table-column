/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../_chunks/dep-8c39d78a.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-dcf624da.mjs';
import { _ as _defineProperty } from '../_chunks/dep-0b4c3c44.mjs';
import { defineComponent, toRefs, computed, inject, createVNode, mergeProps } from 'vue';
import { useCommonClassName, usePrefixClass } from '../hooks/useConfig.mjs';
import { omit } from '../utils/helper.mjs';
import props from './props.mjs';
import { RadioGroupInjectionKey, RadioButtonInjectionKey } from './constants.mjs';
import { useFormDisabled } from '../form/hooks.mjs';
import useVModel from '../hooks/useVModel.mjs';
import { useContent } from '../hooks/tnode.mjs';
import '../_chunks/dep-556a2f2c.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-bfb23a5e.mjs';
import '../_chunks/dep-a48de419.mjs';
import '../_chunks/dep-2a7dc5c7.mjs';
import '../_chunks/dep-9311bf66.mjs';
import '../_chunks/dep-4889eb51.mjs';
import '../_chunks/dep-0b4185fe.mjs';
import '../_chunks/dep-3ca5fb38.mjs';
import '../_chunks/dep-7071345f.mjs';
import '../_chunks/dep-d2403b2f.mjs';
import '../_chunks/dep-7922050a.mjs';
import '../_chunks/dep-169ea640.mjs';
import '../_chunks/dep-f6b25712.mjs';
import '../_chunks/dep-59545a4d.mjs';
import '../_chunks/dep-c27b1c14.mjs';
import '../_chunks/dep-7d96367f.mjs';
import '../_chunks/dep-827c4600.mjs';
import '../_chunks/dep-0820e0e2.mjs';
import '../_chunks/dep-caad2e91.mjs';
import '../_chunks/dep-3d4aad09.mjs';
import '../_chunks/dep-8e38f523.mjs';
import '../_chunks/dep-469bf54b.mjs';
import '../_chunks/dep-8ef9fb8e.mjs';
import '../_chunks/dep-e769aafd.mjs';
import '../_chunks/dep-400798c5.mjs';
import '../_chunks/dep-361522ee.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/type.mjs';
import '../_chunks/dep-e68fd68c.mjs';
import '../_chunks/dep-8e451077.mjs';
import '../_chunks/dep-a82b01df.mjs';
import '../_chunks/dep-192e10f1.mjs';
import '../_chunks/dep-977c5cdd.mjs';
import '../_chunks/dep-755716aa.mjs';
import '../_chunks/dep-82798823.mjs';
import '../_chunks/dep-52cbb58a.mjs';
import '../_chunks/dep-db11154e.mjs';
import '../_chunks/dep-baa4f9dc.mjs';
import '../_chunks/dep-40522c7c.mjs';
import '../_chunks/dep-83862ee1.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-2684fd15.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function getValidAttrs(obj) {
  var newObj = {};
  Object.keys(obj).forEach(function (key) {
    if (typeof obj[key] !== "undefined") {
      newObj[key] = obj[key];
    }
  });
  return newObj;
}

var _Radio = defineComponent({
  name: "TRadio",
  inheritAttrs: false,
  props: _objectSpread({}, props),
  setup: function setup(props2, _ref) {
    var attrs = _ref.attrs;

    var _toRefs = toRefs(props2),
        checked = _toRefs.checked,
        modelValue = _toRefs.modelValue;

    var _useVModel = useVModel(checked, modelValue, props2.defaultChecked, props2.onChange, "checked"),
        _useVModel2 = _slicedToArray(_useVModel, 2),
        innerChecked = _useVModel2[0],
        setInnerChecked = _useVModel2[1];

    var radioChecked = computed(function () {
      return radioGroup ? props2.value === radioGroup.value : innerChecked.value;
    });
    var radioGroup = inject(RadioGroupInjectionKey, void 0);

    var handleChange = function handleChange(e) {
      if (radioGroup !== null && radioGroup !== void 0 && radioGroup.setValue) {
        radioGroup.setValue(props2.value, {
          e: e
        });
      } else {
        var checked2 = e.target.checked;
        setInnerChecked(checked2, {
          e: e
        });
      }
    };

    var handleClick = function handleClick(e) {
      var _props2$onClick;

      e.stopPropagation();
      (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 ? void 0 : _props2$onClick.call(props2, {
        e: e
      });
      if (!radioChecked.value || !props2.allowUncheck) return;

      if (radioGroup) {
        radioGroup.setValue(void 0, {
          e: e
        });
      } else {
        setInnerChecked(false, {
          e: e
        });
      }
    };

    var inputEvents = computed(function () {
      return getValidAttrs({
        focus: attrs.onFocus,
        blur: attrs.onBlur,
        keydown: attrs.onKeydown,
        keyup: attrs.onKeyup,
        keypresss: attrs.onKeypresss
      });
    });
    var wrapperAttrs = computed(function () {
      var events = [].concat(_toConsumableArray(Object.keys(inputEvents.value)), ["input", "change"]).map(function (str) {
        return "on".concat(str[0].toUpperCase()).concat(str.slice(1));
      });
      return omit(attrs, events);
    });
    var groupDisabled = computed(function () {
      return radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.disabled;
    });
    var disabled = useFormDisabled(groupDisabled);
    var inputProps = computed(function () {
      return {
        name: radioGroup ? radioGroup.name : props2.name,
        checked: radioChecked.value,
        disabled: disabled.value,
        value: props2.value
      };
    });

    var _useCommonClassName = useCommonClassName(),
        STATUS = _useCommonClassName.STATUS;

    var radioButton = inject(RadioButtonInjectionKey, void 0);
    var radioBtnName = usePrefixClass("radio-button");
    var COMPONENT_NAME = usePrefixClass("radio");
    var prefixCls = computed(function () {
      return radioButton ? radioBtnName.value : COMPONENT_NAME.value;
    });
    var inputClass = computed(function () {
      var _ref2;

      return ["".concat(prefixCls.value), (_ref2 = {}, _defineProperty(_ref2, STATUS.value.checked, inputProps.value.checked), _defineProperty(_ref2, STATUS.value.disabled, inputProps.value.disabled), _ref2)];
    });
    var renderContent = useContent();
    return function () {
      return createVNode("label", mergeProps({
        "class": inputClass.value
      }, wrapperAttrs.value), [createVNode("input", mergeProps({
        "type": "radio",
        "class": "".concat(prefixCls.value, "__former")
      }, inputEvents.value, inputProps.value, {
        "onChange": handleChange,
        "onClick": handleClick
      }), null), createVNode("span", {
        "class": "".concat(prefixCls.value, "__input")
      }, null), createVNode("span", {
        "class": "".concat(prefixCls.value, "__label")
      }, [renderContent("default", "label")])]);
    };
  }
});

export { _Radio as default };
//# sourceMappingURL=radio.mjs.map
