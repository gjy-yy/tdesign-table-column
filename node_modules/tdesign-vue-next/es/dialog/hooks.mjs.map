{"version":3,"file":"hooks.mjs","sources":["../../src/dialog/hooks.tsx"],"sourcesContent":["import { getCurrentInstance } from 'vue';\nimport isString from 'lodash/isString';\nimport isObject from 'lodash/isObject';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport TButton, { ButtonProps } from '../button';\nimport { PopconfirmConfig, DialogConfig, DrawerConfig } from '../config-provider';\nimport { ClassName, TNode } from '../common';\n\nexport type MixinsFooterButton = string | ButtonProps | TNode;\n\nexport interface MixinsConfirmBtn {\n  theme?: MixinsThemeType;\n  className?: ClassName;\n  confirmBtn: MixinsFooterButton;\n  globalConfirm: PopconfirmConfig['confirm'] | DrawerConfig['confirm'] | DialogConfig['confirm'];\n  globalConfirmBtnTheme?: PopconfirmConfig['confirmBtnTheme'] | DialogConfig['confirmBtnTheme'];\n  size?: ButtonProps['size'];\n}\n\nexport interface MixinsCancelBtn {\n  className?: ClassName;\n  cancelBtn: MixinsFooterButton;\n  globalCancel: PopconfirmConfig['cancel'] | DrawerConfig['cancel'] | DialogConfig['cancel'];\n  size?: ButtonProps['size'];\n}\n\nexport type MixinsThemeType = keyof (PopconfirmConfig['confirmBtnTheme'] & DialogConfig['confirmBtnTheme']);\n\nexport interface BtnAction {\n  confirmBtnAction: (e: MouseEvent) => void;\n  cancelBtnAction: (e: MouseEvent) => void;\n}\n\nexport function useAction(action: BtnAction) {\n  const instance = getCurrentInstance();\n  const renderTNodeJSX = useTNodeJSX();\n  // 全局配置属性综合\n  const getDefaultConfirmBtnProps = (options: MixinsConfirmBtn): ButtonProps => {\n    const { globalConfirm, theme, globalConfirmBtnTheme } = options;\n    const defaultTheme = globalConfirmBtnTheme?.[theme] || 'primary';\n    let props: ButtonProps = {\n      theme: defaultTheme,\n      size: options.size,\n      onClick: (e) => {\n        action.confirmBtnAction(e);\n      },\n    };\n    if (isString(globalConfirm)) {\n      props.content = globalConfirm;\n    } else if (isObject(globalConfirm)) {\n      props = { ...props, ...globalConfirm };\n    }\n    return props;\n  };\n  // 全局配置属性综合\n  const getDefaultCancelBtnProps = (options: MixinsCancelBtn): ButtonProps => {\n    const { globalCancel } = options;\n    let props: ButtonProps = {\n      theme: 'default',\n      size: options.size,\n      onClick: (e) => {\n        action.cancelBtnAction(e);\n      },\n    };\n    if (isString(globalCancel)) {\n      props.content = globalCancel;\n    } else if (isObject(globalCancel)) {\n      props = { ...props, ...globalCancel };\n    }\n    return props;\n  };\n  const getButtonByProps = (button: string | ButtonProps, defaultButton: ButtonProps, className?: ClassName) => {\n    let newOptions = defaultButton;\n    if (isString(button)) {\n      newOptions.content = button;\n    } else if (isObject(button)) {\n      newOptions = { ...newOptions, ...button };\n    }\n    return <TButton class={className} {...newOptions} />;\n  };\n  const getConfirmBtn = (options: MixinsConfirmBtn) => {\n    const { confirmBtn, className } = options;\n    if (confirmBtn === null) return null;\n    if (confirmBtn && instance.slots.confirmBtn) {\n      console.warn('Both $props.confirmBtn and $scopedSlots.confirmBtn exist, $props.confirmBtn is preferred.');\n    }\n    const defaultButtonProps = getDefaultConfirmBtnProps(options);\n    // 属性和插槽都不存在，就返回全局默认配置\n    if (!confirmBtn && !instance.slots.confirmBtn) {\n      return <TButton class={className} {...defaultButtonProps} />;\n    }\n    // 如果属性存在，优先返回属性配置\n    if (confirmBtn && ['string', 'object'].includes(typeof confirmBtn)) {\n      return getButtonByProps(confirmBtn as string | ButtonProps, defaultButtonProps, className);\n    }\n    // 渲染插槽 或 function 类型的 confirmBtn，属性优先级更高\n    return renderTNodeJSX('confirmBtn');\n  };\n  const getCancelBtn = (options: MixinsCancelBtn) => {\n    const { cancelBtn, className } = options;\n    if (cancelBtn === null) return null;\n    if (cancelBtn && instance.slots.cancelBtn) {\n      console.warn('Both $props.cancelBtn and $scopedSlots.cancelBtn exist, $props.cancelBtn is preferred.');\n    }\n    const defaultButtonProps: ButtonProps = getDefaultCancelBtnProps(options);\n    // 属性和插槽都不存在，就返回全局默认配置\n    if (!cancelBtn && !instance.slots.cancelBtn) {\n      return <TButton class={className} {...defaultButtonProps} />;\n    }\n    // 如果属性存在，优先返回属性配置\n    if (cancelBtn && ['string', 'object'].includes(typeof cancelBtn)) {\n      return getButtonByProps(cancelBtn as string | ButtonProps, defaultButtonProps);\n    }\n    // 渲染插槽 或 function 类型的 confirmBtn，属性优先级更高\n    return renderTNodeJSX('cancelBtn');\n  };\n  return { getConfirmBtn, getCancelBtn };\n}\n"],"names":["useAction","action","instance","getCurrentInstance","renderTNodeJSX","useTNodeJSX","getDefaultConfirmBtnProps","options","globalConfirm","theme","globalConfirmBtnTheme","defaultTheme","props","size","onClick","e","confirmBtnAction","isString","content","isObject","getDefaultCancelBtnProps","globalCancel","cancelBtnAction","getButtonByProps","button","defaultButton","className","newOptions","_createVNode","TButton","_mergeProps","getConfirmBtn","confirmBtn","slots","console","warn","defaultButtonProps","includes","getCancelBtn","cancelBtn"],"mappings":"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"}