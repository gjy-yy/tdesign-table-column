/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-dcf624da.mjs';
import { isVNode, defineComponent, createVNode, h } from 'vue';
import { ChevronRightIcon, ChevronLeftIcon } from 'tdesign-icons-vue-next';
import { Button } from '../../button/index.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import { useGlobalIcon } from '../../hooks/useGlobalIcon.mjs';
import props from '../props.mjs';
import '../../_chunks/dep-556a2f2c.mjs';
import '../../button/button.mjs';
import '../../_chunks/dep-8c39d78a.mjs';
import '../../_chunks/dep-0b4c3c44.mjs';
import '../../loading/index.mjs';
import '../../loading/directive.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-e68fd68c.mjs';
import '../../utils/dom.mjs';
import '../../_chunks/dep-a48de419.mjs';
import '../../_chunks/dep-2684fd15.mjs';
import '../../_chunks/dep-3ca5fb38.mjs';
import '../../_chunks/dep-7071345f.mjs';
import '../../_chunks/dep-3d4aad09.mjs';
import '../../_chunks/dep-c27b1c14.mjs';
import '../../utils/easing.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-40522c7c.mjs';
import '../../_chunks/dep-83862ee1.mjs';
import '../../_chunks/dep-f6b25712.mjs';
import '../../_chunks/dep-59545a4d.mjs';
import '../../_chunks/dep-7d96367f.mjs';
import '../../_chunks/dep-4889eb51.mjs';
import '../../_chunks/dep-0b4185fe.mjs';
import '../../_chunks/dep-d2403b2f.mjs';
import '../../_chunks/dep-7922050a.mjs';
import '../../_chunks/dep-caad2e91.mjs';
import '../../_chunks/dep-469bf54b.mjs';
import '../../_chunks/dep-8e451077.mjs';
import '../../_chunks/dep-a82b01df.mjs';
import '../../_chunks/dep-192e10f1.mjs';
import '../../_chunks/dep-977c5cdd.mjs';
import '../../_chunks/dep-755716aa.mjs';
import '../../_chunks/dep-82798823.mjs';
import '../../_chunks/dep-52cbb58a.mjs';
import '../../_chunks/dep-db11154e.mjs';
import '../../_chunks/dep-baa4f9dc.mjs';
import '../../utils/transfer-dom.mjs';
import '../../loading/props.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-bfb23a5e.mjs';
import '../../_chunks/dep-2a7dc5c7.mjs';
import '../../_chunks/dep-9311bf66.mjs';
import '../../_chunks/dep-169ea640.mjs';
import '../../_chunks/dep-827c4600.mjs';
import '../../_chunks/dep-0820e0e2.mjs';
import '../../_chunks/dep-8e38f523.mjs';
import '../../_chunks/dep-8ef9fb8e.mjs';
import '../../_chunks/dep-e769aafd.mjs';
import '../../_chunks/dep-400798c5.mjs';
import '../../_chunks/dep-361522ee.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../config-provider/type.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../loading/type.mjs';
import '../../button/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../utils/set-style.mjs';
import '../../form/hooks.mjs';
import '../../hooks/tnode.mjs';
import '../../button/type.mjs';

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}

var TransferOperations = defineComponent({
  name: "TTransferOperations",
  props: {
    leftDisabled: {
      type: Boolean,
      required: true
    },
    rightDisabled: {
      type: Boolean,
      required: true
    },
    operation: props.operation
  },
  emits: ["moveToRight", "moveToLeft"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots,
        emit = _ref.emit;
    var classPrefix = usePrefixClass();

    var _useGlobalIcon = useGlobalIcon({
      ChevronRightIcon: ChevronRightIcon,
      ChevronLeftIcon: ChevronLeftIcon
    }),
        ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon,
        ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon;

    var moveToRight = function moveToRight() {
      emit("moveToRight");
    };

    var moveToLeft = function moveToLeft() {
      emit("moveToLeft");
    };

    var getIconRight = function getIconRight() {
      return createVNode(ChevronRightIcon$1, null, null);
    };

    var getIconLeft = function getIconLeft() {
      return createVNode(ChevronLeftIcon$1, null, null);
    };

    var getIcon = function getIcon(direction) {
      if (typeof props2.operation === "function") {
        return null;
      }

      if (direction === "right" && props2.operation && typeof props2.operation[0] === "function") {
        return null;
      }

      if (direction === "left" && props2.operation && typeof props2.operation[1] === "function") {
        return null;
      }

      if (slots.operation) {
        return null;
      }

      return direction === "left" ? getIconLeft : getIconRight;
    };

    var renderButton = function renderButton(h2, direction) {
      if (typeof slots.operation === "function") {
        return slots.operation({
          direction: direction
        });
      }

      if (typeof props2.operation === "function") {
        var renderContent2 = props2.operation;
        return renderContent2(h2, {
          direction: direction
        });
      }

      var renderContent;

      if (Array.isArray(props2.operation)) {
        var _props2$operation = _slicedToArray(props2.operation, 2),
            left = _props2$operation[0],
            right = _props2$operation[1];

        renderContent = direction === "right" ? right : left;
      } else {
        renderContent = "";
      }

      return renderContent;
    };

    return function () {
      var _slot, _slot2;

      return createVNode("div", {
        "class": "".concat(classPrefix.value, "-transfer__operations")
      }, [createVNode(Button, {
        "variant": "outline",
        "key": props2.rightDisabled ? "right-outline" : "right-base",
        "disabled": props2.rightDisabled,
        "onClick": moveToRight,
        "icon": getIcon("right")
      }, _isSlot(_slot = renderButton(h, "right")) ? _slot : {
        "default": function _default() {
          return [_slot];
        }
      }), createVNode(Button, {
        "variant": "outline",
        "key": props2.rightDisabled ? "left-outline" : "left-base",
        "disabled": props2.leftDisabled,
        "onClick": moveToLeft,
        "icon": getIcon("left")
      }, _isSlot(_slot2 = renderButton(h, "left")) ? _slot2 : {
        "default": function _default() {
          return [_slot2];
        }
      })]);
    };
  }
});

export { TransferOperations as default };
//# sourceMappingURL=transfer-operations.mjs.map
