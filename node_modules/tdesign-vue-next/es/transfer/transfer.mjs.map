{"version":3,"file":"transfer.mjs","sources":["../../src/transfer/transfer.tsx"],"sourcesContent":["import { defineComponent, computed, toRefs } from 'vue';\nimport pick from 'lodash/pick';\nimport TransferList from './components/transfer-list';\nimport TransferOperations from './components/transfer-operations';\nimport { TransferListType, CheckedOptions, TransferValue, EmptyType, TargetParams, SearchEvent } from './interface';\n\nimport { getTransferListOption, getDataValues, getTransferData, filterTransferData, TRANSFER_NAME } from './utils';\nimport { PageInfo, TdPaginationProps } from '../pagination/type';\nimport props from './props';\nimport { TNode } from '../common';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass } from '../hooks/useConfig';\n\nconst SOURCE = 'source';\nconst TARGET = 'target';\n\nexport default defineComponent({\n  name: TRANSFER_NAME,\n  props: { ...props },\n\n  setup(props, { slots }) {\n    const disabled = useFormDisabled();\n    const classPrefix = usePrefixClass();\n    const { value, modelValue, checked } = toRefs(props);\n    const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const [innerChecked] = useDefaultValue(checked, props.defaultChecked, props.onCheckedChange, 'checked');\n    const valueList = computed(() => innerValue.value);\n\n    const isTreeMode = computed(() => {\n      const treeSlot = slots.tree;\n      return typeof treeSlot === 'function';\n    });\n\n    const leftButtonDisabled = computed(() => props.direction === 'right');\n    const rightButtonDisabled = computed(() => props.direction === 'left');\n    // props 传入的 data 格式化后的数据\n    const transferData = computed(() => {\n      return getTransferData(props.data, props.keys, isTreeMode.value);\n    });\n    const sourceList = computed(() => {\n      return filterTransferData(transferData.value, valueList.value as TransferValue[], false, isTreeMode.value);\n    });\n    const targetList = computed(() => {\n      return filterTransferData(transferData.value, valueList.value as TransferValue[], true, isTreeMode.value);\n    });\n    // 被选中的value\n    const checkedValue = computed(() => {\n      return {\n        [SOURCE]: getDataValues(sourceList.value, innerChecked.value, { isTreeMode: isTreeMode.value }),\n        [TARGET]: getDataValues(targetList.value, innerChecked.value, { isTreeMode: isTreeMode.value }),\n      };\n    });\n    const hasFooter = computed(() => {\n      return !!slots.footer || !!props.footer;\n    });\n    const showPagination = computed(() => {\n      // 翻页在自定义列表无效\n      return !!props.pagination && !slots.content;\n    });\n    const showSearch = computed(() => {\n      // 翻页在自定义列表无效\n      return !!props.search;\n    });\n    const footerOption = computed(() => {\n      const footer = props.footer || '';\n      return getTransferListOption<string | Function>(footer);\n    });\n    const emptyOption = computed(() => {\n      return getTransferListOption<EmptyType>(props.empty);\n    });\n    const searchOption = computed(() => {\n      return getTransferListOption<boolean>(props.search);\n    });\n    const checkAllOption = computed(() => {\n      return getTransferListOption<boolean>(props.showCheckAll);\n    });\n    const disabledOption = computed(() => {\n      return getTransferListOption<boolean>(disabled.value);\n    });\n    const titleOption = computed(() => {\n      return getTransferListOption<string | TNode<{ type: TransferListType }>>(props.title);\n    });\n    const paginationOption = computed(() => {\n      return getTransferListOption<TdPaginationProps>(props.pagination);\n    });\n\n    const handleCheckedChange = (val: Array<TransferValue>, listType: TransferListType) => {\n      const sourceChecked = listType === SOURCE ? val : checkedValue.value[SOURCE];\n      const targetChecked = listType === TARGET ? val : checkedValue.value[TARGET];\n      const checked = [...sourceChecked, ...targetChecked];\n      const event: CheckedOptions = {\n        checked,\n        sourceChecked,\n        targetChecked,\n        type: listType,\n      };\n      // TODO onCheckedChange 参数有点不合理\n      innerChecked.value = checked;\n      props.onCheckedChange?.(event);\n    };\n\n    const transferTo = (toDirection: TransferListType) => {\n      const oldTargetValue: Array<TransferValue> = JSON.parse(JSON.stringify(valueList.value));\n      let newTargetValue: Array<TransferValue>;\n      const selfCheckedValue = toDirection === TARGET ? checkedValue.value[SOURCE] : checkedValue.value[TARGET];\n      // target->source\n      if (toDirection === SOURCE) {\n        newTargetValue = oldTargetValue.filter((v) => !selfCheckedValue.includes(v));\n      } else if (props.targetSort === 'original') {\n        // 按照原始顺序\n        newTargetValue = getDataValues(transferData.value, oldTargetValue.concat(selfCheckedValue), {\n          isTreeMode: isTreeMode.value,\n        });\n      } else if (props.targetSort === 'unshift') {\n        newTargetValue = selfCheckedValue.concat(oldTargetValue);\n      } else {\n        newTargetValue = oldTargetValue.concat(selfCheckedValue);\n      }\n\n      // 清空checked。与toDirection相反\n      handleCheckedChange([], toDirection === SOURCE ? TARGET : SOURCE);\n\n      const params: TargetParams = {\n        type: toDirection,\n        movedValue: selfCheckedValue,\n      };\n      setInnerValue(newTargetValue, params);\n    };\n\n    // 点击移到右边按钮触发的函数\n    const transferToRight = () => {\n      transferTo(TARGET);\n    };\n    // 点击移到左边按钮触发的函数\n    const transferToLeft = () => {\n      transferTo(SOURCE);\n    };\n\n    const handleScroll = (e: Event, listType: TransferListType) => {\n      const target = e.target as HTMLElement;\n      const bottomDistance = target.scrollHeight - target.scrollTop - target.clientHeight;\n      const event: { e: Event; bottomDistance: number; type: TransferListType } = {\n        e,\n        bottomDistance,\n        type: listType,\n      };\n      props.onScroll?.(event);\n    };\n    const handleSearch = (e: SearchEvent) => {\n      props.onSearch?.(e);\n    };\n    const handlePageChange = (pageInfo: PageInfo, listType: TransferListType) => {\n      props.onPageChange?.(pageInfo, { type: listType });\n    };\n    const renderTransferList = (listType: TransferListType) => {\n      const scopedSlots = pick(slots, ['title', 'empty', 'footer', 'operation', 'transferItem', 'default', 'tree']);\n      return (\n        <TransferList\n          checkboxProps={props.checkboxProps}\n          transferItem={props.transferItem}\n          list-type={listType}\n          title={titleOption.value[listType]}\n          data-source={listType === SOURCE ? sourceList.value : targetList.value}\n          checked-value={checkedValue.value[listType]}\n          disabled={disabledOption.value[listType]}\n          search={searchOption.value[listType]}\n          pagination={paginationOption.value[listType]}\n          check-all={checkAllOption.value[listType]}\n          footer={footerOption.value[listType]}\n          empty={emptyOption.value[listType]}\n          onCheckedChange={($event: any) => handleCheckedChange($event, listType)}\n          onScroll={($event: any) => handleScroll($event, listType)}\n          onSearch={handleSearch}\n          onPageChange={($event: any) => handlePageChange($event, listType)}\n          isTreeMode={isTreeMode.value}\n        >\n          {scopedSlots}\n        </TransferList>\n      );\n    };\n\n    return () => (\n      <div\n        class={[\n          `${classPrefix.value}-transfer`,\n          showSearch.value ? `${classPrefix.value}-transfer__search` : '',\n          hasFooter.value ? `${classPrefix.value}-transfer__footer` : '',\n          showPagination.value ? `${classPrefix.value}-transfer__pagination` : '',\n          isTreeMode.value ? `${classPrefix.value}-transfer--with-tree` : '',\n        ]}\n      >\n        {renderTransferList(SOURCE)}\n        <TransferOperations\n          leftDisabled={\n            disabledOption.value[TARGET] || leftButtonDisabled.value || checkedValue.value[TARGET].length === 0\n          }\n          rightDisabled={\n            disabledOption.value[SOURCE] || rightButtonDisabled.value || checkedValue.value[SOURCE].length === 0\n          }\n          operation={props.operation}\n          onMoveToRight={transferToRight}\n          onMoveToLeft={transferToLeft}\n          v-slots={{ operation: slots.operation }}\n        />\n        {renderTransferList(TARGET)}\n      </div>\n    );\n  },\n});\n"],"names":["SOURCE","TARGET","defineComponent","name","TRANSFER_NAME","props","setup","slots","disabled","useFormDisabled","classPrefix","usePrefixClass","toRefs","value","modelValue","checked","useVModel","defaultValue","onChange","innerValue","setInnerValue","useDefaultValue","defaultChecked","onCheckedChange","innerChecked","valueList","computed","isTreeMode","treeSlot","tree","leftButtonDisabled","direction","rightButtonDisabled","transferData","getTransferData","data","keys","sourceList","filterTransferData","targetList","checkedValue","getDataValues","hasFooter","footer","showPagination","pagination","content","showSearch","search","footerOption","getTransferListOption","emptyOption","empty","searchOption","checkAllOption","showCheckAll","disabledOption","titleOption","title","paginationOption","handleCheckedChange","val","listType","sourceChecked","targetChecked","event","type","transferTo","toDirection","oldTargetValue","JSON","parse","stringify","newTargetValue","selfCheckedValue","filter","v","includes","targetSort","concat","params","movedValue","transferToRight","transferToLeft","handleScroll","e","target","bottomDistance","scrollHeight","scrollTop","clientHeight","onScroll","handleSearch","onSearch","handlePageChange","pageInfo","onPageChange","renderTransferList","scopedSlots","pick","_createVNode","checkboxProps","transferItem","$event","length","operation"],"mappings":"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"}