/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../../_chunks/dep-7071345f.mjs';
import { computed } from 'vue';
import '../../hooks/useConfig.mjs';
import { COMPONENT_NAME } from '../const.mjs';
import { getDayCn } from '../utils.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-bfb23a5e.mjs';
import '../../_chunks/dep-a48de419.mjs';
import '../../_chunks/dep-2a7dc5c7.mjs';
import '../../_chunks/dep-9311bf66.mjs';
import '../../_chunks/dep-4889eb51.mjs';
import '../../_chunks/dep-0b4185fe.mjs';
import '../../_chunks/dep-3ca5fb38.mjs';
import '../../_chunks/dep-d2403b2f.mjs';
import '../../_chunks/dep-7922050a.mjs';
import '../../_chunks/dep-169ea640.mjs';
import '../../_chunks/dep-f6b25712.mjs';
import '../../_chunks/dep-59545a4d.mjs';
import '../../_chunks/dep-c27b1c14.mjs';
import '../../_chunks/dep-7d96367f.mjs';
import '../../_chunks/dep-827c4600.mjs';
import '../../_chunks/dep-0820e0e2.mjs';
import '../../_chunks/dep-caad2e91.mjs';
import '../../_chunks/dep-3d4aad09.mjs';
import '../../_chunks/dep-8e38f523.mjs';
import '../../_chunks/dep-469bf54b.mjs';
import '../../_chunks/dep-8ef9fb8e.mjs';
import '../../_chunks/dep-e769aafd.mjs';
import '../../_chunks/dep-400798c5.mjs';
import '../../_chunks/dep-361522ee.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../config-provider/type.mjs';
import '../../_chunks/dep-f362c0f2.mjs';

function useColHeaders(props, state) {
  var _useConfig = useConfig(COMPONENT_NAME),
      t = _useConfig.t,
      globalConfig = _useConfig.globalConfig;

  var weekDipalyText = computed(function () {
    return props.week || t(globalConfig.value.week).split(",");
  });

  function getWeekDisplay(weekNum) {
    var weekText = weekDipalyText.value;
    return _typeof(weekText) === "object" && weekText[weekNum - 1] ? weekText[weekNum - 1] : getDayCn(weekNum);
  }

  var cellColHeaders = computed(function () {
    var re = [];
    var min = 1;
    var max = 7;

    for (var i = state.realFirstDayOfWeek; i <= max; i++) {
      re.push({
        num: i,
        display: getWeekDisplay(i)
      });
    }

    if (state.realFirstDayOfWeek > min) {
      for (var _i = min; _i < state.realFirstDayOfWeek; _i++) {
        re.push({
          num: _i,
          display: getWeekDisplay(_i)
        });
      }
    }

    return re;
  });
  return {
    cellColHeaders: cellColHeaders
  };
}

export { useColHeaders };
//# sourceMappingURL=useColHeaders.mjs.map
