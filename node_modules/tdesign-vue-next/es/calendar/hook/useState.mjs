/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { reactive, watch } from 'vue';
import { d as dayjs } from '../../_chunks/dep-f362c0f2.mjs';
import '../../hooks/useConfig.mjs';
import { COMPONENT_NAME } from '../const.mjs';
import { createDefaultCurDate } from '../utils.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-7071345f.mjs';
import '../../_chunks/dep-a48de419.mjs';
import '../../_chunks/dep-bfb23a5e.mjs';
import '../../_chunks/dep-2a7dc5c7.mjs';
import '../../_chunks/dep-9311bf66.mjs';
import '../../_chunks/dep-4889eb51.mjs';
import '../../_chunks/dep-0b4185fe.mjs';
import '../../_chunks/dep-3ca5fb38.mjs';
import '../../_chunks/dep-d2403b2f.mjs';
import '../../_chunks/dep-7922050a.mjs';
import '../../_chunks/dep-169ea640.mjs';
import '../../_chunks/dep-f6b25712.mjs';
import '../../_chunks/dep-59545a4d.mjs';
import '../../_chunks/dep-c27b1c14.mjs';
import '../../_chunks/dep-7d96367f.mjs';
import '../../_chunks/dep-827c4600.mjs';
import '../../_chunks/dep-0820e0e2.mjs';
import '../../_chunks/dep-caad2e91.mjs';
import '../../_chunks/dep-3d4aad09.mjs';
import '../../_chunks/dep-8e38f523.mjs';
import '../../_chunks/dep-469bf54b.mjs';
import '../../_chunks/dep-8ef9fb8e.mjs';
import '../../_chunks/dep-e769aafd.mjs';
import '../../_chunks/dep-400798c5.mjs';
import '../../_chunks/dep-361522ee.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../config-provider/type.mjs';

function useState(props) {
  var _useConfig = useConfig(COMPONENT_NAME),
      globalConfig = _useConfig.globalConfig;

  var state = reactive({
    realFirstDayOfWeek: 1,
    curDate: null,
    curSelectedYear: null,
    curSelectedMonth: null,
    curSelectedMode: null,
    isShowWeekend: true,
    controlSize: "medium"
  });

  function toToday() {
    var curDate = createDefaultCurDate();
    state.curSelectedYear = curDate.year();
    state.curSelectedMonth = parseInt(curDate.format("M"), 10);
  }

  function setCurSelectedYear(year) {
    var curSelectedYear = year ? parseInt("".concat(year), 10) : createDefaultCurDate().year();

    if (!isNaN(curSelectedYear) && curSelectedYear > 0) {
      state.curSelectedYear = curSelectedYear;
    }
  }

  function setCurSelectedMonth(month) {
    var curSelectedMonth = month ? parseInt("".concat(month), 10) : parseInt(createDefaultCurDate().format("M"), 10);

    if (!isNaN(curSelectedMonth) && curSelectedMonth > 0 && curSelectedMonth <= 12) {
      state.curSelectedMonth = curSelectedMonth;
    }
  }

  function setCurrentDate(value) {
    state.curDate = value ? dayjs(value) : createDefaultCurDate();
  }

  function checkDayVisibled(day) {
    var re = true;

    if (!state.isShowWeekend) {
      re = day !== 6 && day !== 7;
    }

    return re;
  }

  watch(function () {
    return props.firstDayOfWeek;
  }, function () {
    var _ref, _props$firstDayOfWeek;

    state.realFirstDayOfWeek = (_ref = (_props$firstDayOfWeek = props.firstDayOfWeek) !== null && _props$firstDayOfWeek !== void 0 ? _props$firstDayOfWeek : globalConfig.value.firstDayOfWeek) !== null && _ref !== void 0 ? _ref : 1;
  }, {
    immediate: true
  });
  watch(function () {
    return props.value;
  }, function (v) {
    setCurrentDate(v);
  }, {
    immediate: true
  });
  watch(function () {
    return props.year;
  }, function (v) {
    setCurSelectedYear(v);
  }, {
    immediate: true
  });
  watch(function () {
    return props.month;
  }, function (v) {
    setCurSelectedMonth(v);
  }, {
    immediate: true
  });
  watch(function () {
    return props.isShowWeekendDefault;
  }, function (v) {
    state.isShowWeekend = v;
  }, {
    immediate: true
  });
  watch(function () {
    return props.mode;
  }, function (v) {
    state.curSelectedMode = v;
  }, {
    immediate: true
  });
  return {
    state: state,
    toToday: toToday,
    checkDayVisibled: checkDayVisibled
  };
}

export { useState };
//# sourceMappingURL=useState.mjs.map
