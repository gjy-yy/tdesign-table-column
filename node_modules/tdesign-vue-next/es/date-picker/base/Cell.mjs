/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-0b4c3c44.mjs';
import { defineComponent, computed, createVNode } from 'vue';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import { extractTimeObj } from '../../_common/js/date-picker/utils.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-bfb23a5e.mjs';
import '../../_chunks/dep-a48de419.mjs';
import '../../_chunks/dep-2a7dc5c7.mjs';
import '../../_chunks/dep-9311bf66.mjs';
import '../../_chunks/dep-4889eb51.mjs';
import '../../_chunks/dep-0b4185fe.mjs';
import '../../_chunks/dep-3ca5fb38.mjs';
import '../../_chunks/dep-7071345f.mjs';
import '../../_chunks/dep-d2403b2f.mjs';
import '../../_chunks/dep-7922050a.mjs';
import '../../_chunks/dep-169ea640.mjs';
import '../../_chunks/dep-f6b25712.mjs';
import '../../_chunks/dep-59545a4d.mjs';
import '../../_chunks/dep-c27b1c14.mjs';
import '../../_chunks/dep-7d96367f.mjs';
import '../../_chunks/dep-827c4600.mjs';
import '../../_chunks/dep-0820e0e2.mjs';
import '../../_chunks/dep-caad2e91.mjs';
import '../../_chunks/dep-3d4aad09.mjs';
import '../../_chunks/dep-8e38f523.mjs';
import '../../_chunks/dep-469bf54b.mjs';
import '../../_chunks/dep-8ef9fb8e.mjs';
import '../../_chunks/dep-e769aafd.mjs';
import '../../_chunks/dep-400798c5.mjs';
import '../../_chunks/dep-361522ee.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../config-provider/type.mjs';
import '../../_chunks/dep-dcf624da.mjs';
import '../../_chunks/dep-556a2f2c.mjs';
import '../../_chunks/dep-f362c0f2.mjs';
import '../../_chunks/dep-faa6c58f.mjs';
import '../../_chunks/dep-52cbb58a.mjs';
import '../../_chunks/dep-3568c22b.mjs';
import '../../_chunks/dep-050b3eb2.mjs';
import '../../_chunks/dep-977c5cdd.mjs';

var TDatePickerCell = defineComponent({
  name: "TDatePickerCell",
  props: {
    time: String,
    text: [String, Number],
    value: Date,
    active: Boolean,
    highlight: Boolean,
    disabled: Boolean,
    startOfRange: Boolean,
    endOfRange: Boolean,
    hoverHighlight: Boolean,
    hoverStartOfRange: Boolean,
    hoverEndOfRange: Boolean,
    additional: Boolean,
    now: Boolean,
    firstDayOfMonth: Boolean,
    lastDayOfMonth: Boolean,
    onClick: Function,
    onMouseEnter: Function
  },
  setup: function setup(props) {
    var COMPONENT_NAME = usePrefixClass("date-picker__cell");
    var cellClass = computed(function () {
      var _ref;

      return [COMPONENT_NAME.value, (_ref = {}, _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--now"), props.now), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--active"), props.active), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--disabled"), props.disabled), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--highlight"), props.highlight), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--hover-highlight"), props.hoverHighlight), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--active-start"), props.startOfRange), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--active-end"), props.endOfRange), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--hover-start"), props.hoverStartOfRange), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--hover-end"), props.hoverEndOfRange), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--additional"), props.additional), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--first-day-of-month"), props.firstDayOfMonth), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "--last-day-of-month"), props.lastDayOfMonth), _ref)];
    });

    function handleClick(e) {
      var _props$onClick;

      if (props.disabled) return;

      if (props.time) {
        var _extractTimeObj = extractTimeObj(props.time),
            hours = _extractTimeObj.hours,
            minutes = _extractTimeObj.minutes,
            seconds = _extractTimeObj.seconds,
            milliseconds = _extractTimeObj.milliseconds,
            meridiem = _extractTimeObj.meridiem;

        var nextHours = hours;
        if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;
        if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;
        props.value.setHours(nextHours);
        props.value.setMinutes(minutes);
        props.value.setSeconds(seconds);
        props.value.setMilliseconds(milliseconds);
      }

      (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, props.value, {
        e: e
      });
    }

    function handleMouseEnter() {
      var _props$onMouseEnter;

      if (props.disabled) return;

      if (props.time) {
        var _extractTimeObj2 = extractTimeObj(props.time),
            hours = _extractTimeObj2.hours,
            minutes = _extractTimeObj2.minutes,
            seconds = _extractTimeObj2.seconds,
            milliseconds = _extractTimeObj2.milliseconds,
            meridiem = _extractTimeObj2.meridiem;

        var nextHours = hours;
        if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;
        if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;
        props.value.setHours(nextHours);
        props.value.setMinutes(minutes);
        props.value.setSeconds(seconds);
        props.value.setMilliseconds(milliseconds);
      }

      (_props$onMouseEnter = props.onMouseEnter) === null || _props$onMouseEnter === void 0 ? void 0 : _props$onMouseEnter.call(props, props.value);
    }

    return function () {
      return createVNode("td", {
        "class": cellClass.value,
        "onClick": handleClick,
        "onMouseenter": handleMouseEnter
      }, [createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "-inner")
      }, [props.text])]);
    };
  }
});

export { TDatePickerCell as default };
//# sourceMappingURL=Cell.mjs.map
