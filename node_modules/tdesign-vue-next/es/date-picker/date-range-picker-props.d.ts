import { TdDateRangePickerProps } from '../date-picker/type';
import { PropType } from 'vue';
declare const _default: {
    allowInput: BooleanConstructor;
    clearable: BooleanConstructor;
    disableDate: {
        type: PropType<import("../date-picker/type").DisableRangeDate>;
    };
    disabled: BooleanConstructor;
    enableTimePicker: BooleanConstructor;
    firstDayOfWeek: {
        type: NumberConstructor;
        validator(val: TdDateRangePickerProps['firstDayOfWeek']): boolean;
    };
    format: {
        type: StringConstructor;
        default: string;
    };
    mode: {
        type: PropType<"month" | "year" | "quarter" | "week" | "date">;
        default: "month" | "year" | "quarter" | "week" | "date";
        validator(val: TdDateRangePickerProps['mode']): boolean;
    };
    panelPreselection: {
        type: BooleanConstructor;
        default: boolean;
    };
    placeholder: {
        type: PropType<string | string[]>;
    };
    popupProps: {
        type: PropType<import("..").TdPopupProps>;
    };
    prefixIcon: {
        type: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    presets: {
        type: PropType<import("../date-picker/type").PresetRange>;
    };
    presetsPlacement: {
        type: PropType<"left" | "top" | "bottom" | "right">;
        default: "left" | "top" | "bottom" | "right";
        validator(val: TdDateRangePickerProps['presetsPlacement']): boolean;
    };
    rangeInputProps: {
        type: PropType<import("..").TdRangeInputProps>;
    };
    separator: {
        type: StringConstructor;
        default: string;
    };
    status: {
        type: PropType<"error" | "default" | "success" | "warning">;
        validator(val: TdDateRangePickerProps['status']): boolean;
    };
    suffixIcon: {
        type: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    timePickerProps: {
        type: PropType<import("..").TdTimePickerProps>;
    };
    tips: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    value: {
        type: PropType<import("../date-picker/type").DateRangeValue>;
        default: any;
    };
    modelValue: {
        type: PropType<import("../date-picker/type").DateRangeValue>;
        default: any;
    };
    defaultValue: {
        type: PropType<import("../date-picker/type").DateRangeValue>;
        default: () => TdDateRangePickerProps['defaultValue'];
    };
    valueType: {
        type: StringConstructor;
        default: string;
    };
    onBlur: PropType<(context: {
        value: import("../date-picker/type").DateRangeValue;
        partial: import("../date-picker/type").DateRangePickerPartial;
        e: FocusEvent;
    }) => void>;
    onChange: PropType<(value: import("../date-picker/type").DateRangeValue, context: {
        dayjsValue?: import("dayjs").Dayjs[];
        trigger?: import("../date-picker/type").DatePickerTriggerSource;
    }) => void>;
    onFocus: PropType<(context: {
        value: import("../date-picker/type").DateRangeValue;
        partial: import("../date-picker/type").DateRangePickerPartial;
        e: FocusEvent;
    }) => void>;
    onInput: PropType<(context: {
        input: string;
        value: import("../date-picker/type").DateRangeValue;
        partial: import("../date-picker/type").DateRangePickerPartial;
        e: InputEvent;
    }) => void>;
    onPick: PropType<(value: import("../date-picker/type").DateValue, context: import("../date-picker/type").PickContext) => void>;
};
export default _default;
