{"version":3,"file":"date-range-picker-props.mjs","sources":["../../src/date-picker/date-range-picker-props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdDateRangePickerProps } from '../date-picker/type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否允许输入日期 */\n  allowInput: Boolean,\n  /** 是否显示清楚按钮 */\n  clearable: Boolean,\n  /** 禁用日期，示例：['A', 'B'] 表示日期 A 和日期 B 会被禁用。{ from: 'A', to: 'B' } 表示在 A 到 B 之间的日期会被禁用。{ before: 'A', after: 'B' } 表示在 A 之前和在 B 之后的日期都会被禁用。其中 A = '2021-01-01'，B = '2021-02-01'。值类型为 Function 则表示返回值为 true 的日期会被禁用 */\n  disableDate: {\n    type: [Object, Array, Function] as PropType<TdDateRangePickerProps['disableDate']>,\n  },\n  /** 是否禁用组件，值为数组表示可分别控制开始日期和结束日期是否禁用 */\n  disabled: Boolean,\n  /** 是否显示时间选择 */\n  enableTimePicker: Boolean,\n  /** 第一天从星期几开始 */\n  firstDayOfWeek: {\n    type: Number,\n    validator(val: TdDateRangePickerProps['firstDayOfWeek']): boolean {\n      if (!val) return true;\n      return [1, 2, 3, 4, 5, 6, 7].includes(val);\n    },\n  },\n  /** 用于格式化日期，[详细文档](https://day.js.org/docs/en/display/format) */\n  format: {\n    type: String,\n    default: '',\n  },\n  /** 选择器模式 */\n  mode: {\n    type: String as PropType<TdDateRangePickerProps['mode']>,\n    default: 'date' as TdDateRangePickerProps['mode'],\n    validator(val: TdDateRangePickerProps['mode']): boolean {\n      if (!val) return true;\n      return ['year', 'quarter', 'month', 'week', 'date'].includes(val);\n    },\n  },\n  /** 在开始日期选中之前，面板是否显示预选状态，即是否高亮预选日期 */\n  panelPreselection: {\n    type: Boolean,\n    default: true,\n  },\n  /** 占位符，值为数组表示可分别为开始日期和结束日期设置占位符 */\n  placeholder: {\n    type: [String, Array] as PropType<TdDateRangePickerProps['placeholder']>,\n  },\n  /** 透传给 popup 组件的参数 */\n  popupProps: {\n    type: Object as PropType<TdDateRangePickerProps['popupProps']>,\n  },\n  /** 组件前置图标 */\n  prefixIcon: {\n    type: Function as PropType<TdDateRangePickerProps['prefixIcon']>,\n  },\n  /** 预设快捷日期选择，示例：{ '特定日期范围': ['2021-01-01', '2022-01-01'], '本月': [dayjs().startOf('month'), dayjs().endOf('month')] } */\n  presets: {\n    type: Object as PropType<TdDateRangePickerProps['presets']>,\n  },\n  /** 预设面板展示区域（包含确定按钮） */\n  presetsPlacement: {\n    type: String as PropType<TdDateRangePickerProps['presetsPlacement']>,\n    default: 'bottom' as TdDateRangePickerProps['presetsPlacement'],\n    validator(val: TdDateRangePickerProps['presetsPlacement']): boolean {\n      if (!val) return true;\n      return ['left', 'top', 'right', 'bottom'].includes(val);\n    },\n  },\n  /** 透传给范围输入框 RangeInput 组件的参数 */\n  rangeInputProps: {\n    type: Object as PropType<TdDateRangePickerProps['rangeInputProps']>,\n  },\n  /** 日期分隔符 */\n  separator: {\n    type: String,\n    default: '-',\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdDateRangePickerProps['status']>,\n    validator(val: TdDateRangePickerProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 组件后置图标 */\n  suffixIcon: {\n    type: Function as PropType<TdDateRangePickerProps['suffixIcon']>,\n  },\n  /** 透传 TimePicker 组件属性 */\n  timePickerProps: {\n    type: Object as PropType<TdDateRangePickerProps['timePickerProps']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdDateRangePickerProps['tips']>,\n  },\n  /** 选中值 */\n  value: {\n    type: Array as PropType<TdDateRangePickerProps['value']>,\n    default: undefined,\n  },\n  modelValue: {\n    type: Array as PropType<TdDateRangePickerProps['value']>,\n    default: undefined,\n  },\n  /** 选中值，非受控属性 */\n  defaultValue: {\n    type: Array as PropType<TdDateRangePickerProps['defaultValue']>,\n    default: (): TdDateRangePickerProps['defaultValue'] => [],\n  },\n  /** 用于格式化日期，默认为：'YYYY-MM-DD'，可选值：'date/time-stamp/YYY-MM-DD' 等，[更多可选值见 Dayjs 详细文档](https://day.js.org/docs/en/display/format)。<br /> 其中 `valueType=date` 表示 `value` 数据类型为 `Date`；`valueType='time-stamp'` 表示 `value` 数据类型为时间戳 */\n  valueType: {\n    type: String,\n    default: '',\n  },\n  /** 当输入框失去焦点时触发 */\n  onBlur: Function as PropType<TdDateRangePickerProps['onBlur']>,\n  /** 选中值发生变化时触发 */\n  onChange: Function as PropType<TdDateRangePickerProps['onChange']>,\n  /** 输入框获得焦点时触发 */\n  onFocus: Function as PropType<TdDateRangePickerProps['onFocus']>,\n  /** 输入框数据发生变化时触发，参数 input 表示输入内容，value 表示组件当前有效值 */\n  onInput: Function as PropType<TdDateRangePickerProps['onInput']>,\n  /** 选中日期时触发，可能是开始日期，也可能是结束日期，第二个参数可以区分是开始日期或是结束日期 */\n  onPick: Function as PropType<TdDateRangePickerProps['onPick']>,\n};\n"],"names":["allowInput","Boolean","clearable","disableDate","type","Object","Array","Function","disabled","enableTimePicker","firstDayOfWeek","Number","validator","val","includes","format","String","mode","panelPreselection","placeholder","popupProps","prefixIcon","presets","presetsPlacement","rangeInputProps","separator","status","suffixIcon","timePickerProps","tips","value","modelValue","defaultValue","valueType","onBlur","onChange","onFocus","onInput","onPick"],"mappings":"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"}