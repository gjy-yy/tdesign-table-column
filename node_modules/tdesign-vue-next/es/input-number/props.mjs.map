{"version":3,"file":"props.mjs","sources":["../../src/input-number/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdInputNumberProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 文本内容位置，居左/居中/居右 */\n  align: {\n    type: String as PropType<TdInputNumberProps['align']>,\n    validator(val: TdInputNumberProps['align']): boolean {\n      if (!val) return true;\n      return ['left', 'center', 'right'].includes(val);\n    },\n  },\n  /** 宽度随内容自适应 */\n  autoWidth: Boolean,\n  /** [小数位数](https://en.wiktionary.org/wiki/decimal_place) */\n  decimalPlaces: {\n    type: Number,\n    default: undefined,\n  },\n  /** 禁用组件 */\n  disabled: Boolean,\n  /** 格式化输入框展示值。第二个事件参数 `context.fixedNumber` 表示处理过小数位数 `decimalPlaces` 的数字 */\n  format: {\n    type: Function as PropType<TdInputNumberProps['format']>,\n  },\n  /** 透传 Input 输入框组件全部属性 */\n  inputProps: {\n    type: Object as PropType<TdInputNumberProps['inputProps']>,\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdInputNumberProps['label']>,\n  },\n  /** 是否作为大数使用。JS 支持的最大数字位数是 16 位，超过 16 位的数字需作为字符串大数处理。此时，数据类型必须保持为字符串，否则会丢失数据 */\n  largeNumber: Boolean,\n  /** 最大值。如果是大数，请传入字符串 */\n  max: {\n    type: [String, Number] as PropType<TdInputNumberProps['max']>,\n    default: Infinity,\n  },\n  /** 最小值。如果是大数，请传入字符串 */\n  min: {\n    type: [String, Number] as PropType<TdInputNumberProps['min']>,\n    default: -Infinity,\n  },\n  /** 占位符 */\n  placeholder: {\n    type: String,\n    default: undefined,\n  },\n  /** 只读状态 */\n  readonly: Boolean,\n  /** 组件尺寸 */\n  size: {\n    type: String as PropType<TdInputNumberProps['size']>,\n    default: 'medium' as TdInputNumberProps['size'],\n    validator(val: TdInputNumberProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 文本框状态 */\n  status: {\n    type: String as PropType<TdInputNumberProps['status']>,\n    validator(val: TdInputNumberProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 数值改变步数，可以是小数。如果是大数，请保证数据类型为字符串 */\n  step: {\n    type: [String, Number] as PropType<TdInputNumberProps['step']>,\n    default: 1,\n  },\n  /** 后置内容 */\n  suffix: {\n    type: [String, Function] as PropType<TdInputNumberProps['suffix']>,\n  },\n  /** 按钮布局 */\n  theme: {\n    type: String as PropType<TdInputNumberProps['theme']>,\n    default: 'row' as TdInputNumberProps['theme'],\n    validator(val: TdInputNumberProps['theme']): boolean {\n      if (!val) return true;\n      return ['column', 'row', 'normal'].includes(val);\n    },\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdInputNumberProps['tips']>,\n  },\n  /** 数字输入框的值。当值为 '' 时，输入框显示为空 */\n  value: {\n    type: [String, Number] as PropType<TdInputNumberProps['value']>,\n    default: undefined,\n  },\n  modelValue: {\n    type: [String, Number] as PropType<TdInputNumberProps['value']>,\n    default: undefined,\n  },\n  /** 数字输入框的值。当值为 '' 时，输入框显示为空，非受控属性 */\n  defaultValue: {\n    type: [String, Number] as PropType<TdInputNumberProps['defaultValue']>,\n  },\n  /** 失去焦点时触发 */\n  onBlur: Function as PropType<TdInputNumberProps['onBlur']>,\n  /** 值变化时触发 */\n  onChange: Function as PropType<TdInputNumberProps['onChange']>,\n  /** 回车键按下时触发 */\n  onEnter: Function as PropType<TdInputNumberProps['onEnter']>,\n  /** 获取焦点时触发 */\n  onFocus: Function as PropType<TdInputNumberProps['onFocus']>,\n  /** 键盘按下时触发 */\n  onKeydown: Function as PropType<TdInputNumberProps['onKeydown']>,\n  /** 按下字符键时触发（keydown -> keypress -> keyup） */\n  onKeypress: Function as PropType<TdInputNumberProps['onKeypress']>,\n  /** 释放键盘时触发 */\n  onKeyup: Function as PropType<TdInputNumberProps['onKeyup']>,\n  /** 最大值或最小值校验结束后触发，`exceed-maximum` 表示超出最大值，`below-minimum` 表示小于最小值 */\n  onValidate: Function as PropType<TdInputNumberProps['onValidate']>,\n};\n"],"names":["align","type","String","validator","val","includes","autoWidth","Boolean","decimalPlaces","Number","disabled","format","Function","inputProps","Object","label","largeNumber","max","Infinity","min","placeholder","readonly","size","status","step","suffix","theme","tips","value","modelValue","defaultValue","onBlur","onChange","onEnter","onFocus","onKeydown","onKeypress","onKeyup","onValidate"],"mappings":"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"}