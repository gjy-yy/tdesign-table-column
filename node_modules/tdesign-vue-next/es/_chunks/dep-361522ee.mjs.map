{"version":3,"file":"dep-361522ee.mjs","sources":["../../node_modules/lodash/_isIterateeCall.js"],"sourcesContent":["var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n"],"names":["eq","require$$0","isArrayLike","require$$1","isIndex","require$$2","isObject","require$$3","isIterateeCall","value","index","object","type","length","_isIterateeCall"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,EAAE,GAAGC,IAAT;AAAA,IACIC,WAAW,GAAGC,aADlB;AAAA,IAEIC,OAAO,GAAGC,QAFd;AAAA,IAGIC,QAAQ,GAAGC,UAHf,CAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8C;AAC5C,EAAA,IAAI,CAACL,QAAQ,CAACK,MAAD,CAAb,EAAuB;AACrB,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;;EACD,IAAIC,IAAI,GAAUF,OAAAA,CAAAA,KAAV,CAAR,CAAA;;EACA,IAAIE,IAAI,IAAI,QAAR,GACKV,WAAW,CAACS,MAAD,CAAX,IAAuBP,OAAO,CAACM,KAAD,EAAQC,MAAM,CAACE,MAAf,CADnC,GAEKD,IAAI,IAAI,QAAR,IAAoBF,KAAK,IAAIC,MAFtC,EAGM;IACJ,OAAOX,EAAE,CAACW,MAAM,CAACD,KAAD,CAAP,EAAgBD,KAAhB,CAAT,CAAA;AACD,GAAA;;AACD,EAAA,OAAO,KAAP,CAAA;AACD,CAAA;;AAEDK,IAAAA,eAAc,GAAGN;;;;"}