{"version":3,"file":"dep-7ffddffa.mjs","sources":["../../node_modules/lodash/_baseDifference.js"],"sourcesContent":["var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n"],"names":["SetCache","require$$0","arrayIncludes","require$$1","arrayIncludesWith","require$$2","arrayMap","require$$3","baseUnary","require$$4","cacheHas","require$$5","LARGE_ARRAY_SIZE","baseDifference","array","values","iteratee","comparator","index","includes","isCommon","length","result","valuesLength","outer","value","computed","valuesIndex","push","_baseDifference"],"mappings":";;;;;;;;;;;AAAA,IAAIA,QAAQ,GAAGC,SAAf;AAAA,IACIC,aAAa,GAAGC,cADpB;AAAA,IAEIC,iBAAiB,GAAGC,kBAFxB;AAAA,IAGIC,QAAQ,GAAGC,SAHf;AAAA,IAIIC,SAAS,GAAGC,UAJhB;AAAA,IAKIC,QAAQ,GAAGC,SALf,CAAA;AAOA;;AACA,IAAIC,gBAAgB,GAAG,GAAvB,CAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiDC,UAAjD,EAA6D;EAC3D,IAAIC,KAAK,GAAG,CAAC,CAAb;MACIC,QAAQ,GAAGjB,aADf;MAEIkB,QAAQ,GAAG,IAFf;AAAA,MAGIC,MAAM,GAAGP,KAAK,CAACO,MAHnB;MAIIC,MAAM,GAAG,EAJb;AAAA,MAKIC,YAAY,GAAGR,MAAM,CAACM,MAL1B,CAAA;;EAOA,IAAI,CAACA,MAAL,EAAa;AACX,IAAA,OAAOC,MAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAIN,QAAJ,EAAc;IACZD,MAAM,GAAGT,QAAQ,CAACS,MAAD,EAASP,SAAS,CAACQ,QAAD,CAAlB,CAAjB,CAAA;AACD,GAAA;;AACD,EAAA,IAAIC,UAAJ,EAAgB;AACdE,IAAAA,QAAQ,GAAGf,iBAAX,CAAA;AACAgB,IAAAA,QAAQ,GAAG,KAAX,CAAA;AACD,GAHD,MAIK,IAAIL,MAAM,CAACM,MAAP,IAAiBT,gBAArB,EAAuC;AAC1CO,IAAAA,QAAQ,GAAGT,QAAX,CAAA;AACAU,IAAAA,QAAQ,GAAG,KAAX,CAAA;AACAL,IAAAA,MAAM,GAAG,IAAIf,QAAJ,CAAae,MAAb,CAAT,CAAA;AACD,GAAA;;AACDS,EAAAA,KAAK,EACL,OAAO,EAAEN,KAAF,GAAUG,MAAjB,EAAyB;AACvB,IAAA,IAAII,KAAK,GAAGX,KAAK,CAACI,KAAD,CAAjB;QACIQ,QAAQ,GAAGV,QAAQ,IAAI,IAAZ,GAAmBS,KAAnB,GAA2BT,QAAQ,CAACS,KAAD,CADlD,CAAA;IAGAA,KAAK,GAAIR,UAAU,IAAIQ,KAAK,KAAK,CAAzB,GAA8BA,KAA9B,GAAsC,CAA9C,CAAA;;AACA,IAAA,IAAIL,QAAQ,IAAIM,QAAQ,KAAKA,QAA7B,EAAuC;MACrC,IAAIC,WAAW,GAAGJ,YAAlB,CAAA;;MACA,OAAOI,WAAW,EAAlB,EAAsB;AACpB,QAAA,IAAIZ,MAAM,CAACY,WAAD,CAAN,KAAwBD,QAA5B,EAAsC;AACpC,UAAA,SAASF,KAAT,CAAA;AACD,SAAA;AACF,OAAA;;MACDF,MAAM,CAACM,IAAP,CAAYH,KAAZ,CAAA,CAAA;KAPF,MASK,IAAI,CAACN,QAAQ,CAACJ,MAAD,EAASW,QAAT,EAAmBT,UAAnB,CAAb,EAA6C;MAChDK,MAAM,CAACM,IAAP,CAAYH,KAAZ,CAAA,CAAA;AACD,KAAA;AACF,GAAA;;AACD,EAAA,OAAOH,MAAP,CAAA;AACD,CAAA;;AAEDO,IAAAA,eAAc,GAAGhB;;;;"}