/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import './dep-a48de419.mjs';
import { _ as _assignValue } from './dep-827c4600.mjs';
import { a as _castPath, b as _toKey } from './dep-0c515b62.mjs';
import { _ as _isIndex } from './dep-8e38f523.mjs';
import { i as isObject_1 } from './dep-d2403b2f.mjs';
import './dep-0b4185fe.mjs';

var assignValue = _assignValue,
    castPath = _castPath,
    isIndex = _isIndex,
    isObject = isObject_1,
    toKey = _toKey;
/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */

function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }

  path = castPath(path, object);
  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
      return object;
    }

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;

      if (newValue === undefined) {
        newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
      }
    }

    assignValue(nested, key, newValue);
    nested = nested[key];
  }

  return object;
}

var _baseSet = baseSet;

export { _baseSet as _ };
//# sourceMappingURL=dep-759eacca.mjs.map
