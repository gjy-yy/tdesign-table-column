{"version":3,"file":"dep-050b3eb2.mjs","sources":["../../node_modules/lodash/_trimmedEndIndex.js","../../node_modules/lodash/_baseTrim.js","../../node_modules/lodash/toNumber.js"],"sourcesContent":["/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"names":["reWhitespace","trimmedEndIndex","string","index","length","test","charAt","_trimmedEndIndex","require$$0","reTrimStart","baseTrim","slice","replace","_baseTrim","isObject","require$$1","isSymbol","require$$2","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","value","other","valueOf","isBinary","toNumber_1"],"mappings":"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"}