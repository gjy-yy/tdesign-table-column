{"version":3,"file":"dep-fda161b3.mjs","sources":["../../node_modules/tinycolor2/tinycolor.js","../../src/_common/js/color-picker/gradient.ts"],"sourcesContent":["// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","/* eslint-disable no-param-reassign */\n/**\n * 用于反解析渐变字符串为对象\n * https://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex\n */\nimport tinyColor from 'tinycolor2';\n\n/**\n * Utility combine multiple regular expressions.\n *\n * @param {RegExp[]|string[]} regexpList List of regular expressions or strings.\n * @param {string} flags Normal RegExp flags.\n */\nconst combineRegExp = (regexpList: (string | RegExp)[], flags: string): RegExp => {\n  let source = '';\n  for (let i = 0; i < regexpList.length; i++) {\n    if (typeof regexpList[i] === 'string') {\n      source += regexpList[i];\n    } else {\n      source += (regexpList[i] as RegExp).source;\n    }\n  }\n  return new RegExp(source, flags);\n};\n\ninterface RegExpLib {\n  gradientSearch: RegExp;\n  colorStopSearch: RegExp;\n}\n\ninterface ColorStop {\n  color: string;\n  position?: string;\n}\n\ninterface ParseGradientResult {\n  original: string;\n  colorStopList?: ColorStop[];\n  line?: string;\n  angle?: string;\n  sideCorner?: string;\n}\n\n/**\n * Generate the required regular expressions once.\n *\n * Regular Expressions are easier to manage this way and can be well described.\n *\n * @result {object} Object containing regular expressions.\n */\nconst generateRegExp = (): RegExpLib => {\n  // Note any variables with \"Capture\" in name include capturing bracket set(s).\n  const searchFlags = 'gi'; // ignore case for angles, \"rgb\" etc\n  const rAngle = /(?:[+-]?\\d*\\.?\\d+)(?:deg|grad|rad|turn)/; // Angle +ive, -ive and angle types\n  // optional 2nd part\n  const rSideCornerCapture = /to\\s+((?:(?:left|right|top|bottom)(?:\\s+(?:top|bottom|left|right))?))/;\n  const rComma = /\\s*,\\s*/; // Allow space around comma.\n  const rColorHex = /#(?:[a-f0-9]{6}|[a-f0-9]{3})/; // 3 or 6 character form\n  const rDigits3 = /\\(\\s*(?:\\d{1,3}\\s*,\\s*){2}\\d{1,3}\\s*\\)/;\n  const // \"(1, 2, 3)\"\n    rDigits4 = /\\(\\s*(?:\\d{1,3}\\s*,\\s*){2}\\d{1,3}\\s*,\\s*\\d*\\.?\\d+\\)/;\n  const // \"(1, 2, 3, 4)\"\n    rValue = /(?:[+-]?\\d*\\.?\\d+)(?:%|[a-z]+)?/;\n  const // \".9\", \"-5px\", \"100%\".\n    rKeyword = /[_a-z-][_a-z0-9-]*/;\n  const // \"red\", \"transparent\".\n    rColor = combineRegExp(\n      ['(?:', rColorHex, '|', '(?:rgb|hsl)', rDigits3, '|', '(?:rgba|hsla)', rDigits4, '|', rKeyword, ')'],\n      '',\n    );\n  const rColorStop = combineRegExp([rColor, '(?:\\\\s+', rValue, '(?:\\\\s+', rValue, ')?)?'], '');\n  const // Single Color Stop, optional %, optional length.\n    rColorStopList = combineRegExp(['(?:', rColorStop, rComma, ')*', rColorStop], '');\n  const // List of color stops min 1.\n    rLineCapture = combineRegExp(['(?:(', rAngle, ')|', rSideCornerCapture, ')'], '');\n  const // Angle or SideCorner\n    rGradientSearch = combineRegExp(['(?:(', rLineCapture, ')', rComma, ')?(', rColorStopList, ')'], searchFlags);\n  const // Capture 1:\"line\", 2:\"angle\" (optional), 3:\"side corner\" (optional) and 4:\"stop list\".\n    rColorStopSearch = combineRegExp(\n      ['\\\\s*(', rColor, ')', '(?:\\\\s+', '(', rValue, '))?', '(?:', rComma, '\\\\s*)?'],\n      searchFlags,\n    ); // Capture 1:\"color\" and 2:\"position\" (optional).\n\n  return {\n    gradientSearch: rGradientSearch,\n    colorStopSearch: rColorStopSearch,\n  };\n};\n\n/**\n * Actually parse the input gradient parameters string into an object for reusability.\n *\n *\n * @note Really this only supports the standard syntax not historical versions, see MDN for details\n *       https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient\n *\n * @param regExpLib\n * @param {string} input\n * @returns {object|undefined}\n */\nconst parseGradient = (regExpLib: RegExpLib, input: string) => {\n  let result: ParseGradientResult;\n  let matchColorStop: any;\n  let stopResult: ColorStop;\n\n  // reset search position, because we reuse regex.\n  regExpLib.gradientSearch.lastIndex = 0;\n\n  const matchGradient = regExpLib.gradientSearch.exec(input);\n  if (matchGradient !== null) {\n    result = {\n      original: matchGradient[0],\n      colorStopList: [],\n    };\n\n    // Line (Angle or Side-Corner).\n    if (matchGradient[1]) {\n      // eslint-disable-next-line prefer-destructuring\n      result.line = matchGradient[1];\n    }\n    // Angle or undefined if side-corner.\n    if (matchGradient[2]) {\n      // eslint-disable-next-line prefer-destructuring\n      result.angle = matchGradient[2];\n    }\n    // Side-corner or undefined if angle.\n    if (matchGradient[3]) {\n      // eslint-disable-next-line prefer-destructuring\n      result.sideCorner = matchGradient[3];\n    }\n\n    // reset search position, because we reuse regex.\n    regExpLib.colorStopSearch.lastIndex = 0;\n\n    // Loop though all the color-stops.\n    matchColorStop = regExpLib.colorStopSearch.exec(matchGradient[4]);\n    while (matchColorStop !== null) {\n      stopResult = {\n        color: matchColorStop[1],\n      };\n\n      // Position (optional).\n      if (matchColorStop[2]) {\n        // eslint-disable-next-line prefer-destructuring\n        stopResult.position = matchColorStop[2];\n      }\n      result.colorStopList.push(stopResult);\n\n      // Continue searching from previous position.\n      matchColorStop = regExpLib.colorStopSearch.exec(matchGradient[4]);\n    }\n  }\n\n  // Can be undefined if match not found.\n  return result;\n};\n\nexport interface GradientColorPoint {\n  id?: string;\n  color?: string;\n  left?: number;\n}\n\nexport interface GradientColors {\n  points: GradientColorPoint[];\n  degree: number;\n}\n\nconst REGEXP_LIB = generateRegExp();\nconst REG_GRADIENT = /.*gradient\\s*\\(((?:\\([^)]*\\)|[^)(]*)*)\\)/gim;\n\n/**\n * 验证是否是渐变字符串\n * @param input\n * @returns\n */\nexport const isGradientColor = (input: string): null | RegExpExecArray => {\n  REG_GRADIENT.lastIndex = 0;\n  return REG_GRADIENT.exec(input);\n};\n\n// 边界字符串和角度关系\nconst sideCornerDegreeMap = {\n  top: 0,\n  right: 90,\n  bottom: 180,\n  left: 270,\n  'top left': 225,\n  'left top': 225,\n  'top right': 135,\n  'right top': 135,\n  'bottom left': 315,\n  'left bottom': 315,\n  'bottom right': 45,\n  'right bottom': 45,\n};\n\n/**\n * 解析渐变字符串为 GradientColors 对象\n * @param input\n * @returns\n */\nexport const parseGradientString = (input: string): GradientColors | boolean => {\n  const match = isGradientColor(input);\n  if (!match) {\n    return false;\n  }\n  const gradientColors: GradientColors = {\n    points: [],\n    degree: 0,\n  };\n\n  const result: ParseGradientResult = parseGradient(REGEXP_LIB, match[1]);\n  if (result.original.trim() !== match[1].trim()) {\n    return false;\n  }\n  const points: GradientColorPoint[] = result.colorStopList.map(({ color, position }) => {\n    const point = Object.create(null);\n    point.color = tinyColor(color).toRgbString();\n    point.left = parseFloat(position);\n    return point;\n  });\n  gradientColors.points = points;\n  let degree = parseInt(result.angle, 10);\n  if (Number.isNaN(degree)) {\n    degree = sideCornerDegreeMap[result.sideCorner] || 90;\n  }\n  gradientColors.degree = degree;\n\n  return gradientColors;\n};\n\nexport default parseGradientString;\n"],"names":["Math","trimLeft","trimRight","tinyCounter","mathRound","round","mathMin","min","mathMax","max","mathRandom","random","tinycolor","color","opts","rgb","inputToRGB","_originalInput","_r","r","_g","g","_b","b","_a","a","_roundA","_format","format","_gradientType","gradientType","_ok","ok","_tc_id","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","boundAlpha","toHsv","hsv","rgbToHsv","h","s","v","toHsvString","toHsl","hsl","rgbToHsl","l","toHslString","toHex","allow3Char","rgbToHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","bound01","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","rgbaToArgbHex","secondHex8String","toString","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","call","lighten","arguments","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","fromRatio","newColor","i","hasOwnProperty","convertToPercentage","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","hsvToRgb","hslToRgb","d","hue2rgb","p","q","t","floor","f","mod","hex","pad2","charAt","join","convertDecimalToHex","equals","color1","color2","amount","clamp01","hue","results","slices","part","ret","push","modification","mix","rgb1","rgb2","rgba","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","validateWCAG2Parms","level","size","mostReadable","baseColor","colorList","bestColor","bestScore","includeFallbackColors","length","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flip","o","flipped","parseFloat","isNaN","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","convertHexToDecimal","matchers","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","hsla","hsva","hex3","hex6","hex4","hex8","exec","replace","toLowerCase","named","match","parms","toUpperCase","module","exports","define","amd","window","combineRegExp","regexpList","flags","source","generateRegExp","searchFlags","rAngle","rSideCornerCapture","rComma","rColorHex","rDigits3","rDigits4","rValue","rKeyword","rColor","rColorStop","rColorStopList","rLineCapture","rGradientSearch","rColorStopSearch","gradientSearch","colorStopSearch","parseGradient","regExpLib","input","result","matchColorStop","stopResult","lastIndex","matchGradient","original","colorStopList","line","angle","sideCorner","position","REGEXP_LIB","REG_GRADIENT","isGradientColor","sideCornerDegreeMap","top","right","bottom","left","parseGradientString","gradientColors","points","degree","trim","map","point","Object","create","tinyColor","Number"],"mappings":"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"}