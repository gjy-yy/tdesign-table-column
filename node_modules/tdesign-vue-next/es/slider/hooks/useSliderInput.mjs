/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-0b4c3c44.mjs';
import { computed, createVNode, mergeProps } from 'vue';
import { InputNumber } from '../../input-number/index.mjs';
import '../../input-number/input-number.mjs';
import 'tdesign-icons-vue-next';
import '../../button/index.mjs';
import '../../button/button.mjs';
import '../../_chunks/dep-8c39d78a.mjs';
import '../../_chunks/dep-556a2f2c.mjs';
import '../../loading/index.mjs';
import '../../loading/directive.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../_chunks/dep-dcf624da.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-e68fd68c.mjs';
import '../../hooks/useConfig.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-bfb23a5e.mjs';
import '../../_chunks/dep-a48de419.mjs';
import '../../_chunks/dep-2a7dc5c7.mjs';
import '../../_chunks/dep-9311bf66.mjs';
import '../../_chunks/dep-4889eb51.mjs';
import '../../_chunks/dep-0b4185fe.mjs';
import '../../_chunks/dep-3ca5fb38.mjs';
import '../../_chunks/dep-7071345f.mjs';
import '../../_chunks/dep-d2403b2f.mjs';
import '../../_chunks/dep-7922050a.mjs';
import '../../_chunks/dep-169ea640.mjs';
import '../../_chunks/dep-f6b25712.mjs';
import '../../_chunks/dep-59545a4d.mjs';
import '../../_chunks/dep-c27b1c14.mjs';
import '../../_chunks/dep-7d96367f.mjs';
import '../../_chunks/dep-827c4600.mjs';
import '../../_chunks/dep-0820e0e2.mjs';
import '../../_chunks/dep-caad2e91.mjs';
import '../../_chunks/dep-3d4aad09.mjs';
import '../../_chunks/dep-8e38f523.mjs';
import '../../_chunks/dep-469bf54b.mjs';
import '../../_chunks/dep-8ef9fb8e.mjs';
import '../../_chunks/dep-e769aafd.mjs';
import '../../_chunks/dep-400798c5.mjs';
import '../../_chunks/dep-361522ee.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../config-provider/type.mjs';
import '../../utils/dom.mjs';
import '../../_chunks/dep-2684fd15.mjs';
import '../../utils/easing.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-40522c7c.mjs';
import '../../_chunks/dep-83862ee1.mjs';
import '../../_chunks/dep-8e451077.mjs';
import '../../_chunks/dep-a82b01df.mjs';
import '../../_chunks/dep-192e10f1.mjs';
import '../../_chunks/dep-977c5cdd.mjs';
import '../../_chunks/dep-755716aa.mjs';
import '../../_chunks/dep-82798823.mjs';
import '../../_chunks/dep-52cbb58a.mjs';
import '../../_chunks/dep-db11154e.mjs';
import '../../_chunks/dep-baa4f9dc.mjs';
import '../../utils/transfer-dom.mjs';
import '../../loading/props.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../loading/type.mjs';
import '../../button/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../utils/set-style.mjs';
import '../../form/hooks.mjs';
import '../../hooks/tnode.mjs';
import '../../button/type.mjs';
import '../../input/index.mjs';
import '../../input/input.mjs';
import '../../input/props.mjs';
import '../../hooks/useGlobalIcon.mjs';
import '../../input/useInput.mjs';
import '../../utils/helper.mjs';
import '../../form/const.mjs';
import '../../hooks/index.mjs';
import '../../hooks/icon.mjs';
import '../../hooks/slot.mjs';
import '../../hooks/useCommonClassName.mjs';
import '../../hooks/useDefaultValue.mjs';
import '../../hooks/useDestroyOnClose.mjs';
import '../../hooks/useVirtualScroll.mjs';
import '../../hooks/useVModel.mjs';
import '../../input/useInputEventHandler.mjs';
import '../../input/useInputWidth.mjs';
import '../../input/input-group.mjs';
import '../../input/type.mjs';
import '../../input-number/props.mjs';
import '../../input-number/useInputNumber.mjs';
import '../../_common/js/input-number/number.mjs';
import '../../_chunks/dep-869cd310.mjs';
import '../../_common/js/input-number/large-number.mjs';
import '../../_common/js/log/log.mjs';
import '../../_common/js/log/index.mjs';
import '../../input-number/type.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var INPUT_NUMBER_PROPS_INITIAL_STATE = {
  decimalPlaces: 0,
  format: void 0,
  placeholder: "",
  theme: "column"
};
var useSliderInput = function useSliderInput(config) {
  var name = config.value.prefixName;
  var sliderInputState = computed(function () {
    var initialState = _objectSpread({}, INPUT_NUMBER_PROPS_INITIAL_STATE);

    var inputProps = config.value;

    if (typeof inputProps.inputNumberProps !== "boolean") {
      var _inputProps$inputNumb;

      var inputTheme = (_inputProps$inputNumb = inputProps.inputNumberProps) === null || _inputProps$inputNumb === void 0 ? void 0 : _inputProps$inputNumb.theme;
      initialState = _objectSpread(_objectSpread({}, initialState), inputProps.inputNumberProps);

      if (["column", "row", "normal"].includes(inputTheme)) {
        initialState.theme = inputTheme;
      }
    }

    return initialState;
  });
  var sliderNumberClass = computed(function () {
    return ["".concat(name, "__input"), {
      "is-vertical": config.value.vertical
    }];
  });

  var renderInputNumber = function renderInputNumber(val, changeFn) {
    var normalizeChangeFn = function normalizeChangeFn(num) {
      if (num !== void 0 && !isNaN(num)) {
        changeFn(num);
      }
    };

    return createVNode(InputNumber, mergeProps(sliderInputState.value, {
      "class": sliderNumberClass.value,
      "value": val,
      "step": config.value.step,
      "onChange": normalizeChangeFn,
      "disabled": config.value.disabled,
      "min": config.value.min,
      "max": config.value.max
    }), null);
  };

  return renderInputNumber;
};

export { useSliderInput };
//# sourceMappingURL=useSliderInput.mjs.map
