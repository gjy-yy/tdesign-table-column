{"version":3,"file":"useSliderTooltip.mjs","sources":["../../../src/slider/hooks/useSliderTooltip.tsx"],"sourcesContent":["import { TooltipProps } from '@src/tooltip';\nimport { ref, computed, ComputedRef, Ref } from 'vue';\nimport { TdSliderProps } from '../type';\nimport { formatLabel } from '../util/common';\n\nconst initialProps: TooltipProps & { overlayClassName: string } = {\n  visible: false,\n  trigger: 'hover',\n  showArrow: true,\n  overlayInnerStyle: undefined,\n  overlayClassName: undefined,\n  attach: 'body',\n  theme: 'default',\n};\n\nexport interface TooltipConfig {\n  tooltipProps: boolean | TooltipProps;\n  vertical: boolean;\n  value: number;\n  label: TdSliderProps['label'];\n}\n\n/**\n * 聚合管理滑块tooltip内容hook\n * @param tooltipProps tooltip属性配置\n * @param vertical 是否垂直展示\n * @returns\n */\nexport const useSliderTooltip = (tooltipConfig: Ref<TooltipConfig>) => {\n  const tooltipRef = ref();\n  const showTooltip = computed({\n    get() {\n      return !tooltipConfig.value.tooltipProps === false;\n    },\n    set(val) {\n      return val;\n    },\n  });\n  const normalizeProps = ref<TooltipProps & { overlayClassName: string }>({ ...initialProps });\n  /** 开关显示tooltip */\n  const toggleTooltip = (toState: boolean) => {\n    if (!showTooltip.value) return;\n    normalizeProps.value.visible = toState;\n  };\n\n  /** 合并最终tooltip属性，以外部同名属性覆盖初始化属性 */\n  const validProps = computed(() => {\n    const { vertical, tooltipProps, label, value } = tooltipConfig.value;\n    const placement = vertical ? 'right' : 'top';\n    const content = formatLabel(label, value);\n    if (tooltipProps instanceof Object) {\n      if (!tooltipProps?.placement) {\n        normalizeProps.value.placement = placement;\n      }\n      // @ts-ignore\n      return { ...normalizeProps.value, ...tooltipProps, content };\n    }\n    return { ...normalizeProps.value, placement, content };\n  });\n\n  return {\n    tooltipRef,\n    tooltipProps: validProps as ComputedRef<TdSliderProps['tooltipProps']>,\n    toggleTooltip,\n    showTooltip,\n  };\n};\n"],"names":["initialProps","visible","trigger","showArrow","overlayInnerStyle","overlayClassName","attach","theme","useSliderTooltip","tooltipConfig","tooltipRef","ref","showTooltip","computed","get","value","tooltipProps","set","val","normalizeProps","toggleTooltip","toState","validProps","vertical","label","placement","content","formatLabel","Object"],"mappings":";;;;;;;;;;;;;AAKA,IAAMA,YAA4D,GAAA;AAChEC,EAAAA,OAAS,EAAA,KADuD;AAEhEC,EAAAA,OAAS,EAAA,OAFuD;AAGhEC,EAAAA,SAAW,EAAA,IAHqD;EAIhEC,iBAAmB,EAAA,KAAA,CAJ6C;EAKhEC,gBAAkB,EAAA,KAAA,CAL8C;AAMhEC,EAAAA,MAAQ,EAAA,MANwD;AAOhEC,EAAAA,KAAO,EAAA,SAAA;AAPyD,CAAlE,CAAA;IAuBaC,gBAAA,GAAmB,SAAnBA,gBAAmB,CAACC,aAAD,EAAuC;EACrE,IAAMC,aAAaC,GAAI,EAAvB,CAAA;EACA,IAAMC,cAAcC,QAAS,CAAA;AAC3BC,IAAAA,GAD2B,EACrB,SAAA,GAAA,GAAA;AACG,MAAA,OAAA,CAACL,aAAc,CAAAM,KAAd,CAAoBC,YAArB,KAAsC,KAAtC,CAAA;KAFkB;IAI3BC,GAJ2B,EAAA,SAAA,GAAA,CAIvBC,GAJuB,EAIlB;AACA,MAAA,OAAAA,GAAA,CAAA;AACT,KAAA;AAN2B,GAAA,CAA7B,CAAA;AAQA,EAAA,IAAMC,cAAiB,GAAAR,GAAA,CAAA,aAAA,CAAA,EAAA,EAAsDX,YAAtD,CAAvB,CAAA,CAAA;;AAEM,EAAA,IAAAoB,aAAA,GAAgB,SAAhBA,aAAgB,CAACC,OAAD,EAAsB;AAC1C,IAAA,IAAI,CAACT,WAAY,CAAAG,KAAjB,EAAwB,OAAA;AACxBI,IAAAA,cAAA,CAAeJ,KAAf,CAAqBd,OAArB,GAA+BoB,OAA/B,CAAA;GAFI,CAAA;;AAMA,EAAA,IAAAC,UAAA,GAAaT,SAAS,YAAM;IAChC,IAAiDJ,oBAAAA,GAAAA,aAAc,CAAAM,KAA/D;QAAQQ,QAAR,wBAAQA,QAAR;QAAkBP,YAAlB,wBAAkBA,YAAlB;QAAgCQ,KAAhC,wBAAgCA,KAAhC;QAAuCT,KAAvC,wBAAuCA,KAAvC,CAAA;AACM,IAAA,IAAAU,SAAA,GAAYF,WAAW,UAAU,KAAjC,CAAA;AACA,IAAA,IAAAG,OAAA,GAAUC,WAAY,CAAAH,KAAA,EAAOT,KAAP,CAAtB,CAAA;;IACN,IAAIC,wBAAwBY,MAA5B,EAAoC;MAC9B,IAAA,EAACZ,YAAD,KAACA,IAAAA,IAAAA,YAAD,eAACA,aAAcS,SAAf,CAAA,EAA0B;AAC5BN,QAAAA,cAAA,CAAeJ,KAAf,CAAqBU,SAArB,GAAiCA,SAAjC,CAAA;AACF,OAAA;;AAEA,MAAA,OAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAYN,cAAA,CAAeJ,KAA3B,CAAA,EAAqCC,YAArC,CAAA,EAAA,EAAA,EAAA;AAAmDU,QAAAA,OAAQ,EAARA,OAAAA;AAAnD,OAAA,CAAA,CAAA;AACF,KAAA;;IACA,OAAYP,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,cAAe,CAAAJ,KAA3B,CAAA,EAAA,EAAA,EAAA;AAAkCU,MAAAA,WAAAA,SAAlC;AAA6CC,MAAAA,OAAQ,EAARA,OAAAA;AAA7C,KAAA,CAAA,CAAA;AACD,IAZK,CAAA;EAcC,OAAA;AACLhB,IAAAA,UAAA,EAAAA,UADK;AAELM,IAAAA,YAAc,EAAAM,UAFT;AAGLF,IAAAA,aAAA,EAAAA,aAHK;AAILR,IAAAA,WAAA,EAAAA,WAAAA;GAJK,CAAA;AAMT;;;;"}