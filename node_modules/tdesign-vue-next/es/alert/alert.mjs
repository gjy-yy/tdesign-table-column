/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-0b4c3c44.mjs';
import { defineComponent, ref, createVNode, onMounted, onBeforeUnmount } from 'vue';
import { CheckCircleFilledIcon, CloseIcon, ErrorCircleFilledIcon, HelpCircleFilledIcon, InfoCircleFilledIcon } from 'tdesign-icons-vue-next';
import { addClass, on, off } from '../utils/dom.mjs';
import props from './props.mjs';
import { useIcon } from '../hooks/icon.mjs';
import { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { useConfig } from '../config-provider/useConfig.mjs';
import '../_chunks/dep-a48de419.mjs';
import '../_chunks/dep-2684fd15.mjs';
import '../_chunks/dep-3ca5fb38.mjs';
import '../_chunks/dep-7071345f.mjs';
import '../_chunks/dep-3d4aad09.mjs';
import '../_chunks/dep-c27b1c14.mjs';
import '../utils/easing.mjs';
import '../_chunks/dep-40522c7c.mjs';
import '../_chunks/dep-83862ee1.mjs';
import '../_chunks/dep-f6b25712.mjs';
import '../_chunks/dep-59545a4d.mjs';
import '../_chunks/dep-7d96367f.mjs';
import '../_chunks/dep-4889eb51.mjs';
import '../_chunks/dep-0b4185fe.mjs';
import '../_chunks/dep-d2403b2f.mjs';
import '../_chunks/dep-7922050a.mjs';
import '../_chunks/dep-caad2e91.mjs';
import '../_chunks/dep-469bf54b.mjs';
import '../_chunks/dep-8e451077.mjs';
import '../_chunks/dep-a82b01df.mjs';
import '../_chunks/dep-192e10f1.mjs';
import '../_chunks/dep-977c5cdd.mjs';
import '../_chunks/dep-755716aa.mjs';
import '../_chunks/dep-82798823.mjs';
import '../_chunks/dep-52cbb58a.mjs';
import '../_chunks/dep-db11154e.mjs';
import '../_chunks/dep-baa4f9dc.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-bfb23a5e.mjs';
import '../_chunks/dep-2a7dc5c7.mjs';
import '../_chunks/dep-9311bf66.mjs';
import '../_chunks/dep-169ea640.mjs';
import '../_chunks/dep-827c4600.mjs';
import '../_chunks/dep-0820e0e2.mjs';
import '../_chunks/dep-8e38f523.mjs';
import '../_chunks/dep-8ef9fb8e.mjs';
import '../_chunks/dep-e769aafd.mjs';
import '../_chunks/dep-400798c5.mjs';
import '../_chunks/dep-361522ee.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/type.mjs';

var _Alert = defineComponent({
  name: "TAlert",
  props: props,
  setup: function setup(props2) {
    var _useConfig = useConfig("alert"),
        globalConfig = _useConfig.globalConfig,
        classPrefix = _useConfig.classPrefix;

    var _useGlobalIcon = useGlobalIcon({
      CheckCircleFilledIcon: CheckCircleFilledIcon,
      CloseIcon: CloseIcon,
      ErrorCircleFilledIcon: ErrorCircleFilledIcon,
      HelpCircleFilledIcon: HelpCircleFilledIcon,
      InfoCircleFilledIcon: InfoCircleFilledIcon
    }),
        CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon,
        CloseIcon$1 = _useGlobalIcon.CloseIcon,
        ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon,
        HelpCircleFilledIcon$1 = _useGlobalIcon.HelpCircleFilledIcon,
        InfoCircleFilledIcon$1 = _useGlobalIcon.InfoCircleFilledIcon;

    var COMPONENT_NAME = usePrefixClass("alert");
    var renderTNodeJSX = useTNodeJSX();
    var renderIconTNode = useIcon();
    var alertRef = ref(null);
    var descriptionRef = ref(null);
    var descHeight = ref(0);
    var visible = ref(true);
    var collapsed = ref(true);

    var renderIcon = function renderIcon() {
      var Component = {
        info: InfoCircleFilledIcon$1,
        success: CheckCircleFilledIcon$1,
        warning: ErrorCircleFilledIcon$1,
        error: ErrorCircleFilledIcon$1,
        question: HelpCircleFilledIcon$1
      };
      var iconContent = renderIconTNode("icon", Component);
      return iconContent ? createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__icon")
      }, [iconContent]) : null;
    };

    var renderClose = function renderClose() {
      var close = props2.close;
      var closeContent = null;

      if (close === true || close === "") {
        closeContent = createVNode(CloseIcon$1, null, null);
      } else if (typeof close === "string") {
        closeContent = close;
      } else {
        closeContent = renderIconTNode("close");
      }

      return closeContent ? createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__close"),
        "onClick": handleClose
      }, [closeContent]) : null;
    };

    var renderTitle = function renderTitle() {
      var titleContent = renderTNodeJSX("title");
      return titleContent ? createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__title")
      }, [" ", titleContent]) : null;
    };

    var renderMessage = function renderMessage() {
      var operationContent = renderTNodeJSX("operation");
      return createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__message")
      }, [renderDescription(), operationContent ? createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__operation")
      }, [operationContent]) : null]);
    };

    var renderDescription = function renderDescription() {
      var _descriptionRef$value, _descriptionRef$value2;

      var messageContent;
      messageContent = renderTNodeJSX("default");

      if (!messageContent) {
        messageContent = renderTNodeJSX("message");
      }

      var contentLength = Array.isArray(messageContent) ? messageContent.length : 1;
      var hasCollapse = props2.maxLine > 0 && props2.maxLine < contentLength;
      var height = (_descriptionRef$value = descriptionRef.value) === null || _descriptionRef$value === void 0 ? void 0 : (_descriptionRef$value2 = _descriptionRef$value.children[0]) === null || _descriptionRef$value2 === void 0 ? void 0 : _descriptionRef$value2.offsetHeight;

      if (hasCollapse && collapsed.value) {
        messageContent = messageContent.slice(0, props2.maxLine);
        height && (descriptionRef.value.style.height = "".concat(descHeight.value, "px"));
      } else if (hasCollapse) {
        height && (descriptionRef.value.style.height = "".concat(height * (contentLength - props2.maxLine) + descHeight.value, "px"));
      }

      return createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__description"),
        "ref": descriptionRef
      }, [hasCollapse ? messageContent.map(function (content) {
        return createVNode("div", null, [content]);
      }) : messageContent, hasCollapse ? createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__collapse"),
        "onClick": function onClick() {
          collapsed.value = !collapsed.value;
        }
      }, [collapsed.value ? globalConfig.value.expandText : globalConfig.value.collapseText]) : null]);
    };

    var renderContent = function renderContent() {
      return createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__content")
      }, [renderTitle(), renderMessage()]);
    };

    var handleClose = function handleClose(e) {
      var _props2$onClose;

      (_props2$onClose = props2.onClose) === null || _props2$onClose === void 0 ? void 0 : _props2$onClose.call(props2, {
        e: e
      });
      addClass(alertRef.value, "".concat(COMPONENT_NAME.value, "--closing"));
    };

    var handleCloseEnd = function handleCloseEnd(e) {
      if (e.propertyName === "opacity") {
        var _props2$onClosed;

        visible.value = false;
        (_props2$onClosed = props2.onClosed) === null || _props2$onClosed === void 0 ? void 0 : _props2$onClosed.call(props2, {
          e: e
        });
      }
    };

    onMounted(function () {
      on(alertRef.value, "transitionend", handleCloseEnd);
      descHeight.value = descriptionRef.value.offsetHeight;
    });
    onBeforeUnmount(function () {
      off(alertRef.value, "transitionend", handleCloseEnd);
    });
    return function () {
      return createVNode("div", {
        "ref": alertRef,
        "class": ["".concat(COMPONENT_NAME.value), "".concat(COMPONENT_NAME.value, "--").concat(props2.theme), _defineProperty({}, "".concat(classPrefix.value, "-is-hidden"), !visible.value)]
      }, [renderIcon(), renderContent(), renderClose()]);
    };
  }
});

export { _Alert as default };
//# sourceMappingURL=alert.mjs.map
