/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-0b4c3c44.mjs';
import { defineComponent, computed, createVNode, mergeProps } from 'vue';
import { o as omit_1 } from '../_chunks/dep-f1423dd2.mjs';
import Panel from './components/Panel.mjs';
import { SelectInput } from '../select-input/index.mjs';
import FakeArrow from '../common-components/fake-arrow.mjs';
import props from './props.mjs';
import { useCascaderContext } from './hooks.mjs';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.mjs';
import { handleRemoveTagEffect, closeIconClickEffect } from './core/effect.mjs';
import { getMultipleContent, getSingleContent, getPanels } from './core/helper.mjs';
import { getFakeArrowIconClass } from './core/className.mjs';
import { useFormDisabled } from '../form/hooks.mjs';
import { useConfig } from '../config-provider/useConfig.mjs';
import '../_chunks/dep-a48de419.mjs';
import '../_chunks/dep-192e10f1.mjs';
import '../_chunks/dep-efb50e88.mjs';
import '../_chunks/dep-2a7dc5c7.mjs';
import '../_chunks/dep-9311bf66.mjs';
import '../_chunks/dep-4889eb51.mjs';
import '../_chunks/dep-0b4185fe.mjs';
import '../_chunks/dep-3ca5fb38.mjs';
import '../_chunks/dep-7071345f.mjs';
import '../_chunks/dep-d2403b2f.mjs';
import '../_chunks/dep-7922050a.mjs';
import '../_chunks/dep-169ea640.mjs';
import '../_chunks/dep-f6b25712.mjs';
import '../_chunks/dep-59545a4d.mjs';
import '../_chunks/dep-c27b1c14.mjs';
import '../_chunks/dep-7d96367f.mjs';
import '../_chunks/dep-827c4600.mjs';
import '../_chunks/dep-0820e0e2.mjs';
import '../_chunks/dep-caad2e91.mjs';
import '../_chunks/dep-3d4aad09.mjs';
import '../_chunks/dep-8e38f523.mjs';
import '../_chunks/dep-469bf54b.mjs';
import '../_chunks/dep-10db0930.mjs';
import '../_chunks/dep-ad0cc3b4.mjs';
import '../_chunks/dep-83862ee1.mjs';
import '../_chunks/dep-0c515b62.mjs';
import '../_chunks/dep-977c5cdd.mjs';
import '../_chunks/dep-a82b01df.mjs';
import '../_chunks/dep-52cbb58a.mjs';
import '../_chunks/dep-400798c5.mjs';
import '../_chunks/dep-72359af2.mjs';
import '../_chunks/dep-e769aafd.mjs';
import './components/Item.mjs';
import 'tdesign-icons-vue-next';
import '../checkbox/index.mjs';
import '../checkbox/checkbox.mjs';
import '../_chunks/dep-dcf624da.mjs';
import '../_chunks/dep-556a2f2c.mjs';
import '../checkbox/props.mjs';
import '../hooks/useVModel.mjs';
import '../_chunks/dep-baa4f9dc.mjs';
import '../_chunks/dep-db11154e.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../_chunks/dep-bfb23a5e.mjs';
import '../_chunks/dep-8ef9fb8e.mjs';
import '../_chunks/dep-361522ee.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../utils/set-style.mjs';
import '../hooks/tnode.mjs';
import '../_chunks/dep-40522c7c.mjs';
import '../_chunks/dep-8e451077.mjs';
import '../_chunks/dep-755716aa.mjs';
import '../_chunks/dep-82798823.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-2684fd15.mjs';
import '../checkbox/constants.mjs';
import '../checkbox/group.mjs';
import '../_chunks/dep-8c39d78a.mjs';
import '../_chunks/dep-2ca0e5ff.mjs';
import '../_chunks/dep-c5bb3a66.mjs';
import '../checkbox/checkbox-group-props.mjs';
import '../hooks/slot.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../checkbox/type.mjs';
import '../config-provider/type.mjs';
import '../loading/index.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-e68fd68c.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../utils/transfer-dom.mjs';
import '../loading/props.mjs';
import '../loading/type.mjs';
import '../hooks/useGlobalIcon.mjs';
import '../select-input/select-input.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../popup/props.mjs';
import '../popup/container.mjs';
import '../popup/type.mjs';
import '../select-input/props.mjs';
import '../select-input/useSingle.mjs';
import '../_chunks/dep-32e8a48d.mjs';
import '../_chunks/dep-759eacca.mjs';
import '../_chunks/dep-544fb8fd.mjs';
import '../input/index.mjs';
import '../input/input.mjs';
import '../input/props.mjs';
import '../input/useInput.mjs';
import '../utils/helper.mjs';
import '../form/const.mjs';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../input/useInputEventHandler.mjs';
import '../input/useInputWidth.mjs';
import '../input/input-group.mjs';
import '../input/type.mjs';
import '../select-input/useMultiple.mjs';
import '../tag-input/index.mjs';
import '../tag-input/tag-input.mjs';
import '../tag-input/props.mjs';
import '../tag-input/hooks/useTagScroll.mjs';
import '../tag-input/useTagList.mjs';
import '../tag/index.mjs';
import '../tag/tag.mjs';
import '../tag/props.mjs';
import '../tag/check-tag.mjs';
import '../tag/check-tag-props.mjs';
import '../tag/type.mjs';
import '../tag-input/hooks/useHover.mjs';
import '../tag-input/hooks/useDragSorter.mjs';
import '../tag-input/type.mjs';
import '../select-input/useOverlayInnerStyle.mjs';
import '../select-input/type.mjs';
import '../_chunks/dep-b4aa9d43.mjs';
import '../_common/js/tree/tree-store.mjs';
import '../_chunks/dep-84a9ab7d.mjs';
import '../_chunks/dep-7ffddffa.mjs';
import '../_common/js/tree/tree-node.mjs';
import '../_chunks/dep-9262ea29.mjs';
import '../_chunks/dep-88e40e6a.mjs';
import '../_chunks/dep-6d14fb16.mjs';
import '../_common/js/tree/tree-node-model.mjs';
import '../_common/js/log/log.mjs';
import '../_chunks/dep-869cd310.mjs';
import '../_chunks/dep-ef911020.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _Cascader = defineComponent({
  name: "TCascader",
  props: _objectSpread({}, props),
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var disabled = useFormDisabled();
    var COMPONENT_NAME = usePrefixClass("cascader");
    var classPrefix = usePrefixClass();

    var _useCommonClassName = useCommonClassName(),
        STATUS = _useCommonClassName.STATUS;

    var overlayClassName = usePrefixClass("cascader__popup");

    var _useConfig = useConfig("cascader"),
        globalConfig = _useConfig.globalConfig;

    var _useCascaderContext = useCascaderContext(props2),
        cascaderContext = _useCascaderContext.cascaderContext,
        isFilterable = _useCascaderContext.isFilterable;

    var displayValue = computed(function () {
      return props2.multiple ? getMultipleContent(cascaderContext.value) : getSingleContent(cascaderContext.value);
    });
    var panels = computed(function () {
      return getPanels(cascaderContext.value.treeNodes);
    });
    var inputPlaceholder = computed(function () {
      var _props2$placeholder;

      return cascaderContext.value.visible && !props2.multiple && getSingleContent(cascaderContext.value) || ((_props2$placeholder = props2.placeholder) !== null && _props2$placeholder !== void 0 ? _props2$placeholder : globalConfig.value.placeholder);
    });

    var renderSuffixIcon = function renderSuffixIcon() {
      var _cascaderContext$valu = cascaderContext.value,
          visible = _cascaderContext$valu.visible,
          disabled2 = _cascaderContext$valu.disabled;
      return createVNode(FakeArrow, {
        "overlayClassName": getFakeArrowIconClass(classPrefix.value, STATUS.value, cascaderContext.value),
        "isActive": visible,
        "disabled": disabled2
      }, null);
    };

    return function () {
      var _props2$popupProps;

      var _cascaderContext$valu2 = cascaderContext.value,
          setVisible = _cascaderContext$valu2.setVisible,
          visible = _cascaderContext$valu2.visible,
          inputVal = _cascaderContext$valu2.inputVal,
          setInputVal = _cascaderContext$valu2.setInputVal;
      return createVNode(SelectInput, mergeProps({
        "class": COMPONENT_NAME.value,
        "value": displayValue.value,
        "inputValue": visible ? inputVal : "",
        "popupVisible": visible,
        "keys": props2.keys,
        "allowInput": isFilterable.value,
        "min-collapsed-num": props2.minCollapsedNum,
        "collapsed-items": props2.collapsedItems,
        "readonly": props2.readonly,
        "disabled": props2.disabled,
        "clearable": props2.clearable,
        "placeholder": inputPlaceholder.value,
        "multiple": props2.multiple,
        "loading": props2.loading,
        "status": props2.status,
        "tips": props2.tips,
        "suffixIcon": function suffixIcon() {
          return renderSuffixIcon();
        },
        "popupProps": _objectSpread(_objectSpread({}, props2.popupProps), {}, {
          overlayInnerStyle: panels.value.length && !props2.loading ? {
            width: "auto"
          } : "",
          overlayInnerClassName: [overlayClassName.value, (_props2$popupProps = props2.popupProps) === null || _props2$popupProps === void 0 ? void 0 : _props2$popupProps.overlayClassName]
        }),
        "inputProps": _objectSpread({
          size: props2.size
        }, props2.inputProps),
        "tagInputProps": _objectSpread({
          size: props2.size
        }, props2.tagInputProps),
        "tagProps": _objectSpread({}, props2.tagProps),
        "onInputChange": function onInputChange(value, ctx) {
          var _props2$selectInputPr, _props2$selectInputPr2;

          if (!isFilterable.value) return;
          setInputVal("".concat(value));
          props2 === null || props2 === void 0 ? void 0 : (_props2$selectInputPr = props2.selectInputProps) === null || _props2$selectInputPr === void 0 ? void 0 : (_props2$selectInputPr2 = _props2$selectInputPr.onInputChange) === null || _props2$selectInputPr2 === void 0 ? void 0 : _props2$selectInputPr2.call(_props2$selectInputPr, value, ctx);
        },
        "onTagChange": function onTagChange(val, ctx) {
          var _props2$selectInputPr3, _props2$selectInputPr4;

          if (ctx.trigger === "enter") return;
          handleRemoveTagEffect(cascaderContext.value, ctx.index, props2.onRemove);
          props2 === null || props2 === void 0 ? void 0 : (_props2$selectInputPr3 = props2.selectInputProps) === null || _props2$selectInputPr3 === void 0 ? void 0 : (_props2$selectInputPr4 = _props2$selectInputPr3.onTagChange) === null || _props2$selectInputPr4 === void 0 ? void 0 : _props2$selectInputPr4.call(_props2$selectInputPr3, val, ctx);
        },
        "onPopupVisibleChange": function onPopupVisibleChange(val, context) {
          var _props2$selectInputPr5, _props2$selectInputPr6;

          if (disabled.value) return;
          setVisible(val, context);
          props2 === null || props2 === void 0 ? void 0 : (_props2$selectInputPr5 = props2.selectInputProps) === null || _props2$selectInputPr5 === void 0 ? void 0 : (_props2$selectInputPr6 = _props2$selectInputPr5.onPopupVisibleChange) === null || _props2$selectInputPr6 === void 0 ? void 0 : _props2$selectInputPr6.call(_props2$selectInputPr5, val, context);
        },
        "onBlur": function onBlur(val, context) {
          var _props2$onBlur, _props2$selectInputPr7, _props2$selectInputPr8;

          (_props2$onBlur = props2.onBlur) === null || _props2$onBlur === void 0 ? void 0 : _props2$onBlur.call(props2, {
            value: cascaderContext.value.value,
            e: context.e
          });
          props2 === null || props2 === void 0 ? void 0 : (_props2$selectInputPr7 = props2.selectInputProps) === null || _props2$selectInputPr7 === void 0 ? void 0 : (_props2$selectInputPr8 = _props2$selectInputPr7.onBlur) === null || _props2$selectInputPr8 === void 0 ? void 0 : _props2$selectInputPr8.call(_props2$selectInputPr7, val, context);
        },
        "onFocus": function onFocus(val, context) {
          var _props2$onFocus, _props2$selectInputPr9, _props2$selectInputPr10;

          (_props2$onFocus = props2.onFocus) === null || _props2$onFocus === void 0 ? void 0 : _props2$onFocus.call(props2, {
            value: cascaderContext.value.value,
            e: context.e
          });
          props2 === null || props2 === void 0 ? void 0 : (_props2$selectInputPr9 = props2.selectInputProps) === null || _props2$selectInputPr9 === void 0 ? void 0 : (_props2$selectInputPr10 = _props2$selectInputPr9.onFocus) === null || _props2$selectInputPr10 === void 0 ? void 0 : _props2$selectInputPr10.call(_props2$selectInputPr9, val, context);
        },
        "onClear": function onClear(context) {
          var _props2$selectInputPr11, _props2$selectInputPr12;

          closeIconClickEffect(cascaderContext.value);
          props2 === null || props2 === void 0 ? void 0 : (_props2$selectInputPr11 = props2.selectInputProps) === null || _props2$selectInputPr11 === void 0 ? void 0 : (_props2$selectInputPr12 = _props2$selectInputPr11.onClear) === null || _props2$selectInputPr12 === void 0 ? void 0 : _props2$selectInputPr12.call(_props2$selectInputPr11, context);
        }
      }, omit_1(props2.selectInputProps, ["onTagChange", "onInputChange", "onPopupVisibleChange", "onBlur", "onFocus", "onClear"])), {
        panel: function panel() {
          return createVNode(Panel, {
            "empty": props2.empty,
            "visible": visible,
            "trigger": props2.trigger,
            "loading": props2.loading,
            "loadingText": props2.loadingText,
            "cascaderContext": cascaderContext.value
          }, {
            empty: slots.empty,
            loadingText: slots.loadingText
          });
        },
        collapsedItems: slots.collapsedItems
      });
    };
  }
});

export { _Cascader as default };
//# sourceMappingURL=cascader.mjs.map
