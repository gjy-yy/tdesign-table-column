{"version":3,"file":"effect.mjs","sources":["../../../src/cascader/core/effect.ts"],"sourcesContent":["import isNumber from 'lodash/isNumber';\nimport isFunction from 'lodash/isFunction';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { TreeNode, CascaderContextType, TdCascaderProps, TreeNodeValue, TreeNodeModel } from '../interface';\nimport { getFullPathLabel, getTreeValue } from './helper';\n\n/**\n * 点击item的副作用\n * @param propsTrigger\n * @param trigger\n * @param node\n * @param cascaderContext\n */\nexport function expendClickEffect(\n  propsTrigger: TdCascaderProps['trigger'],\n  trigger: TdCascaderProps['trigger'],\n  node: TreeNode,\n  cascaderContext: CascaderContextType,\n) {\n  const { checkStrictly, multiple, treeStore, setVisible, setValue, setTreeNodes, setExpend, value, max, valueType } =\n    cascaderContext;\n\n  const isDisabled = node.disabled || (multiple && (value as TreeNodeValue[]).length >= max && max !== 0);\n\n  if (isDisabled) return;\n  // 点击展开节点，设置展开状态\n  if (propsTrigger === trigger && !node.isLeaf()) {\n    const expanded = node.setExpanded(true);\n    treeStore.refreshNodes();\n    treeStore.replaceExpanded(expanded);\n    const nodes = treeStore.getNodes().filter((node: TreeNode) => node.visible);\n    setTreeNodes(nodes);\n\n    // 多选条件下手动维护expend\n    if (multiple) {\n      setExpend(expanded);\n    }\n  }\n\n  if (!multiple && (node.isLeaf() || checkStrictly) && trigger === 'click') {\n    treeStore.resetChecked();\n    const checked = node.setChecked(!node.checked);\n    const [value] = checked;\n\n    // 非受控状态下更新状态\n    setValue(valueType === 'single' ? value : node.getPath().map((item) => item.value), 'check', node.getModel());\n\n    if (!checkStrictly) {\n      setVisible(false, {});\n    }\n  }\n}\n\n/**\n * 多选状态下选中状态数据变化的副作用\n * @param node\n * @param cascaderContext\n * @returns\n */\nexport function valueChangeEffect(node: TreeNode, cascaderContext: CascaderContextType) {\n  const { disabled, max, inputVal, multiple, setVisible, setValue, treeNodes, treeStore, valueType } = cascaderContext;\n\n  if (!node || disabled || node.disabled) {\n    return;\n  }\n  const checked = node.setChecked(!node.isChecked());\n\n  if (isNumber(max) && max < 0) {\n    console.warn('TDesign Warn:', 'max should > 0');\n  }\n\n  if (checked.length > max && isNumber(max) && max > 0) {\n    return;\n  }\n\n  if (checked.length === 0) {\n    const expanded = treeStore.getExpanded();\n    setTimeout(() => {\n      treeStore.replaceExpanded(expanded);\n      treeStore.refreshNodes();\n    }, 0);\n  }\n\n  if (!multiple) {\n    setVisible(false, {});\n  }\n\n  const isSelectAll = treeNodes.every((item) => checked.indexOf(item.value) > -1);\n\n  if (inputVal && isSelectAll) {\n    setVisible(false, {});\n  }\n\n  // 处理不同数据类型\n  const resValue =\n    valueType === 'single'\n      ? checked\n      : checked.map((val) =>\n          treeStore\n            .getNode(val)\n            .getPath()\n            .map((item) => item.value),\n        );\n\n  setValue(resValue, 'check', node.getModel());\n}\n\n/**\n * closeIcon点击副作用\n * @param cascaderContext\n */\nexport function closeIconClickEffect(cascaderContext: CascaderContextType) {\n  const { setVisible, multiple, setExpend, setValue } = cascaderContext;\n\n  setVisible(false, {});\n\n  // 手动设置的展开需要去除\n  if (multiple) {\n    setExpend([]);\n  }\n\n  setValue(multiple ? [] : '', 'clear');\n}\n\n/**\n * tag 关闭按钮点击副作用\n * @param cascaderContext\n */\nexport function handleRemoveTagEffect(\n  cascaderContext: CascaderContextType,\n  index: number,\n  onRemove: TdCascaderProps['onRemove'],\n) {\n  const { disabled, setValue, value, valueType, treeStore } = cascaderContext;\n\n  if (disabled) return;\n  const newValue = cloneDeep(value) as [];\n  const res = newValue.splice(index, 1);\n  const node = treeStore.getNodes(res[0])[0];\n\n  setValue(newValue, 'uncheck', node.getModel());\n\n  const checked = node.setChecked(!node.isChecked());\n  // 处理不同数据类型\n  const resValue =\n    valueType === 'single'\n      ? checked\n      : checked.map((val) =>\n          treeStore\n            .getNode(val)\n            .getPath()\n            .map((item) => item.value),\n        );\n\n  setValue(resValue, 'uncheck', node.getModel());\n  if (isFunction(onRemove)) {\n    onRemove({ value: checked, node: node as any });\n  }\n}\n\n/**\n * input和treeStore变化的副作用\n * @param inputVal\n * @param treeStore\n * @param setTreeNodes\n * @returns\n */\nexport const treeNodesEffect = (\n  inputVal: CascaderContextType['inputVal'],\n  treeStore: CascaderContextType['treeStore'],\n  setTreeNodes: CascaderContextType['setTreeNodes'],\n  filter: CascaderContextType['filter'],\n) => {\n  if (!treeStore) return;\n  let nodes = [];\n  if (inputVal) {\n    const filterMethods = (node: TreeNode) => {\n      if (!node.isLeaf()) return;\n      if (isFunction(filter)) {\n        return filter(`${inputVal}`, node as TreeNodeModel & TreeNode);\n      }\n      const fullPathLabel = getFullPathLabel(node, '');\n      return fullPathLabel.indexOf(`${inputVal}`) > -1;\n    };\n\n    nodes = treeStore.nodes.filter(filterMethods);\n  } else {\n    nodes = treeStore.getNodes().filter((node: TreeNode) => node.visible);\n  }\n  setTreeNodes(nodes);\n};\n\n/**\n * 初始化展开阶段与展开状态副作用\n * @param treeStore\n * @param treeValue\n * @param expend\n */\nexport const treeStoreExpendEffect = (\n  treeStore: CascaderContextType['treeStore'],\n  value: CascaderContextType['value'],\n  expend: TreeNodeValue[],\n) => {\n  const treeValue = getTreeValue(value);\n\n  if (!treeStore) return;\n  // init expanded, 无expend状态时设置\n  if (Array.isArray(treeValue) && expend.length === 0) {\n    const expandedMap = new Map();\n    const [val] = treeValue;\n    if (val) {\n      expandedMap.set(val, true);\n      const node = treeStore.getNode(val);\n      if (!node) {\n        treeStore.refreshNodes();\n        return;\n      }\n      node.getParents().forEach((tn: TreeNode) => {\n        expandedMap.set(tn.value, true);\n      });\n      const expandedArr = Array.from(expandedMap.keys());\n      treeStore.replaceExpanded(expandedArr);\n    } else {\n      treeStore.resetExpanded();\n    }\n  }\n  // 本地维护 expend，更加可控，不需要依赖于 tree 的状态\n  if (treeStore.getExpanded() && expend.length) {\n    treeStore.replaceExpanded(expend);\n  }\n  treeStore.refreshNodes();\n};\n"],"names":["expendClickEffect","propsTrigger","trigger","node","cascaderContext","checkStrictly","multiple","treeStore","setVisible","setValue","setTreeNodes","setExpend","value","max","valueType","isDisabled","disabled","length","isLeaf","expanded","setExpanded","refreshNodes","replaceExpanded","nodes","getNodes","filter","visible","resetChecked","checked","setChecked","getPath","map","item","getModel","valueChangeEffect","inputVal","treeNodes","isChecked","isNumber","console","warn","getExpanded","setTimeout","isSelectAll","every","indexOf","resValue","val","getNode","closeIconClickEffect","handleRemoveTagEffect","index","onRemove","newValue","cloneDeep","res","splice","isFunction","treeNodesEffect","filterMethods","fullPathLabel","getFullPathLabel","treeStoreExpendEffect","expend","treeValue","getTreeValue","Array","isArray","expandedMap","Map","set","getParents","forEach","tn","expandedArr","from","keys","resetExpanded"],"mappings":"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"}