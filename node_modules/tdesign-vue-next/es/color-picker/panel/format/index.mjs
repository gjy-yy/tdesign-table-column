/**
 * tdesign v0.21.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../../../_chunks/dep-8c39d78a.mjs';
import { _ as _defineProperty } from '../../../_chunks/dep-0b4c3c44.mjs';
import { isVNode, defineComponent, ref, watch, createVNode, mergeProps } from 'vue';
import '../../../_chunks/dep-a48de419.mjs';
import { a as _createCompounder } from '../../../_chunks/dep-db11154e.mjs';
import props from '../../props.mjs';
import { FORMATS } from '../../const.mjs';
import { Select, Option } from '../../../select/index.mjs';
import FormatInputs from './inputs.mjs';
import { useBaseClassName } from '../../hooks.mjs';
import '../../../_chunks/dep-556a2f2c.mjs';
import '../../../_chunks/dep-a82b01df.mjs';
import '../../../_chunks/dep-3ca5fb38.mjs';
import '../../../_chunks/dep-7071345f.mjs';
import '../../../_chunks/dep-192e10f1.mjs';
import '../../../_chunks/dep-3d4aad09.mjs';
import '../../../_chunks/dep-977c5cdd.mjs';
import '../../../_chunks/dep-c27b1c14.mjs';
import '../../../_common/js/color-picker/constants.mjs';
import '../../../select/select.mjs';
import '../../../_chunks/dep-dcf624da.mjs';
import '../../../_chunks/dep-e68fd68c.mjs';
import '../../../_chunks/dep-32e8a48d.mjs';
import '../../../_chunks/dep-0c515b62.mjs';
import '../../../_chunks/dep-9311bf66.mjs';
import '../../../_chunks/dep-4889eb51.mjs';
import '../../../_chunks/dep-0b4185fe.mjs';
import '../../../_chunks/dep-d2403b2f.mjs';
import '../../../_chunks/dep-7922050a.mjs';
import '../../../_chunks/dep-169ea640.mjs';
import '../../../_chunks/dep-759eacca.mjs';
import '../../../_chunks/dep-827c4600.mjs';
import '../../../_chunks/dep-0820e0e2.mjs';
import '../../../_chunks/dep-8e38f523.mjs';
import '../../../_chunks/dep-544fb8fd.mjs';
import '../../../_chunks/dep-caad2e91.mjs';
import '../../../_chunks/dep-59545a4d.mjs';
import '../../../_chunks/dep-72359af2.mjs';
import '../../../_chunks/dep-ad0cc3b4.mjs';
import '../../../_chunks/dep-e769aafd.mjs';
import '../../../_chunks/dep-241fdd8c.mjs';
import '../../../_chunks/dep-050b3eb2.mjs';
import '../../../_chunks/dep-ef911020.mjs';
import '../../../_chunks/dep-efb50e88.mjs';
import '../../../_chunks/dep-2a7dc5c7.mjs';
import '../../../_chunks/dep-f6b25712.mjs';
import '../../../_chunks/dep-7d96367f.mjs';
import '../../../_chunks/dep-469bf54b.mjs';
import '../../../_chunks/dep-10db0930.mjs';
import '../../../_chunks/dep-83862ee1.mjs';
import '../../../_chunks/dep-6d14fb16.mjs';
import 'lodash';
import '../../../common-components/fake-arrow.mjs';
import '../../../hooks/useConfig.mjs';
import '../../../config-provider/useConfig.mjs';
import '../../../_chunks/dep-bfb23a5e.mjs';
import '../../../_chunks/dep-8ef9fb8e.mjs';
import '../../../_chunks/dep-400798c5.mjs';
import '../../../_chunks/dep-361522ee.mjs';
import '../../../_common/js/global-config/default-config.mjs';
import '../../../_common/js/global-config/locale/zh_CN.mjs';
import '../../../config-provider/type.mjs';
import '../../../select-input/index.mjs';
import '../../../select-input/select-input.mjs';
import '../../../popup/index.mjs';
import '../../../popup/popup.mjs';
import '@popperjs/core';
import '../../../utils/dom.mjs';
import '../../../_chunks/dep-2684fd15.mjs';
import '../../../utils/easing.mjs';
import '../../../utils/render-tnode.mjs';
import '../../../_chunks/dep-40522c7c.mjs';
import '../../../_chunks/dep-8e451077.mjs';
import '../../../_chunks/dep-755716aa.mjs';
import '../../../_chunks/dep-82798823.mjs';
import '../../../_chunks/dep-52cbb58a.mjs';
import '../../../_chunks/dep-baa4f9dc.mjs';
import '../../../_common/js/utils/set-style.mjs';
import '../../../popup/props.mjs';
import '../../../popup/container.mjs';
import '../../../hooks/useVModel.mjs';
import '../../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../../popup/type.mjs';
import '../../../select-input/props.mjs';
import '../../../select-input/useSingle.mjs';
import '../../../input/index.mjs';
import '../../../input/input.mjs';
import 'tdesign-icons-vue-next';
import '../../../input/props.mjs';
import '../../../form/hooks.mjs';
import '../../../hooks/useGlobalIcon.mjs';
import '../../../hooks/tnode.mjs';
import '../../../input/useInput.mjs';
import '../../../utils/helper.mjs';
import '../../../form/const.mjs';
import '../../../hooks/index.mjs';
import '../../../hooks/icon.mjs';
import '../../../hooks/slot.mjs';
import '../../../hooks/useCommonClassName.mjs';
import '../../../hooks/useDefaultValue.mjs';
import '../../../hooks/useDestroyOnClose.mjs';
import '../../../hooks/useKeepAnimation.mjs';
import '../../../hooks/useRipple.mjs';
import '../../../utils/set-style.mjs';
import '../../../hooks/useVirtualScroll.mjs';
import '../../../input/useInputEventHandler.mjs';
import '../../../input/useInputWidth.mjs';
import '../../../input/input-group.mjs';
import '../../../input/type.mjs';
import '../../../loading/index.mjs';
import '../../../loading/directive.mjs';
import '../../../loading/plugin.mjs';
import '../../../loading/loading.mjs';
import '../../../loading/icon/gradient.mjs';
import '../../../_common/js/loading/circle-adapter.mjs';
import '../../../_common/js/utils/helper.mjs';
import '../../../utils/transfer-dom.mjs';
import '../../../loading/props.mjs';
import '../../../loading/type.mjs';
import '../../../select-input/useMultiple.mjs';
import '../../../tag-input/index.mjs';
import '../../../tag-input/tag-input.mjs';
import '../../../tag-input/props.mjs';
import '../../../tag-input/hooks/useTagScroll.mjs';
import '../../../tag-input/useTagList.mjs';
import '../../../tag/index.mjs';
import '../../../tag/tag.mjs';
import '../../../tag/props.mjs';
import '../../../tag/check-tag.mjs';
import '../../../tag/check-tag-props.mjs';
import '../../../tag/type.mjs';
import '../../../tag-input/hooks/useHover.mjs';
import '../../../tag-input/hooks/useDragSorter.mjs';
import '../../../tag-input/type.mjs';
import '../../../select-input/useOverlayInnerStyle.mjs';
import '../../../select-input/type.mjs';
import '../../../select/select-panel.mjs';
import '../../../_chunks/dep-f1423dd2.mjs';
import '../../../select/option.mjs';
import '../../../select/option-props.mjs';
import '../../../checkbox/index.mjs';
import '../../../checkbox/checkbox.mjs';
import '../../../checkbox/props.mjs';
import '../../../checkbox/constants.mjs';
import '../../../checkbox/group.mjs';
import '../../../_chunks/dep-2ca0e5ff.mjs';
import '../../../_chunks/dep-c5bb3a66.mjs';
import '../../../checkbox/checkbox-group-props.mjs';
import '../../../checkbox/type.mjs';
import '../../../select/helper.mjs';
import '../../../select/optionGroup.mjs';
import '../../../select/option-group-props.mjs';
import '../../../select/props.mjs';
import '../../../select/hooks/usePanelVirtualScroll.mjs';
import '../../../select/hooks/useSelectOptions.mjs';
import '../../../select/type.mjs';
import '../../../_chunks/dep-2c582e31.mjs';
import '../../utils/index.mjs';
import '../../../_common/js/color-picker/index.mjs';
import '../../../_common/js/color-picker/cmyk.mjs';
import '../../../_common/js/color-picker/color.mjs';
import '../../../_chunks/dep-84a9ab7d.mjs';
import '../../../_chunks/dep-fda161b3.mjs';
import '../../../_common/js/color-picker/draggable.mjs';
import '../../../input-number/index.mjs';
import '../../../input-number/input-number.mjs';
import '../../../button/index.mjs';
import '../../../button/button.mjs';
import '../../../button/props.mjs';
import '../../../button/type.mjs';
import '../../../input-number/props.mjs';
import '../../../input-number/useInputNumber.mjs';
import '../../../_common/js/input-number/number.mjs';
import '../../../_chunks/dep-869cd310.mjs';
import '../../../_common/js/input-number/large-number.mjs';
import '../../../_common/js/log/log.mjs';
import '../../../_common/js/log/index.mjs';
import '../../../input-number/type.mjs';
import './config.mjs';

var createCompounder = _createCompounder;
/**
 * Converts `string`, as space separated words, to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the upper cased string.
 * @example
 *
 * _.upperCase('--foo-bar');
 * // => 'FOO BAR'
 *
 * _.upperCase('fooBar');
 * // => 'FOO BAR'
 *
 * _.upperCase('__foo_bar__');
 * // => 'FOO BAR'
 */

var upperCase = createCompounder(function (result, word, index) {
  return result + (index ? ' ' : '') + word.toUpperCase();
});
var upperCase_1 = upperCase;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}

var FormatPanel = defineComponent({
  name: "FormatPanel",
  inheritAttrs: false,
  props: _objectSpread(_objectSpread({}, props), {}, {
    color: {
      type: Object
    },
    onModeChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    },
    onInputChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    }
  }),
  setup: function setup(props2) {
    var baseClassName = useBaseClassName();
    var formatModel = ref(props2.format);
    watch(function () {
      return [props2.format];
    }, function () {
      return formatModel.value = props2.format;
    });

    var handleModeChange = function handleModeChange(v) {
      formatModel.value = v;
      props2.onModeChange(v);
    };

    return {
      formatModel: formatModel,
      baseClassName: baseClassName,
      handleModeChange: handleModeChange
    };
  },
  render: function render() {
    var _this = this;

    var _slot;

    var formats = _toConsumableArray(FORMATS);

    var baseClassName = this.baseClassName,
        handleModeChange = this.handleModeChange;

    var newProps = _objectSpread(_objectSpread({}, this.$props), {}, {
      format: this.formatModel
    });

    var selectInputProps = _objectSpread({}, this.selectInputProps || {});

    return createVNode("div", {
      "class": "".concat(baseClassName, "__format")
    }, [createVNode("div", {
      "class": "".concat(baseClassName, "__format--item")
    }, [createVNode(Select, mergeProps({
      "size": "small",
      "class": "".concat(baseClassName, "__format-mode-select")
    }, selectInputProps, {
      "popupProps": {
        overlayClassName: "".concat(baseClassName, "__select-options")
      },
      "modelValue": _this.formatModel,
      "onUpdate:modelValue": function onUpdateModelValue($event) {
        return _this.formatModel = $event;
      },
      "onChange": handleModeChange
    }), _isSlot(_slot = formats.map(function (item) {
      return createVNode(Option, {
        "key": item,
        "value": item,
        "label": upperCase_1(item),
        "style": {
          fontSize: "12px"
        }
      }, null);
    })) ? _slot : {
      "default": function _default() {
        return [_slot];
      }
    })]), createVNode("div", {
      "class": "".concat(baseClassName, "__format--item")
    }, [createVNode(FormatInputs, newProps, null)])]);
  }
});

export { FormatPanel as default };
//# sourceMappingURL=index.mjs.map
