{"version":3,"file":"header.mjs","sources":["../../../src/color-picker/panel/header.tsx"],"sourcesContent":["import { defineComponent, PropType, ref, watch } from 'vue';\nimport { CloseIcon as TdCloseIcon } from 'tdesign-icons-vue-next';\n\nimport props from '../props';\nimport { COLOR_MODES } from '../const';\nimport { RadioGroup as TRadioGroup, RadioButton as TRadioButton } from '../../radio';\nimport { TdColorModes } from '../interfaces';\nimport { useBaseClassName } from '../hooks';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\n\nexport default defineComponent({\n  name: 'PanelHeader',\n  props: {\n    ...props,\n    mode: {\n      type: String as PropType<TdColorModes>,\n      default: 'color',\n    },\n    togglePopup: {\n      type: Function,\n    },\n    onModeChange: {\n      type: Function,\n      default: () => {\n        return () => {};\n      },\n    },\n  },\n  setup(props) {\n    const baseClassName = useBaseClassName();\n    const { CloseIcon } = useGlobalIcon({ CloseIcon: TdCloseIcon });\n    const modeValue = ref(props.mode);\n    const handleModeChange = (v: string) => props.onModeChange(v);\n    watch(\n      () => props.mode,\n      (v) => (modeValue.value = v),\n    );\n    return {\n      baseClassName,\n      CloseIcon,\n      modeValue,\n      handleModeChange,\n    };\n  },\n  render() {\n    if (this.colorModes?.length === 1) {\n      return null;\n    }\n    const { baseClassName, CloseIcon } = this;\n    return (\n      <div class={`${baseClassName}__head`}>\n        <div class={`${baseClassName}__mode`}>\n          {this.colorModes?.length === 1 ? (\n            COLOR_MODES[this.colorModes[0]]\n          ) : (\n            <TRadioGroup\n              variant=\"default-filled\"\n              size=\"small\"\n              v-model={this.modeValue}\n              onChange={this.handleModeChange}\n            >\n              {Object.keys(COLOR_MODES).map((key) => (\n                <TRadioButton key={key} value={key}>\n                  {COLOR_MODES[key]}\n                </TRadioButton>\n              ))}\n            </TRadioGroup>\n          )}\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","mode","type","String","togglePopup","Function","onModeChange","setup","baseClassName","useBaseClassName","useGlobalIcon","CloseIcon","TdCloseIcon","modeValue","ref","handleModeChange","v","watch","value","render","colorModes","length","_createVNode","COLOR_MODES","TRadioGroup","Object","keys","map","key","TRadioButton"],"mappings":"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"}