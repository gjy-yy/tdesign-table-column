{"version":3,"file":"input-adornment.mjs","sources":["../../src/input-adornment/input-adornment.tsx"],"sourcesContent":["import { defineComponent, h, VNodeChild } from 'vue';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport props from './props';\n\nexport default defineComponent({\n  name: 'TInputAdornment',\n  inheritAttrs: false,\n  props,\n  setup(props, { slots }) {\n    const COMPONENT_NAME = usePrefixClass('input-adornment');\n    const renderTNodeJSX = useTNodeJSX();\n\n    const renderAddon = (h: any, type: string, addon: string | Function | undefined): VNodeChild => {\n      let addonNode: VNodeChild;\n      if (slots[type]) {\n        addonNode = slots[type](null);\n      } else if (typeof addon === 'string') {\n        addonNode = addon;\n      } else if (typeof addon === 'function') {\n        addonNode = addon(h);\n      } else {\n        addonNode = null;\n      }\n      return addonNode ? <span class={`${COMPONENT_NAME.value}__${type}`}>{addonNode}</span> : addonNode;\n    };\n    return () => {\n      const prepend = renderAddon(h, 'prepend', props.prepend);\n      const append = renderAddon(h, 'append', props.append);\n      const defaultSlot: VNodeChild[] = renderTNodeJSX('default') || [null];\n      const className = [\n        COMPONENT_NAME.value,\n        {\n          [`${COMPONENT_NAME.value}--prepend`]: prepend,\n          [`${COMPONENT_NAME.value}--append`]: append,\n        },\n      ];\n\n      if (!prepend && !append) {\n        return defaultSlot[0];\n      }\n\n      return (\n        <div class={className}>\n          {prepend}\n          {defaultSlot[0]}\n          {append}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","inheritAttrs","props","setup","slots","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","renderAddon","h","type","addon","addonNode","_createVNode","value","prepend","append","defaultSlot","className"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,sBAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,iBADuB;AAE7BC,EAAAA,YAAc,EAAA,KAFe;AAG7BC,EAAAA,KAAA,EAAAA,KAH6B;EAI7BC,KAJ6B,EAAA,SAAA,KAAA,CAIvBD,MAJuB,EAIL,IAAA,EAAA;IAAA,IAATE,KAAS,QAATA,KAAS,CAAA;AAChB,IAAA,IAAAC,cAAA,GAAiBC,eAAe,kBAAhC,CAAA;IACN,IAAMC,iBAAiBC,WAAY,EAAnC,CAAA;;IAEA,IAAMC,WAAc,GAAA,SAAdA,WAAc,CAACC,EAAD,EAASC,IAAT,EAAuBC,KAAvB,EAA4E;AAC1F,MAAA,IAAAC,SAAA,CAAA;;AACJ,MAAA,IAAIT,MAAMO,KAAV,EAAiB;AACHE,QAAAA,SAAA,GAAAT,KAAA,CAAMO,IAAN,CAAA,CAAY,IAAZ,CAAA,CAAA;AACd,OAFA,MAEA,IAAW,OAAOC,KAAP,KAAiB,QAA5B,EAAsC;AACxBC,QAAAA,SAAA,GAAAD,KAAA,CAAA;AACd,OAFA,MAEA,IAAW,OAAOA,KAAP,KAAiB,UAA5B,EAAwC;AACtCC,QAAAA,SAAA,GAAYD,MAAMF,GAAlB,CAAA;AACK,OAFP,MAEO;AACOG,QAAAA,SAAA,GAAA,IAAA,CAAA;AACd,OAAA;;AACO,MAAA,OAAAA,SAAA,GAAAC,WAAA,CAAA,MAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAA,MAAA,CAA4BT,eAAeU,KAA3C,EAAA,IAAA,CAAA,CAAA,MAAA,CAAqDJ,IAArD,CAAA;OAA8DE,EAAAA,CAAAA,SAA9D,KAAkFA,SAAlF,CAAA;KAXT,CAAA;;AAaA,IAAA,OAAO,YAAM;AAAA,MAAA,IAAA,KAAA,CAAA;;MACX,IAAMG,OAAU,GAAAP,WAAA,CAAYC,CAAZ,EAAe,SAAf,EAA0BR,OAAMc,OAAhC,CAAhB,CAAA;MACA,IAAMC,MAAS,GAAAR,WAAA,CAAYC,CAAZ,EAAe,QAAf,EAAyBR,OAAMe,MAA/B,CAAf,CAAA;MACA,IAAMC,WAA4B,GAAAX,cAAA,CAAe,SAAf,CAAA,IAA6B,CAAC,IAAD,CAA/D,CAAA;AACA,MAAA,IAAMY,SAAY,GAAA,CAChBd,cAAe,CAAAU,KADC,gDAGVV,cAAA,CAAeU,KAHL,EAAA,WAAA,CAAA,EAGwBC,OAHxB,CAIVX,EAAAA,eAAAA,CAAAA,KAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAA,CAAeU,KAJL,EAAA,UAAA,CAAA,EAIuBE,MAJvB,CAAlB,EAAA,KAAA,EAAA,CAAA;;AAQI,MAAA,IAAA,CAACD,OAAD,IAAY,CAACC,MAAb,EAAqB;QACvB,OAAOC,WAAY,CAAA,CAAA,CAAnB,CAAA;AACF,OAAA;;AAGE,MAAA,OAAAJ,WAAA,CAAA,KAAA,EAAA;QAAA,OAAYK,EAAAA,SAAAA;AAAZ,OAAA,EAAA,CACGH,OADH,EAEGE,WAAY,CAAA,CAAA,CAFf,EAGGD,MAHH,CAAA,CAAA,CAAA;KAjBJ,CAAA;AAwBF,GAAA;AA7C6B,CAAA,CAA/B;;;;"}