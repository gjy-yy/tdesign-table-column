{"version":3,"file":"color.mjs","sources":["../../../../src/_common/js/color-picker/color.ts"],"sourcesContent":["import tinyColor from 'tinycolor2';\nimport { cmykInputToColor, rgb2cmyk } from './cmyk';\nimport {\n  parseGradientString, GradientColors, GradientColorPoint, isGradientColor\n} from './gradient';\n\nexport interface ColorObject {\n  alpha: number;\n  css: string;\n  hex: string;\n  hex8: string;\n  hsl: string;\n  hsla: string;\n  hsv: string;\n  hsva: string;\n  rgb: string;\n  rgba: string;\n  saturation: number;\n  value: number;\n  isGradient: boolean;\n  linearGradient?: string;\n}\n\ninterface ColorStates {\n  s: number;\n  v: number;\n  h: number;\n  a: number;\n}\n\ninterface GradientStates {\n  colors: GradientColorPoint[];\n  degree: number;\n  selectedId: string;\n  css?: string;\n}\n\nconst mathRound = Math.round;\nconst hsv2rgba = (states: ColorStates): tinyColor.ColorFormats.RGBA => tinyColor(states).toRgb();\nconst hsv2hsva = (states: ColorStates): tinyColor.ColorFormats.HSVA => tinyColor(states).toHsv();\nconst hsv2hsla = (states: ColorStates): tinyColor.ColorFormats.HSLA => tinyColor(states).toHsl();\n\n/**\n * 将渐变对象转换成字符串\n * @param object\n * @returns\n */\nexport const gradientColors2string = (object: GradientColors): string => {\n  const { points, degree } = object;\n  const colorsStop = points\n    .sort((pA, pB) => pA.left - pB.left)\n    .map((p) => `${p.color} ${Math.round(p.left * 100) / 100}%`);\n\n  return `linear-gradient(${degree}deg,${colorsStop.join(',')})`;\n};\n\n/**\n * 去除颜色的透明度\n * @param color\n * @returns\n */\nexport const getColorWithoutAlpha = (color: string) => tinyColor(color).setAlpha(1).toHexString();\n\n// 生成一个随机ID\nexport const genId = () => (1 + Math.random() * 4294967295).toString(16);\n\n/**\n * 生成一个渐变颜色\n * @param left\n * @param color\n * @returns\n */\nexport const genGradientPoint = (left: number, color: string): GradientColorPoint => ({\n  id: genId(),\n  left,\n  color,\n});\n\nexport class Color {\n  states: ColorStates = {\n    s: 100,\n    v: 100,\n    h: 100,\n    a: 1,\n  };\n\n  originColor: string;\n\n  isGradient: boolean;\n\n  gradientStates: GradientStates = {\n    colors: [],\n    degree: 0,\n    selectedId: null,\n    css: '',\n  };\n\n  constructor(input: string) {\n    this.update(input);\n  }\n\n  update(input: string) {\n    if (input === this.originColor) {\n      return;\n    }\n    this.originColor = input;\n    this.isGradient = false;\n    const gradientColors = parseGradientString(input);\n    let colorInput = input;\n    if (gradientColors) {\n      this.isGradient = true;\n      const object = gradientColors as GradientColors;\n      const points = object.points.map((c) => genGradientPoint(c.left, c.color));\n      this.gradientStates = {\n        colors: points,\n        degree: object.degree,\n        selectedId: points[0]?.id || null,\n      };\n      this.gradientStates.css = this.linearGradient;\n      colorInput = this.gradientSelectedPoint?.color;\n    }\n\n    this.updateStates(colorInput);\n  }\n\n  get saturation() {\n    return this.states.s;\n  }\n\n  set saturation(value) {\n    this.states.s = Math.max(0, Math.min(100, value));\n    this.updateCurrentGradientColor();\n  }\n\n  get value() {\n    return this.states.v;\n  }\n\n  set value(value) {\n    this.states.v = Math.max(0, Math.min(100, value));\n    this.updateCurrentGradientColor();\n  }\n\n  get hue() {\n    return this.states.h;\n  }\n\n  set hue(value) {\n    this.states.h = Math.max(0, Math.min(360, value));\n    this.updateCurrentGradientColor();\n  }\n\n  get alpha() {\n    return this.states.a;\n  }\n\n  set alpha(value) {\n    this.states.a = Math.max(0, Math.min(1, Math.round(value * 100) / 100));\n    this.updateCurrentGradientColor();\n  }\n\n  get rgb() {\n    const { r, g, b } = hsv2rgba(this.states);\n    return `rgb(${mathRound(r)}, ${mathRound(g)}, ${mathRound(b)})`;\n  }\n\n  get rgba() {\n    const {\n      r, g, b, a\n    } = hsv2rgba(this.states);\n    return `rgba(${mathRound(r)}, ${mathRound(g)}, ${mathRound(b)}, ${a})`;\n  }\n\n  get hsv() {\n    const { h, s, v } = this.getHsva();\n    return `hsv(${h}, ${s}%, ${v}%)`;\n  }\n\n  get hsva() {\n    const {\n      h, s, v, a\n    } = this.getHsva();\n    return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n  }\n\n  get hsl() {\n    const { h, s, l } = this.getHsla();\n    return `hsl(${h}, ${s}%, ${l}%)`;\n  }\n\n  get hsla() {\n    const {\n      h, s, l, a\n    } = this.getHsla();\n    return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n  }\n\n  get hex() {\n    return tinyColor(this.states).toHexString();\n  }\n\n  get hex8() {\n    return tinyColor(this.states).toHex8String();\n  }\n\n  get cmyk() {\n    const {\n      c, m, y, k\n    } = this.getCmyk();\n    return `cmyk(${c}, ${m}, ${y}, ${k})`;\n  }\n\n  get css() {\n    if (this.isGradient) {\n      return this.linearGradient;\n    }\n    return this.rgba;\n  }\n\n  get linearGradient() {\n    const { gradientColors, gradientDegree } = this;\n    return gradientColors2string({\n      points: gradientColors,\n      degree: gradientDegree,\n    });\n  }\n\n  get gradientColors() {\n    return this.gradientStates.colors;\n  }\n\n  set gradientColors(colors: GradientColorPoint[]) {\n    this.gradientStates.colors = colors;\n    this.gradientStates.css = this.linearGradient;\n  }\n\n  get gradientSelectedId() {\n    return this.gradientStates.selectedId;\n  }\n\n  set gradientSelectedId(id: string) {\n    if (id === this.gradientSelectedId) {\n      return;\n    }\n    this.gradientStates.selectedId = id;\n    this.updateStates(this.gradientSelectedPoint?.color);\n  }\n\n  get gradientDegree() {\n    return this.gradientStates.degree;\n  }\n\n  set gradientDegree(degree: number) {\n    this.gradientStates.degree = Math.max(0, Math.min(360, degree));\n    this.gradientStates.css = this.linearGradient;\n  }\n\n  get gradientSelectedPoint() {\n    const { gradientColors, gradientSelectedId } = this;\n    return gradientColors.find((color) => color.id === gradientSelectedId);\n  }\n\n  getFormatsColorMap() {\n    return {\n      HEX: this.hex,\n      CMYK: this.cmyk,\n      RGB: this.rgb,\n      RGBA: this.rgba,\n      HSL: this.hsl,\n      HSLA: this.hsla,\n      HSV: this.hsv,\n      HSVA: this.hsva,\n      CSS: this.css,\n    };\n  }\n\n  updateCurrentGradientColor() {\n    const { isGradient, gradientColors, gradientSelectedId } = this;\n    const { length } = gradientColors;\n    const current = this.gradientSelectedPoint;\n    if (!isGradient || length === 0 || !current) {\n      return false;\n    }\n    const index = gradientColors.findIndex((color) => color.id === gradientSelectedId);\n    const newColor = {\n      ...current,\n      color: this.rgba,\n    };\n    gradientColors.splice(index, 1, newColor);\n    this.gradientColors = gradientColors;\n    return this;\n  }\n\n  updateStates(input: string) {\n    const color = tinyColor(cmykInputToColor(input));\n    const hsva = color.toHsv();\n    this.states = hsva;\n  }\n\n  getRgba() {\n    const {\n      r, g, b, a\n    } = hsv2rgba(this.states);\n    return {\n      r: mathRound(r),\n      g: mathRound(g),\n      b: mathRound(b),\n      a,\n    };\n  }\n\n  getCmyk() {\n    const { r, g, b } = this.getRgba();\n    const [c, m, y, k] = rgb2cmyk(r, g, b);\n    return {\n      c: mathRound(c * 100),\n      m: mathRound(m * 100),\n      y: mathRound(y * 100),\n      k: mathRound(k * 100),\n    };\n  }\n\n  getHsva(): tinyColor.ColorFormats.HSVA {\n    let {\n      h, s, v, a\n    } = hsv2hsva(this.states);\n    h = mathRound(h);\n    s = mathRound(s * 100);\n    v = mathRound(v * 100);\n    a *= 1;\n    return {\n      h,\n      s,\n      v,\n      a,\n    };\n  }\n\n  getHsla(): tinyColor.ColorFormats.HSLA {\n    let {\n      h, s, l, a\n    } = hsv2hsla(this.states);\n    h = mathRound(h);\n    s = mathRound(s * 100);\n    l = mathRound(l * 100);\n    a *= 1;\n    return {\n      h,\n      s,\n      l,\n      a,\n    };\n  }\n\n  /**\n   * 判断输入色是否与当前色相同\n   * @param color\n   * @returns\n   */\n  equals(color: string): boolean {\n    return tinyColor.equals(this.rgba, color);\n  }\n\n  /**\n   * 校验输入色是否是一个有效颜色\n   * @param color\n   * @returns\n   */\n  static isValid(color: string): boolean {\n    if (parseGradientString(color)) {\n      return true;\n    }\n    return tinyColor(color).isValid();\n  }\n\n  static hsva2color(h: number, s: number, v: number, a: number) {\n    return tinyColor({\n      h, s, v, a\n    }).toHsvString();\n  }\n\n  static hsla2color(h: number, s: number, l: number, a: number) {\n    return tinyColor({\n      h, s, l, a\n    }).toHslString();\n  }\n\n  static rgba2color(r: number, g: number, b: number, a: number) {\n    return tinyColor({\n      r, g, b, a\n    }).toHsvString();\n  }\n\n  static hex2color(hex: string, a: number) {\n    const color = tinyColor(hex);\n    color.setAlpha(a);\n    return color.toHexString();\n  }\n\n  /**\n   * 对象转颜色字符串\n   * @param object\n   * @param format\n   * @returns\n   */\n  static object2color(object: any, format: string) {\n    if (format === 'CMYK') {\n      const {\n        c, m, y, k\n      } = object;\n      return `cmyk(${c}, ${m}, ${y}, ${k})`;\n    }\n    const color = tinyColor(object, {\n      format,\n    });\n    return color.toRgbString();\n  }\n\n  /**\n   * 是否是渐变色\n   * @param input\n   * @returns\n   */\n  static isGradientColor = (input: string) => !!isGradientColor(input);\n\n  /**\n   * 比较两个颜色是否相同\n   * @param color1\n   * @param color2\n   * @returns\n   */\n  static compare = (color1: string, color2: string): boolean => {\n    const isGradientColor1 = Color.isGradientColor(color1);\n    const isGradientColor2 = Color.isGradientColor(color2);\n    if (isGradientColor1 && isGradientColor2) {\n      const gradientColor1 = gradientColors2string(parseGradientString(color1) as GradientColors);\n      const gradientColor2 = gradientColors2string(parseGradientString(color2) as GradientColors);\n      return gradientColor1 === gradientColor2;\n    }\n    if (!isGradientColor1 && !isGradientColor2) {\n      return tinyColor.equals(color1, color2);\n    }\n    return false;\n  };\n}\n\nconst COLOR_OBJECT_OUTPUT_KEYS = [\n  'alpha',\n  'css',\n  'hex',\n  'hex8',\n  'hsl',\n  'hsla',\n  'hsv',\n  'hsva',\n  'rgb',\n  'rgba',\n  'saturation',\n  'value',\n  'isGradient',\n];\n\n/**\n * 获取对外输出的color对象\n * @param color\n * @returns\n */\nexport const getColorObject = (color: Color): ColorObject => {\n  if (!color) {\n    return null;\n  }\n  const colorObject = Object.create(null);\n  // eslint-disable-next-line no-return-assign\n  COLOR_OBJECT_OUTPUT_KEYS.forEach((key) => (colorObject[key] = color[key]));\n  if (color.isGradient) {\n    colorObject.linearGradient = color.linearGradient;\n  }\n  return colorObject;\n};\n\nexport default Color;\n"],"names":["mathRound","Math","round","hsv2rgba","states","tinyColor","toRgb","hsv2hsva","toHsv","hsv2hsla","toHsl","gradientColors2string","object","points","degree","colorsStop","sort","pA","pB","left","map","p","color","join","getColorWithoutAlpha","setAlpha","toHexString","genId","random","toString","genGradientPoint","id","Color","input","s","v","h","a","colors","selectedId","css","update","originColor","isGradient","gradientColors","parseGradientString","colorInput","c","gradientStates","linearGradient","gradientSelectedPoint","updateStates","value","max","min","updateCurrentGradientColor","r","g","b","getHsva","getHsla","l","toHex8String","getCmyk","m","y","k","rgba","gradientDegree","gradientSelectedId","find","HEX","hex","CMYK","cmyk","RGB","rgb","RGBA","HSL","hsl","HSLA","hsla","HSV","hsv","HSVA","hsva","CSS","length","current","index","findIndex","newColor","splice","cmykInputToColor","getRgba","rgb2cmyk","equals","isValid","toHsvString","toHslString","format","toRgbString","isGradientColor","color1","color2","isGradientColor1","isGradientColor2","gradientColor1","gradientColor2","COLOR_OBJECT_OUTPUT_KEYS","getColorObject","colorObject","Object","create","forEach","key"],"mappings":"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"}