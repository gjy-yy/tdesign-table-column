'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-1f59b9f3.js');
var vue = require('vue');
var utils_renderFn = require('../utils/render-fn.js');
var utils_useSizeProps = require('../utils/use-size-props.js');
require('../utils/use-common-classname.js');
require('../utils/config-context.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 16 16",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M4.33 1.33V3h-3v1.33h4.98c-.35.89-.82 1.7-1.4 2.45-.36-.48-.69-1-.97-1.53l-.3-.6-1.19.61.3.6c.36.69.78 1.33 1.27 1.93-.6.6-1.28 1.11-2.02 1.54l-.58.33.67 1.16.58-.34c.82-.47 1.57-1.05 2.25-1.7.67.65 1.43 1.23 2.25 1.7l.57.34.67-1.16-.58-.33c-.73-.43-1.41-.95-2.02-1.54a11.31 11.31 0 001.92-3.46h.94V3h-3V1.33H4.33zM11 6.11l-3.89 8.2 1.2.58.74-1.56h3.9l.73 1.56 1.2-.57L11 6.1zM12.31 12H9.7L11 9.22 12.31 12z",
      "fillOpacity": 0.9
    }
  }]
};
var translate1 = vue.defineComponent({
  name: "Translate1Icon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = vue.computed(() => props.size);
    var {
      className,
      style
    } = utils_useSizeProps["default"](propsSize);
    var finalCls = vue.computed(() => ["t-icon", "t-icon-translate-1", className.value]);
    var finalStyle = vue.computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = vue.computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => utils_renderFn["default"](element, finalProps.value);
  }
});

exports["default"] = translate1;
//# sourceMappingURL=translate-1.js.map
